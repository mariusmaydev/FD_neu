@use '../general/main' as Gmain;
@use '../themes/theme1/vars';
@use '../themes/theme1/main' as Tmain;
@use '../general/buttons' as Gbuttons;
@use '../../../../Splint/scss/tools/tools' as S_tools;
@use '../../../../Splint/scss/Elements/AdaptiveTable' as S_adaptTable;
@use "sass:color";
// @import '../general/NavigationBar.scss';
// @import '../ADMIN/designs/designs.scss';

$color-image-hover         : rgba(64, 64, 64, 0.553);

@mixin imageMenuDesktop(){
    .ImageMenu_MAIN {
        position: absolute;
        border: none;
        background-color: transparent;
        user-select: all;
        pointer-events: all;
        z-index: 1001;
        top: 7vh;
        left: 5%;
        width: 90%;
        height: calc(100% - 7vh);
        padding: 0;
        display: flex;
        flex-direction: column;
        justify-content: stretch;
        align-items: center;
        overflow: visible;
        > .ImageMenuFilter {
            background-color: transparent;
            display: flex;
            flex-direction: row;
            order: 0;
            flex-grow: 0;
            flex-shrink: 3;
            padding: 0rem;
            position: relative;
            width: 102%;
            left: 0;
            margin: 0;
            margin-left: 4.2rem;
            margin-top: 0.5rem;
            margin-bottom: 0;
            height: max-content;
            z-index: 1001;
            > .buttonCloseContainer {
                order: 1;
                @include Tmain.TContainer_basic();
                padding: 0;
                > .closeBT {
                    margin: 0.25rem;
                    @include Tmain.TButton_secondary(1);
                    aspect-ratio: 1/1;
                    width: auto;
                    height: calc(100% - 0.5rem);
                    > span {
                        font-size: 2rem;
                    }
                }
            }
            .n_inputDiv {
                @include Tmain.TContainer_basic();
                order: 0;
                width: calc(100% - 0.5rem);
                margin-top: 0;
                margin-bottom: 0;
                    margin-left: 0rem;
                    padding-left: 0.5rem;
                > .inputBody {
                    > input {
                        padding-top: 1.5rem;
                        margin-bottom: 0.25rem;
                    }
                    > button {
                        margin: 0.25rem;
                        @include Tmain.TButton_secondary(1);
                        order: 1;
                        aspect-ratio: 1/1;
                        width: auto;
                        height: calc(100% - 0.5rem);
                        > span {
                            font-size: 2rem;
                        }
                    }
                    > label {
                        padding-left: 0.5rem;
                    }
                }
                > button {
                    &:hover {
                        background-color: vars.$color-primary;
                    }
                }
        
            } 
        }
        @include S_adaptTable.AdaptiveTableStyle(vars.$border-radius);
        >.AdaptiveTableMain {
            > .ListMain {
                margin-top: 0.5rem;
                > .column {
                    width: 30%;
                    -webkit-box-orient: horizontal;
                    box-sizing: border-box;
                    padding-inline: 0.25rem;
                    > .ListElement {
                        padding: 0.15rem;
                        @include Tmain.TContainer_basic();
                        background-color: transparent;
                        transition: background-color 0.2s ease-out ;
                        &:hover {
                            background-color: vars.$NEW-color-container-background;
                            // background-color: vars.$NEW-color-container-background;
                            > .bottomDiv {
                                @include Tmain.TContainer_basic();
                                background-color: transparent;
                                box-shadow: none;
                                border-top-right-radius: 0;
                                border-top-left-radius: 0;
                                height: 2.6rem;
                            }
                        }
                        > img {
                            border-radius: vars.$NEW-border-radius-main;
                        }
                        > .hoverDiv {
                            margin: 0.3rem;
                            margin-bottom: 0;
                            width: calc(100% - 0.6rem);
                            height: calc(100% - 0.3rem);
                            box-shadow: none !important;
                            background-color: transparent !important;;
                            transition: opacity 100ms linear 100ms;
                            > .buttonDiv {
                                display: flex;
                                flex-direction: row;
                                justify-content: stretch;
                                position: absolute;
                                margin-top: auto;
                                bottom: 0.3rem;
                                box-sizing: border-box;
                                width: 100%;
                                height: max-content;
                                padding: 0rem;
                                // background-color: vars.$color-T_container;
                                background-color: transparent;
                                > button {
                                    box-sizing: border-box;
                                    width: 100%;
                                    @include Tmain.TButton_primary(1);
                                    &.use {
                                        > span {
                                            // font-size: 1rem;
                                        }
                                    }
                                }
                                > .likeDiv {
                                    display: none;
                                    position: relative;
                                    width: min-content;
                                    overflow: hidden;
                                    height: 100%;
                                    > button {
                                        width: auto;
                                        height: 100%;
                                        @include Tmain.TButton_secondary(1.5);
                                        aspect-ratio: 1/1;
                                        &:hover {
                                            > span {
                                                &:not(.description) {
                                                    // text-shadow: 2px 2px 0px color.adjust(vars.$color-primary );
                                                    transition-duration: 200ms;
                                                    // color: vars.$color-primary;
                                                }
                                            }
                                        }
                                        > span {
                                            font-size: 2rem;
                                            // text-shadow: 0px 0px 0px transparent;
                                            // transition: text-shadow cubic-bezier(0, 0.52, 1, 1) 2s;
                                            // color: vars.$color-primary-text;
                                            // font-size: 3rem;
                                        }
                                    }
                                    > .likePoint {

                                        @include Tmain.preventSelect();
                                        cursor: pointer;
                                        position: absolute;
                                        z-index: 1;
                                        left: 50%;
                                        top: 60%;
                                        background-color: vars.$color-primary;
                                        border-radius: 50%;
                                        width: 1em;
                                        height: 1em;
                                        aspect-ratio: 1/1;
                                        display: flex;
                                        justify-content: center;
                                    }
                                }
                            }
                            // > .tagsDiv {
                            //     position: absolute;
                            //     bottom: 3.5rem;
                            //     display: flex;
                            //     flex-direction: row;
                            //     justify-content: left;
                            //     margin: 0.35rem;
                            //     > Button {
                            //         @include Tmain.TButton_simple();
                            //         background-color: transparent !important;
                            //         padding: 0.1rem;
                            //         margin: 0.2rem;
                            //         margin-inline: 0.1rem;
                            //         &:hover {
                            //             >span {
                            //                 text-decoration: underline;
                            //                 &::before {
                            //                     content: "#";
                            //                     text-decoration: underline;
                            //                 }

                            //             }
                            //         }
                            //         > span {
                            //             // color: black;
                            //             font-size: 1rem;
                            //             mix-blend-mode: exclusion;
                            //             &::before {
                            //                 content: "#";
                            //             }
                            //         }
                            //     }
                            // }
                        }
                        > .bottomDiv {
                            background-color: vars.$color-T_container;
                            height: 0rem;
                            transition: height 250ms ease-in-out;
                            // display: none;
                            > button {
                                > span {

                                }
                            }
                        }
                    }
                }
            }
        }
        > .AdaptiveTableMain {
            &::-webkit-scrollbar {
                display: none;
            }
              
            /* Track */
            &::-webkit-scrollbar-track {
                display: none;
            }
            
            /* Handle */
            &::-webkit-scrollbar-thumb {
                display: none;
            }
             
            /* Handle on hover */
            &::-webkit-scrollbar-thumb:hover {
                display: none;
            }
            // > .ListMain {

            // }
        }
    }
    // > .Background {
    //     position: absolute;
    //     user-select: all;
    //     pointer-events: all;
    //     top: 0;
    //     left: 0;
    //     width: 100%;
    //     height: 100%;
    //     background-color: rgba(43, 43, 43, 0.651);
    //     background-color: rgba(225, 225, 225, 0.479);
    // }

    .HashtagListMenu {
        position: relative;
        margin: 1%;
        padding: 0;
        display: flex;
        flex-wrap: wrap;
        width: 100%;
        height: max-content;
        font-size: 1em;
        > div {
            @include Gmain.box-shadow(1);
            background-color: vars.$color-primary-light;
            $map: (
                background-color    : vars.$color-primary,
                border              : 0px solid yellow
                );
            @include Gbuttons.onActive($map);
            border-radius: vars.$border-radius;
            padding: 0.2em;
            margin: 0.15em;
            transition: background-color 0.2s;
            transition: transform 0.2s;
            &:hover {
                background-color: vars.$color-primary-Dark;
                transform: translateY(-10%);
            }
            > button {
                position: relative;
                padding: 0;
                margin: 0;
                vertical-align: sub;
                font-size: 1em;
                box-sizing: content-box;
                display: inline;
                > span {
                    position: relative;
                    display: contents;
                    box-sizing: border-box;
                }
            }
        }
    }



    .divider {
        display: none;
        order: 2;
        flex-grow: 0;
        flex-shrink: 1;
        position: relative;
        margin-inline: 1%;
        top: 3%;
        height: 94%;
        width: 1px;
        border: none;
        border-left: 1px solid black;
    }
}
