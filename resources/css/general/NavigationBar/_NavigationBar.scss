@use '../main' as Gmain;
@use '../../themes/theme1/vars';
@use '../../themes/theme1/main' as Tmain;
@use '../../../../../Splint/scss/tools/tools' as S_tools;
@use 'sass:color';
@use '../mediaQueries';


@mixin shadowHelper($dark, $darkColor, $light, $lightColor, $trans: null, $skew: 0deg){
    box-shadow: $dark $dark 0px 0px $darkColor,
                inset 0px 0px 0px 0px $lightColor,
                inset 0px ($light) 0px 0px $lightColor;

    @if($trans != null){
        transform: translateX($trans) translateY($trans) skewX($skew);
    }
}
@mixin shadowHelper_basic($dark, $darkColor, $trans: null, $skew: 0deg){
    box-shadow: 0px $dark 0px 0px $darkColor;

    @if($trans != null){
        transform: translateX($trans) translateY($trans) skewX($skew);
    }
}
.NavigationBar {
    
    $color-box-shadow-dark      : vars.$color-header-Dark;
    $color-box-shadow-light     : color.adjust(vars.$color-header-Dark, $alpha: -0.1);
    $color-main                 : vars.$color-header;
    $color-main-active          : vars.$color-header-active;
    $color-text                 : vars.$color-primary-text;
    $color-primary              : vars.$color-primary;
    $skew                       : vars.$header-skew;

    &[state*='active']{
        // $color-main: red;
        > .content {
            > .Logo {
                > .inner {
                    background-color: $color-main-active !important;
                    > .inner1 {
                        // background-color: $color-main-active !important;
                    }
                }
            }
            > .Cart {
                background-color: $color-main-active !important;
            }
            > .Original {
                background-color: $color-main-active !important;
            }
            > .Design {
                background-color: $color-main-active !important;
            }
        }
    }

    // $shadow-size-base           : 3px;
    // $shadow-size-base_inner     : -2px;
    // $shadow-size-large          : 5px;
    // $shadow-size-large_inner    : -3px;
    // $shadow-size-large_translate: -2px;

    $shadow-size-base           : 0px;
    $shadow-size-base_inner     : -0px;
    $shadow-size-large          : 0px;
    $shadow-size-large_inner    : -3px;
    $shadow-size-large_translate: -0px;

    $top                        : false;
    $left                       : false;
    $bottom                     : true;
    $right                      : false;

    $duration                   : 50ms;


    transform: translateY(0px);
    &:not([loaded*='true']){
        visibility: hidden;
        transform: translateY(-10rem);
    }
    transition: transform 0.2s ease-out;
    visibility: visible;

    position: fixed;
    z-index: 1002;
    // background-color: $color-header;
    background-color: transparent;
    top: 0;
    left: 0;
    height: 7vh;
    padding: 0%;
    margin-top: 0.5vh;
    box-sizing: border-box;
    width: 100vw;
    @include mediaQueries.forMediaBreakpoint(mobile-small){
        height: vars.$NavBar-height-mobile-small;
        margin-top: 0.5vh;
    }
    @include mediaQueries.forMediaBreakpoint(mobile){
        height: vars.$NavBar-height-mobile;
        margin-top: 0.5vh;
    }
    @include mediaQueries.forMediaBreakpoint(desktop){
        height: vars.$NavBar-height-desktop;
        margin-top: 0.5vh;
    }
    >.content {
        background-color: transparent;
        position: relative;
        margin: 0.5rem;
        margin-inline: calc(0.5rem + 0.5vh);
        margin-bottom: 0;
        width: calc(100% - calc(1rem + 1vh));
        height: calc(7vh - 0.5rem);
        box-sizing: border-box;
        display: grid;
    
        grid-template-areas: "Logo Design Original shoppingCart"; 
        grid-template-columns: [Logo] 1fr [Design] minmax(min-content, max-content) [Original] minmax(min-content, max-content) [shoppingCart] minmax(min-content, max-content);
        grid-template-rows: 100%;
        grid-auto-flow: dense;
        align-content: stretch;
        gap: 0.2rem;
        // justify-items: center;
        // justify-content: safe;
        align-items: stretch;
        padding: 0;
        @include mediaQueries.forMediaBreakpoint(mobile-small){
            height: calc(vars.$NavBar-height-mobile-small - 0.5rem);
        }
        @include mediaQueries.forMediaBreakpoint(mobile){
            height: calc(vars.$NavBar-height-mobile - 0.5rem);
        }
        @include mediaQueries.forMediaBreakpoint(desktop){
            height: calc(vars.$NavBar-height-desktop - 0.5rem);
        }
        div {
            @include Tmain.TContainer_basic();
            border-radius: 0;
            box-sizing: border-box;
            position: relative;
            padding: 0;
            height: 100%;
            display: flex;
            align-items: center;
            // justify-content: ;
                border: none;
                box-shadow: none;
            > button {
                position: relative;
                // top: 0.4em;
            }
            &.Logo {
                position: relative;
                grid-area: Logo;
                left: 0;
                // top: -1%;
                height: 100%;
                width: auto;
                box-shadow: none;
                border: none;
                border-radius: 0;
                background-color: transparent;
                > .inner {
                    cursor: pointer;
                    // box-sizing: border-box;
                    width: 1%;
                    overflow: visible;
                    -ms-transform: skewX(-($skew)); /* IE 9 */
                    -webkit-transform: skewX(-($skew)); /* Safari */
                    transform: skewX(-($skew));
                    @include shadowHelper($shadow-size-base, $color-box-shadow-dark, $shadow-size-base_inner, $color-primary);
                    transition: width 0.15s ease-in-out, box-shadow $duration ease, transform $duration ease;
                    &[state*='active']{
                        width: 100%;
                        &:hover {
                            @include shadowHelper($shadow-size-large, $color-box-shadow-light, $shadow-size-large_inner, $color-primary, $shadow-size-large_translate, -($skew));
                            color: $color-text ;
                        }
                        > .inner1 {
                            @include shadowHelper(0px, $color-box-shadow-dark, 0px, $color-primary);
                            background-color: transparent;
                            transition: box-shadow 50ms linear, transform $duration ease, background-color 0.15s ease-in-out;
                                        // box-shadow: none;
                        }
                    }
                    &:not([state*='active']){
                        @include shadowHelper(0px, $color-box-shadow-dark, 0px, $color-primary);
                        > .inner1 {
                            &:hover {
                                @include shadowHelper($shadow-size-large, $color-box-shadow-light, $shadow-size-large_inner, $color-primary, $shadow-size-large_translate);
                                color: $color-text ;
                            }
                        }
                    }
                    background-color: $color-main;
                    > .inner1 {
                        cursor: pointer;
                        width: calc(max-content + 23rem);
                        padding-inline: 0.5em;
                        padding-right: 2em;
                        background-color: $color-main;
                        @include shadowHelper($shadow-size-base, $color-box-shadow-dark, $shadow-size-base_inner, $color-primary);
                        transition: box-shadow $duration ease, transform $duration ease, background-color 0.15s ease-in-out;
                        
                        // &:hover {
                        //     @include S_tools.SPLINT-border-inset($color-primary, 3px, false, false, true, true);
                        //     > span {
                        //         color: $color-primary-text;
                        //     }
                        // }
                        background-color: $color-main;
                        > .content {
                            box-shadow: none;
                            height: 100%;
                            @include mediaQueries.forMediaBreakpoint(mobile-small){
                                height: 90%;
                                margin-bottom: 2.5%;
                            }
                            width: max-content;
                            left: 0.75rem;
                            padding: 0.6rem;
                            padding-bottom: 0.7rem;
                            padding-top: 0.5rem;
                            background-color: transparent;
                            -ms-transform: skewX($skew); /* IE 9 */
                            -webkit-transform: skewX($skew); /* Safari */
                            transform: skewX($skew);
                            img {
                                @include Tmain.preventSelect();
                                position: relative;
                                height: 100%;
                                transform: scale(1.2);
                                cursor: pointer;
                            }
                        }
                    }
                }
            }
            &.Cart {
                position: relative;
                grid-area: shoppingCart;
                height: 100%;
                padding: 0rem;  
                @include mediaQueries.forMediaBreakpoint(mobile desktop){
                    aspect-ratio: 1/1;
                }
                @include mediaQueries.forMediaBreakpoint(mobile-small){
                    padding-inline: 0.5rem;
                }
                // width: max-content;  
                -ms-transform: skewX(-($skew)); /* IE 9 */
                -webkit-transform: skewX(-($skew)); /* Safari */
                transform: skewX(-($skew));
                border: none;
                box-shadow: none;
                background-color: $color-main;
                @include shadowHelper_basic($shadow-size-base, $color-box-shadow-dark);
                transition: box-shadow $duration ease, transform $duration ease;
                &:hover {
                    @include shadowHelper_basic($shadow-size-large, $color-box-shadow-light, $shadow-size-large_translate, -($skew));
                    color: $color-text ;
                }
                > button {
                    width: 100%;
                    height: 100%;

                    border-radius: 0;
                    border: none;
                    box-shadow: none;
                    box-shadow: none;
                    @include S_tools.SPLINT-border-inset($color-primary, -($shadow-size-base_inner), $top, $left, $bottom, $right);
                    transition: box-shadow $duration ease;
                    > span {
                        animation: none;
                        &:hover {
                            color: $color-text ;
                        }
                    -ms-transform: skewX($skew); /* IE 9 */
                    -webkit-transform: skewX($skew); /* Safari */
                    transform: skewX($skew);
                        font-size: 2rem;
                        @include mediaQueries.forMediaBreakpoint(mobile-small){
                            font-size: 3rem;
                        }
                    }
                    &:hover {
                        @include S_tools.SPLINT-border-inset($color-primary, -($shadow-size-large_inner), $top, $left, $bottom, $right);
                        > span {
                            color: $color-text ;
                        }
                    }
                }
                > .cartPoint {
                    @include Tmain.preventSelect();
                    -ms-transform: skewX($skew); /* IE 9 */
                    -webkit-transform: skewX($skew); /* Safari */
                    transform: skewX($skew);
                    cursor: pointer;
                    position: absolute;
                    z-index: 1;
                    left: 60%;
                    top: 60%;
                    background-color: $color-primary;
                    border-radius: 50%;
                    width: 1rem;
                    height: 1rem;
                    aspect-ratio: 1/1;
                    display: flex;
                    justify-content: center;
                    > span {
                        font-size: 1rem;
                    }
                    @include mediaQueries.forMediaBreakpoint(mobile-small){
                        width: 1.5rem;
                        height: 1.5rem;
                        > span {
                            font-size: 1.5rem;
                        }
                    }
                }
            }
            &.Original {
                // @include T_container();
                // @include box-shadow(1, rgb(26, 26, 26), 0.52);
                position: relative;
                grid-area: Original;
                box-sizing: border-box;
                height: 100%;
                width: max-content;
                background-color: $color-main;
                // margin-right: 1em;
                margin: 0;
                padding: 0rem;
                -ms-transform: skewX(-($skew)); /* IE 9 */
                -webkit-transform: skewX(-($skew)); /* Safari */
                transform: skewX(-($skew));
                border: none;
                box-shadow: none;
                @include shadowHelper_basic($shadow-size-base, $color-box-shadow-dark);
                transition: box-shadow $duration ease, transform $duration ease;
                &:hover {
                    @include shadowHelper_basic($shadow-size-large, $color-box-shadow-light, $shadow-size-large_translate, -($skew));
                }
                > button {
                    margin: 0;
                    width: 100%;
                    height: 100%;
                    padding: 0;
                    padding-inline: 1.5rem;
                    @include mediaQueries.forMediaBreakpoint(mobile-small){
                        padding-inline: 0.5rem;
                    }
                    background-color: $color-main;
                    border-radius: 0;
                    border: none;
                    box-shadow: none;
                    @include S_tools.SPLINT-border-inset($color-primary, -($shadow-size-base_inner), $top, $left, $bottom, $right);
                    transition: box-shadow $duration ease;
                    > span {
                        -ms-transform: skewX($skew); /* IE 9 */
                        -webkit-transform: skewX($skew); /* Safari */
                        transform: skewX($skew);
                        color: $color-text;
                        font-size: 1.6rem;

                        @include mediaQueries.forMediaBreakpoint(mobile-small){
                            font-size: 2.5rem;
                        }
                    }
                    &:hover {
                        @include S_tools.SPLINT-border-inset($color-primary, -($shadow-size-large_inner), $top, $left, $bottom, $right);
                    }
                }
            }
            &.Design {
                // @include T_container();
                // @include box-shadow(1, rgb(26, 26, 26), 0.52);
                position: relative;
                grid-area: Design;
                box-sizing: border-box;
                height: 100%;
                width: max-content;
                background-color: $color-main;
                margin: 0;
                padding: 0rem;
                -ms-transform: skewX(-($skew)); /* IE 9 */
                -webkit-transform: skewX(-($skew)); /* Safari */
                transform: skewX(-($skew));
                border: none;
                box-shadow: none;
                @include shadowHelper_basic($shadow-size-base, $color-box-shadow-dark);
                transition: box-shadow $duration ease, transform $duration ease;
                &:hover {
                    @include shadowHelper_basic($shadow-size-large, $color-box-shadow-light, $shadow-size-large_translate, -($skew));
                }
                > button {
                    margin: 0;
                    width: 100%;
                    height: 100%;
                    padding: 0;
                    padding-inline: 1.5rem;
                    @include mediaQueries.forMediaBreakpoint(mobile-small){
                        padding-inline: 0.5rem;
                    }
                    background-color: $color-main;
                    // transition: background-color 0.05s linear;
                    border-radius: 0;
                    border: none;
                    box-shadow: none;
                    @include S_tools.SPLINT-border-inset($color-primary, -($shadow-size-base_inner), $top, $left, $bottom, $right);
                    transition: box-shadow $duration ease;
                    > span {
                        -ms-transform: skewX($skew); /* IE 9 */
                        -webkit-transform: skewX($skew); /* Safari */
                        transform: skewX($skew);
                        color: black;
                        font-size: 1.6rem;
                        @include mediaQueries.forMediaBreakpoint(mobile-small){
                            font-size: 2.5rem;
                        }

                    }
                    &:hover {
                        @include S_tools.SPLINT-border-inset($color-primary, -($shadow-size-large_inner), $top, $left, $bottom, $right);
                    }
                }
            }
            &.Profile {
                display: none;
            }
            &.Sparks {
                display: none;
            }
        }
    }
}