:root {
  --main-font: "Montserrat";
  --primary: "";
  --primary-text: #333;
}

* {
  margin: 0;
  padding: 0;
  font-family: var(--main-font);
}

.tooltip_S[state*=active]:after, .tooltip_S[state*=active]:before {
  display: none;
}

.tooltip_S[data-tooltip-direction=right] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=right]:after {
  pointer-events: none;
  content: attr(data-tooltip-value);
  position: absolute;
  z-index: 10;
  top: 50%;
  transform: translateY(-50%);
  left: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=right]:before {
  pointer-events: none;
  content: "";
  position: absolute;
  z-index: 10;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-right: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=right]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  left: 110%;
}

.tooltip_S[data-tooltip-direction=right]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  left: 103%;
}

.tooltip_S[data-tooltip-direction=right]:hover:after, .tooltip_S[data-tooltip-direction=right]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=top] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=top]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  bottom: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=top]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  bottom: 130%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after {
  bottom: 120%;
}

.tooltip_S[data-tooltip-direction=top]:hover:before {
  bottom: 103%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after, .tooltip_S[data-tooltip-direction=top]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=left] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=left]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=left]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-left: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  right: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=left]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  right: 110%;
}

.tooltip_S[data-tooltip-direction=left]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  right: 103%;
}

.tooltip_S[data-tooltip-direction=left]:hover:after, .tooltip_S[data-tooltip-direction=left]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=bottom] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=bottom]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=bottom]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-bottom: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  top: 130%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after {
  top: 120%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:before {
  top: 103%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after, .tooltip_S[data-tooltip-direction=bottom]:hover:before {
  opacity: 1;
}

.AdaptiveTableMain {
  position: relative;
  display: block;
  width: 98%;
  height: 100%;
  overflow: hidden;
  overflow-y: auto;
}

.AdaptiveTableMain > .ListMain {
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

.AdaptiveTableMain > .ListMain > .column {
  position: relative;
  width: 90%;
  height: fit-content;
  flex-direction: column;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement {
  user-select: none;
  padding: 0.5em;
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: inline-block;
  height: fit-content;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > img {
  user-select: none;
  box-sizing: border-box;
  overflow: hidden;
  display: block;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  position: relative;
  width: 100%;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv {
  user-select: none;
  border-radius: 5px 5px;
  position: absolute;
  top: 0;
  margin: 0.5em;
  left: 0;
  width: calc(100% - 1em);
  height: calc(100% - 1em);
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
  background-color: rgba(94, 94, 94, 0.471);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv:hover {
  opacity: 1;
  box-shadow: rgba(0, 0, 0, 0.55) 0px 0px 3px, rgba(0, 0, 0, 0.51) 0px 0px 3px;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .informationDiv {
  display: none;
  position: relative;
  top: 0;
  margin: 0.5em;
  border-radius: 5px 5px;
  left: 0;
  background-color: rgba(255, 0, 0, 0.299);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv {
  user-select: none;
  position: absolute;
  bottom: 0;
  left: 0;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv > button {
  user-select: none;
}

.AmountDiv {
  display: flex;
  position: relative;
  border: 1px solid black;
  box-sizing: border-box;
  width: fit-content;
  padding: 0.2em;
}

.AmountDiv > button {
  width: 33%;
  position: relative;
  box-sizing: border-box;
  border-radius: 0px 0px;
}

.AmountDiv > button > span {
  font-size: 1em;
}

.AmountDiv > div {
  position: relative;
  width: 2em;
  margin: 0;
  background-color: transparent;
  padding: 0;
  overflow: hidden;
}

.AmountDiv > div > input {
  font-size: 1em;
  background-color: transparent;
  position: relative;
  border: none;
  outline: none;
  width: 100%;
  height: 100%;
  text-align: center;
}

.button_Default {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.button_Default > span {
  display: block;
}

.button_Default:hover {
  background-color: red;
}

.s-button_basic {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_basic > span {
  display: block;
}

.s-button_link {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_link > span {
  text-decoration: underline;
  color: blue;
  display: block;
}

.s-button_link:hover > span {
  color: rgb(34, 34, 255);
}

.DropDownInputMain {
  position: relative;
  background-color: #ffd7af;
  border-radius: 5px;
  margin: 0.5em;
  font-size: inherit;
}

.DropDownInputMain select {
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.25em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 5px 5px !important;
}

.DropDownInputMain select.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.25em;
}

.DropDownInputMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.DropDownInputMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

.header {
  position: fixed;
  width: 100%;
  height: 4rem;
  display: flex;
  flex-direction: row;
  alignItems: center;
  justifyContent: space-between !important;
  background-color: var(--bg-color);
  box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.2);
}

.header > .logoLinkBox {
  position: relative;
  margin-left: 3rem;
  min-width: 3rem;
  width: auto;
  max-width: 15rem;
  height: 4rem;
  display: flex;
  align-items: center;
  justify-content: start;
  text-decoration: none;
  cursor: pointer;
  user-select: none;
}

.header > .logoLinkBox > .logoIcon {
  position: relative;
  width: 2.5rem;
}

.header > .logoLinkBox > .logoText {
  position: relative;
  margin-left: 0.5rem;
  font-size: 1.3rem;
  font-weight: 600;
  color: #333 !important;
}

.header > .headerNavigation {
  position: absolute;
  right: 3rem;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: end;
}

.header > .headerNavigation > button {
  font-size: 1.1rem;
  margin-left: 1.5rem;
}

.header > .headerNavigation > button > span {
  position: relative;
  text-decoration: none;
  color: #a8a8a8;
}

.S_InputDiv {
  position: relative;
  background-color: #ffd7af;
  margin: 0.5em;
  height: min-content;
  display: flex;
  flex-wrap: wrap;
}

.S_InputDiv > button {
  flex: 0 1;
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}

.S_InputDiv > button > span {
  position: relative;
  font-size: 1.3em;
}

.S_InputDiv > button[state*=active] {
  background-color: #ffa228;
}

.S_InputDiv > button[state*=passive] {
  background-color: transparent;
}

.S_InputDiv > button[state*=passive]:hover {
  background-color: #FFAD5B;
}

.S_InputDiv label.switchLabel {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.S_InputDiv input {
  flex: 2 1;
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 5px 5px !important;
  outline: none;
}

.S_InputDiv input.filled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}

.S_InputDiv input[state*=passive] {
  color: red;
  background-color: #fff1de;
}

.S_InputDiv input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}

.S_InputDiv input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}

.S_InputDiv > .response {
  align-self: flex-end;
  text-align: justify;
  width: 100%;
  color: red;
}

.S_InputDiv .invalidInput {
  color: red;
  background-color: #fff1de;
}

.progressBar_Splint {
  position: absolute;
  width: 10em;
  background-color: blue;
  display: flex;
}

.progressBar_Splint > .S_progressBar_Body {
  width: 100%;
  border: 1px solid black;
}

.progressBar_Splint > .S_progressBar_Body > .S_progressBar_Inner {
  width: 100%;
  height: 100%;
  background-color: red;
}

.S-SliderMain {
  margin-top: 0.4em;
  margin-bottom: 0.4em;
}

.S-SliderMain[drawDivider=true]::after {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-bottom: 1px solid #BDBDBD;
  left: 0;
  margin-top: 0.25em;
  position: relative;
}

.S-SliderMain[drawDivider=true]::before {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-top: 1px solid #BDBDBD;
  left: 0;
  margin-bottom: 0.2em;
  position: relative;
}

.S-SliderMain > .label {
  position: relative;
  width: 100%;
  display: inline-block;
  box-sizing: border-box;
  text-align: left;
}

.S-SliderMain > .contentBody {
  height: 1em;
  display: flex;
}

.S-SliderMain > .contentBody > .sliderBody {
  order: 1;
  height: 100%;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range] {
  width: 100%;
  position: relative;
  font-size: 1em;
  height: 100%;
  display: inline-block;
  outline: none;
  -webkit-appearance: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-runnable-track {
  box-sizing: border-box;
  width: 100%;
  height: 0.5em;
  background: #ffa228;
  border: none;
  border-radius: 10px;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  border: none;
  vertical-align: baseline;
  height: 1em;
  width: 1em;
  border-radius: 10%;
  margin-top: -0.25em;
  background: white;
  box-sizing: border-box;
  border: 1px solid black;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus {
  outline: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus::-webkit-slider-runnable-track {
  background: #ffa228;
}

.S-SliderMain > .contentBody > .sliderBody > datalist {
  display: none;
  height: 20rem;
  margin-top: -23px;
  background-color: red;
  color: red;
}

.S-SliderMain > .contentBody > .sliderBody > datalist > option {
  background-color: red;
  color: red;
  height: 50px;
}

.S-SliderMain > .contentBody > .valueOutput {
  order: 2;
  height: 1em;
  width: 1.5em;
  display: inline-block;
  box-sizing: border-box;
  text-align: center;
}

.S-SliderMain > .contentBody > .valueOutput[hidden=true] {
  display: none;
}

.SlideShow_S {
  position: relative;
  height: 100%;
  overflow-y: visible !important;
  overflow-x: auto;
  box-sizing: border-box;
  white-space: nowrap;
  background-color: transparent;
}

.SlideShow_S > .inner {
  display: inline-block;
  position: relative;
  height: 100%;
  width: max-content;
  margin-left: auto;
  margin-right: auto;
  background-color: transparent;
}

.SlideShow_S > .inner > .listElement {
  position: relative;
  height: calc(100% - 0.4em);
  box-sizing: border-box;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  margin: 0.2em;
  margin-inline: 0.5em;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: end;
  align-items: end;
}

.SlideShow_S > .inner > .listElement > div {
  bottom: 0;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  aspect-ratio: 2/1;
}

.SlideShow_S > .inner > .listElement > div > span {
  font-size: 2em;
}

.subWindow_MAIN {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: all;
  user-select: none;
}

.subWindow_MAIN > .background {
  position: absolute;
  z-index: 1;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: rgba(255, 255, 255, 0.8509803922);
}

.subWindow_MAIN .content {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  position: absolute;
  z-index: 2;
  width: fit-content;
  max-height: 90vh;
  max-width: 90vw;
  overflow: hidden;
  margin: auto;
  left: 50%;
  height: max-content;
  top: 50%;
  user-select: none;
  pointer-events: all;
  transform: translate(-50%, -50%);
}

.subWindow_MAIN .content > button.button_close {
  position: absolute;
  right: 0.5em;
  z-index: 3;
}

.TableMain {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
}

.TableMain > .ListMain {
  position: relative;
  width: 100%;
  height: 100%;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;
}

.TableMain > .ListMain > .ListElement {
  margin: 0.5em;
  position: relative;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement > .ListElementHover {
  position: absolute;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 1;
  margin: 0;
  padding: 0;
  border: inherit;
  box-shadow: inherit;
  border-radius: inherit;
  background-color: rgba(64, 64, 64, 0.63);
  display: flex;
  flex-direction: column;
  transition: opacity 0.2s;
}

.horizontalLine {
  position: relative;
  margin: 0.1rem;
  left: 1%;
  width: 98%;
  opacity: 1;
  color: #BDBDBD;
  border: none;
  border-top: 0.5px solid #BDBDBD;
  background-color: #BDBDBD;
}

.PriceDiv {
  width: max-content;
  height: max-content !important;
  display: inline-block;
  overflow-wrap: anywhere;
  white-space: nowrap;
}

.s-ObjectEditor {
  width: 25rem;
  box-shadow: inset 1px 0px 0px 0px black, 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white;
}

.s-ObjectEditor > .Table2D {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table > tr {
  width: 0rem;
  box-sizing: border-box;
  border-bottom: 1px solid black;
  overflow: visible;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] {
  display: flex;
  flex-direction: column;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] > td[col*="1"] {
  margin-left: 1rem;
}

.s-ObjectEditor > .Table2D > table > tr > td {
  box-sizing: border-box;
  width: 100%;
  overflow: visible;
  padding-left: 0.25rem;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="0"] {
  width: 33%;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="2"] {
  width: min-content;
}

.s-ObjectEditor > .Table2D > table > tr > td > div {
  position: relative;
}

.s-sideBarMobile {
  position: absolute;
  height: 100%;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  width: 200px;
  transform: translateX(-100%);
  transition: transform 1s ease-in;
}

.s-sideBarMobile[s-state*=active] {
  transform: translateX(0);
}

.s-sideBarMobile > .headContainer {
  display: flex;
  padding: 0.25em;
  height: max-content;
  justify-content: center;
  align-items: center;
  box-shadow: 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white, inset 0px -1px 0px 0px gray;
}

.s-sideBarMobile > .headContainer > .headline {
  width: 100%;
  font-size: 2em;
}

.s-sideBarMobile > .headContainer > .buttonClose {
  position: relative;
  height: 100%;
}

.s-sideBarMobile > .content {
  width: 100%;
  height: 100%;
}

.Spinner1 {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}

.Spinner1[state*=passive] {
  visibility: hidden;
}

.Spinner1 > div {
  box-sizing: border-box;
  display: block;
  position: absolute;
  width: 80%;
  height: 80%;
  margin: 10%;
  border: 8px solid #fff;
  border-radius: 50%;
  animation: Spinner1 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
  border-color: #fff transparent transparent transparent;
}

.Spinner1 > div:nth-child(1) {
  animation-delay: -0.45s;
}

.Spinner1 > div:nth-child(2) {
  animation-delay: -0.3s;
}

.Spinner1 > div:nth-child(3) {
  animation-delay: -0.15s;
}

@keyframes Spinner1 {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.DropDownInputMain_S {
  position: relative;
  overflow: visible !important;
}

.DropDownInputMain_S > .S_InputDiv {
  width: 100%;
  margin: 0;
  margin-bottom: 0;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px;
}

.DropDownInputMain_S > .S_InputDiv > input {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > button {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > .response {
  display: none;
}

.DropDownInputMain_S > .DropDown_expander {
  z-index: 120;
  background-color: transparent;
  position: absolute;
  padding: 0;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.DropDownInputMain_S > .DropDown_expander[state*=active] {
  height: 10em;
}

.DropDownInputMain_S > .DropDown_expander[state*=passive] {
  height: 0em;
}

.DropDownInputMain_S > .DropDown_expander > div {
  z-index: 122;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-top: 0.2em;
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div > span {
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain {
  position: relative;
  overflow: visible !important;
}

.n_SelectInputMain > .Select_expander {
  z-index: 1;
  background-color: transparent;
  position: absolute;
  padding: 1%;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.n_SelectInputMain > .Select_expander[state*=active] {
  height: max-content;
  max-height: 10em;
}

.n_SelectInputMain > .Select_expander[state*=passive] {
  height: 0em;
  display: none;
}

.n_SelectInputMain > .Select_expander > div {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-bottom: 0.5em;
  text-align: center;
  cursor: pointer;
  transition: box-shadow 0.2s;
  transition-timing-function: ease-in;
}

.n_SelectInputMain > .Select_expander > div > span {
  text-align: center;
}

.n_SelectInputMain > .Select_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain > .Select_expander > div:hover {
  box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 3px, rgba(0, 0, 0, 0.21) 0px 0px 3px;
}

.n_inputDiv {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

.n_inputDiv > .inputBody {
  display: flex;
  flex-direction: row;
}

.n_inputDiv > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

.n_inputDiv > .inputBody > input:valid, .n_inputDiv > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

.n_inputDiv > .inputBody > input:valid + label span, .n_inputDiv > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

.n_inputDiv > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

.n_inputDiv > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.n_inputDiv > .inputBody > button {
  background-color: transparent;
}

.n_inputDiv > .response > span {
  color: red;
}

s-input {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

s-input > .inputBody {
  display: flex;
  flex-direction: row;
}

s-input > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

s-input > .inputBody > input:valid, s-input > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

s-input > .inputBody > input:valid + label span, s-input > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

s-input > .inputBody > input[state=passive] {
  border-bottom: 2px red solid;
}

s-input > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

s-input > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

s-input > .inputBody > button {
  background-color: transparent;
}

s-input > .response > span {
  color: red;
}

.S-AddressInput {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  column-gap: 0.5em;
  grid-template-areas: "fN fN fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.S-AddressInput > div, .S-AddressInput s-input {
  background-color: transparent;
  box-sizing: border-box;
}

.S-AddressInput > div > .inputBody, .S-AddressInput s-input > .inputBody {
  padding-top: 0.5em;
}

.S-AddressInput > div[identifier*=title], .S-AddressInput s-input[identifier*=title] {
  display: none;
}

.S-AddressInput > div[id*=salutation], .S-AddressInput s-input[id*=salutation] {
  display: none;
  grid-area: none;
}

.S-AddressInput > div[identifier*=firstName], .S-AddressInput s-input[identifier*=firstName] {
  grid-area: fN;
}

.S-AddressInput > div[identifier*=lastName], .S-AddressInput s-input[identifier*=lastName] {
  grid-area: lN;
}

.S-AddressInput > div[identifier*=postcode], .S-AddressInput s-input[identifier*=postcode] {
  grid-area: plz;
}

.S-AddressInput > div[identifier*=city], .S-AddressInput s-input[identifier*=city] {
  grid-area: ct;
}

.S-AddressInput > div[id*=country], .S-AddressInput s-input[id*=country] {
  grid-area: cy;
}

.S-AddressInput > div[identifier*=street], .S-AddressInput s-input[identifier*=street] {
  grid-area: st;
}

.S-AddressInput > div[identifier*=housenumber], .S-AddressInput s-input[identifier*=housenumber] {
  grid-area: hn;
}

.S-AddressInput > div[identifier*=email], .S-AddressInput s-input[identifier*=email] {
  grid-area: ema;
}

.S-AddressInput > div[identifier*=phone], .S-AddressInput s-input[identifier*=phone] {
  grid-area: ph;
}

.S-AddressInput > s-input {
  padding-bottom: -0.5em;
}

.n_RadioButton {
  position: relative;
}

.n_RadioButton > .radio_headline {
  position: relative;
}

.n_RadioButton > .inner {
  position: relative;
}

.n_RadioButton > .inner > div {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
  justify-content: start;
  align-items: center;
}

.n_RadioButton > .inner > div > .inputBody {
  position: relative;
  box-sizing: border-box;
  width: 1em;
  margin: 0.5em;
  height: 1em;
  min-width: 1em;
}

.n_RadioButton > .inner > div > .inputBody > input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span {
  box-sizing: border-box;
  background-color: #2196F3;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span:after {
  box-sizing: border-box;
  display: block;
}

.n_RadioButton > .inner > div > .inputBody > span {
  box-sizing: content-box;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background-color: #eee;
  border-radius: 50%;
}

.n_RadioButton > .inner > div > .inputBody > span:after {
  box-sizing: border-box;
  content: "";
  left: 0;
  top: 0;
  position: absolute;
  display: none;
  margin: 25%;
  width: 50%;
  height: 50%;
  border-radius: 50%;
  background: white;
}

.n_RadioButton > .inner > div > .inputBody:hover input ~ span {
  background-color: #ccc;
}

.toggleButton {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  display: flex;
  justify-content: space-around;
  width: max-content;
  overflow: hidden;
}

.toggleButton > button {
  width: 100%;
  padding: 0.5rem;
  background-color: transparent;
  border: none;
  cursor: pointer;
}

.toggleButton > button:hover {
  background-color: #FFAD5B;
}

.toggleButton > button[state*=active] {
  background-color: #ffa228;
}

.s-ToggleButton_2 {
  width: max-content;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
}

.s-ToggleButton_2 > button {
  border: none;
  border-radius: 0;
  outline: none;
  padding: 0em;
  min-height: 1rem;
  height: 100%;
  width: 100%;
  margin: 0.25em;
}

.s-ToggleButton_2 > button.btFALSE {
  background-color: red;
}

.s-ToggleButton_2 > button.btFALSE[state*=passive] {
  background-color: rgba(255, 0, 0, 0.3);
}

.s-ToggleButton_2 > button.btTRUE {
  background-color: green;
}

.s-ToggleButton_2 > button.btTRUE[state*=passive] {
  background-color: rgba(0, 128, 0, 0.3);
}

.S_SVGElement_BODY {
  position: relative;
  background-color: transparent;
}

.S_SVGElement_BODY > svg {
  position: relative;
}

.addressMenuNewMain > [id*=menuElement] > div {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  grid-template-areas: "salutation salutation fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.addressMenuNewMain > [id*=menuElement] > div > div {
  background-color: transparent;
  box-sizing: border-box;
}

.addressMenuNewMain > [id*=menuElement] > div > div.S_InputDiv {
  padding-bottom: -0.5em;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=title] {
  display: none;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=salutation] {
  grid-area: salutation;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=firstName] {
  grid-area: fN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=lastName] {
  grid-area: lN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=postcode] {
  grid-area: plz;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=city] {
  grid-area: ct;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=country] {
  grid-area: cy;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=street] {
  grid-area: st;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=housenumber] {
  grid-area: hn;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=email] {
  grid-area: ema;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=phone] {
  grid-area: ph;
}

/* Media Queries */
/* ------- */
/* Desktop */
/* ------- */
.CursorMain {
  display: all;
  backface-visibility: hidden;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
  width: 100px;
  height: 100px;
  background-color: red;
  z-index: 999;
}

.customCursor {
  position: absolute;
  box-sizing: content-box;
  will-change: transform;
  margin: 0;
  padding: 0;
  top: 0;
  left: 0;
  pointer-events: none;
  user-select: none;
  display: auto;
  z-index: 1000;
}
.customCursor.red {
  background-color: red;
}
.customCursor.orange {
  color: orange !important;
}

.button_Default {
  user-select: none;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 0px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  box-sizing: content-box;
  margin: 0.5em;
  overflow: hidden;
}
.button_Default > span {
  box-sizing: border-box;
}
.button_Default[state*=active] {
  background-color: #FFAD5B;
}
.button_Default[state*=passive] {
  background-color: #fff1de;
}
.button_Default:hover {
  background-color: #ffa228;
}

.button_General {
  user-select: none;
  background-color: transparent;
  border: none;
  color: #000000;
  display: inline-block;
  font-size: 1em;
  cursor: pointer;
  border-radius: 0px;
}
.button_General > span {
  display: block;
  position: relative;
  text-align: center;
}
.button_General > span:not(.material-symbols-outlined) {
  text-decoration: underline;
}
.button_General > .dropdown {
  position: absolute;
  left: 100%;
  margin-left: 10%;
  top: 0;
  width: fit-content;
  height: max-content;
  overflow: hidden;
}
.button_General:hover > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonAnimation;
}
.button_General:hover > span.material-symbols-outlined {
  color: #ffa228 !important;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonIconAnimation;
}
.button_General:hover > span.material-symbols-outlined.rotate90 {
  animation-name: buttonIconAnimation90;
}
.button_General:hover:after > span {
  color: white;
}
.button_General:hover:after > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-out;
  animation-fill-mode: backwards;
  animation-direction: reverse;
  animation-name: buttonAnimationB;
}
.button_General:hover:after > span.material-symbols-outlined {
  color: #ffa228 !important;
}
.button_General.simple {
  background-color: transparent;
  border: none;
  text-decoration: underline;
}

/* width */
::-webkit-scrollbar {
  margin-inline: 2px;
  width: 5px;
}

/* Track */
::-webkit-scrollbar-track {
  width: 2px;
  transform: scale(2);
  background: transparent;
}

/* Handle */
::-webkit-scrollbar-thumb {
  width: 5px;
  transform: scale(2);
  background: rgb(189, 189, 189);
  border-radius: 0px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: gray;
}

body {
  background-color: #fff8f1;
}
body * {
  font-family: "Arial";
  margin: 0;
  padding: 0;
}

.Slider_main > .Slider_inputBody input[type=range] {
  appearance: none;
  background: transparent;
  width: 100%;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-thumb {
  position: relative;
  appearance: none;
  width: 9px;
  height: 20px;
  background-color: #FFAD5B;
  transform: translateY(-40%);
  border-radius: 2px 2px;
  z-index: 20;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-runnable-track {
  position: relative;
  cursor: pointer;
  border-radius: 2px 2px;
  height: 20%;
  z-index: 19;
  /* Hides the slider so custom styles can be added */
  background-color: #000000;
}
.Slider_main > .Slider_inputBody > hr {
  position: absolute;
  margin-left: calc((100% - (2.1em + 6px)) / var(--size) * var(--index));
  z-index: 1;
  left: 5px;
  background-color: darkgray;
  width: 0.5px;
  top: 25%;
  height: 50%;
  margin-top: 0;
}
.Slider_main > .Slider_inputBody > hr:nth-child(even) {
  top: 12.5%;
  height: 75%;
}

body {
  position: relative;
  width: 100vw;
  overflow: hidden;
  box-sizing: content-box;
  top: 6vh;
  height: 94vh;
}
@media only screen and (max-width: 980px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 981px) and (max-width: 1199px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 1200px) {
  body {
    font-size: 1em;
  }
}

.Table {
  border: 1px solid black;
  position: relative;
  width: 50%;
}
.Table > div {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}
.Table > div > label {
  position: relative;
  overflow: hidden;
}
.Table > div > span {
  position: relative;
  overflow: hidden;
}

.bold {
  font-weight: bold;
}

.LoadBar {
  z-index: 3;
  border-radius: 0px;
  position: relative !important;
  background-color: red !important;
  width: 100% !important;
  height: 2em !important;
  overflow: hidden;
}
.LoadBar .LoadBar-progress {
  position: relative;
  height: 100%;
  background-color: green !important;
}

.LineDiv {
  position: relative;
  margin: 0;
  padding: 0;
  flex: auto;
  overflow: hidden;
  height: 100%;
  border: none;
}
.LineDiv hr {
  display: block;
  position: relative;
  color: orange;
  background-color: orange;
  opacity: 1;
  width: 0%;
  margin: 0;
  top: 50%;
  visibility: visible;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;
}

@keyframes NavBarLine {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}
.Text-primary {
  color: #000000;
}

.Text-secondary {
  color: #BCBCBC;
}

.Text-small {
  font-size: 0.75em;
}

.SliderDivMain {
  border: 1px solid black;
}

.TextInputDiv {
  position: relative;
  background-color: #fff8f1;
  border-radius: 0px;
  margin: 0.5em;
  margin-bottom: 1.5em;
  font-size: inherit;
  height: 10em;
}
.TextInputDiv textarea {
  position: relative;
  outline: 0;
  resize: none;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 0px !important;
}
.TextInputDiv textarea.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 1.1em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.TextInputDiv textarea::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.TextInputDiv label {
  user-select: none;
  position: absolute;
  z-index: 1;
  width: 100%;
  background-color: #fff8f1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.11em;
  padding-top: 0.39em;
  padding-bottom: 0.13em;
  border-top-right-radius: 5px 5px;
}
.TextInputDiv .horizontalLine {
  position: absolute;
  z-index: 2;
  width: 100%;
  top: 0.89em;
  height: 0px;
  left: 0;
  margin-block: 0px;
  margin-inline: 0.5em;
}

.InputDivMain {
  position: relative;
  background-color: #fff8f1;
  margin: 0.5em;
  height: min-content;
  display: inline-flex;
}
.InputDivMain button {
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}
.InputDivMain button > span {
  position: relative;
  font-size: 1.3em;
}
.InputDivMain button[state*=active] {
  background-color: #ffa228;
}
.InputDivMain button[state*=passive] {
  background-color: transparent;
}
.InputDivMain button[state*=passive]:hover {
  background-color: #FFAD5B;
}
.InputDivMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}
.InputDivMain input {
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 0px !important;
  outline: none;
}
.InputDivMain input.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.InputDivMain input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}
.InputDivMain input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.InputDivMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

:root {
  --main-font: "Montserrat";
  --primary: "";
  --primary-text: #333;
}

* {
  margin: 0;
  padding: 0;
  font-family: var(--main-font);
}

.tooltip_S[state*=active]:after, .tooltip_S[state*=active]:before {
  display: none;
}

.tooltip_S[data-tooltip-direction=right] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=right]:after {
  pointer-events: none;
  content: attr(data-tooltip-value);
  position: absolute;
  z-index: 10;
  top: 50%;
  transform: translateY(-50%);
  left: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=right]:before {
  pointer-events: none;
  content: "";
  position: absolute;
  z-index: 10;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-right: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=right]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  left: 110%;
}

.tooltip_S[data-tooltip-direction=right]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  left: 103%;
}

.tooltip_S[data-tooltip-direction=right]:hover:after, .tooltip_S[data-tooltip-direction=right]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=top] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=top]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  bottom: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=top]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  bottom: 130%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after {
  bottom: 120%;
}

.tooltip_S[data-tooltip-direction=top]:hover:before {
  bottom: 103%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after, .tooltip_S[data-tooltip-direction=top]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=left] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=left]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=left]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-left: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  right: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=left]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  right: 110%;
}

.tooltip_S[data-tooltip-direction=left]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  right: 103%;
}

.tooltip_S[data-tooltip-direction=left]:hover:after, .tooltip_S[data-tooltip-direction=left]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=bottom] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=bottom]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=bottom]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-bottom: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  top: 130%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after {
  top: 120%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:before {
  top: 103%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after, .tooltip_S[data-tooltip-direction=bottom]:hover:before {
  opacity: 1;
}

.AdaptiveTableMain {
  position: relative;
  display: block;
  width: 98%;
  height: 100%;
  overflow: hidden;
  overflow-y: auto;
}

.AdaptiveTableMain > .ListMain {
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

.AdaptiveTableMain > .ListMain > .column {
  position: relative;
  width: 90%;
  height: fit-content;
  flex-direction: column;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement {
  user-select: none;
  padding: 0.5em;
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: inline-block;
  height: fit-content;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > img {
  user-select: none;
  box-sizing: border-box;
  overflow: hidden;
  display: block;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  position: relative;
  width: 100%;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv {
  user-select: none;
  border-radius: 5px 5px;
  position: absolute;
  top: 0;
  margin: 0.5em;
  left: 0;
  width: calc(100% - 1em);
  height: calc(100% - 1em);
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
  background-color: rgba(94, 94, 94, 0.471);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv:hover {
  opacity: 1;
  box-shadow: rgba(0, 0, 0, 0.55) 0px 0px 3px, rgba(0, 0, 0, 0.51) 0px 0px 3px;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .informationDiv {
  display: none;
  position: relative;
  top: 0;
  margin: 0.5em;
  border-radius: 5px 5px;
  left: 0;
  background-color: rgba(255, 0, 0, 0.299);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv {
  user-select: none;
  position: absolute;
  bottom: 0;
  left: 0;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv > button {
  user-select: none;
}

.AmountDiv {
  display: flex;
  position: relative;
  border: 1px solid black;
  box-sizing: border-box;
  width: fit-content;
  padding: 0.2em;
}

.AmountDiv > button {
  width: 33%;
  position: relative;
  box-sizing: border-box;
  border-radius: 0px 0px;
}

.AmountDiv > button > span {
  font-size: 1em;
}

.AmountDiv > div {
  position: relative;
  width: 2em;
  margin: 0;
  background-color: transparent;
  padding: 0;
  overflow: hidden;
}

.AmountDiv > div > input {
  font-size: 1em;
  background-color: transparent;
  position: relative;
  border: none;
  outline: none;
  width: 100%;
  height: 100%;
  text-align: center;
}

.button_Default {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.button_Default > span {
  display: block;
}

.button_Default:hover {
  background-color: red;
}

.s-button_basic {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_basic > span {
  display: block;
}

.s-button_link {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_link > span {
  text-decoration: underline;
  color: blue;
  display: block;
}

.s-button_link:hover > span {
  color: rgb(34, 34, 255);
}

.DropDownInputMain {
  position: relative;
  background-color: #ffd7af;
  border-radius: 5px;
  margin: 0.5em;
  font-size: inherit;
}

.DropDownInputMain select {
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.25em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 5px 5px !important;
}

.DropDownInputMain select.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.25em;
}

.DropDownInputMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.DropDownInputMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

.header {
  position: fixed;
  width: 100%;
  height: 4rem;
  display: flex;
  flex-direction: row;
  alignItems: center;
  justifyContent: space-between !important;
  background-color: var(--bg-color);
  box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.2);
}

.header > .logoLinkBox {
  position: relative;
  margin-left: 3rem;
  min-width: 3rem;
  width: auto;
  max-width: 15rem;
  height: 4rem;
  display: flex;
  align-items: center;
  justify-content: start;
  text-decoration: none;
  cursor: pointer;
  user-select: none;
}

.header > .logoLinkBox > .logoIcon {
  position: relative;
  width: 2.5rem;
}

.header > .logoLinkBox > .logoText {
  position: relative;
  margin-left: 0.5rem;
  font-size: 1.3rem;
  font-weight: 600;
  color: #333 !important;
}

.header > .headerNavigation {
  position: absolute;
  right: 3rem;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: end;
}

.header > .headerNavigation > button {
  font-size: 1.1rem;
  margin-left: 1.5rem;
}

.header > .headerNavigation > button > span {
  position: relative;
  text-decoration: none;
  color: #a8a8a8;
}

.S_InputDiv {
  position: relative;
  background-color: #ffd7af;
  margin: 0.5em;
  height: min-content;
  display: flex;
  flex-wrap: wrap;
}

.S_InputDiv > button {
  flex: 0 1;
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}

.S_InputDiv > button > span {
  position: relative;
  font-size: 1.3em;
}

.S_InputDiv > button[state*=active] {
  background-color: #ffa228;
}

.S_InputDiv > button[state*=passive] {
  background-color: transparent;
}

.S_InputDiv > button[state*=passive]:hover {
  background-color: #FFAD5B;
}

.S_InputDiv label.switchLabel {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.S_InputDiv input {
  flex: 2 1;
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 5px 5px !important;
  outline: none;
}

.S_InputDiv input.filled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}

.S_InputDiv input[state*=passive] {
  color: red;
  background-color: #fff1de;
}

.S_InputDiv input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}

.S_InputDiv input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}

.S_InputDiv > .response {
  align-self: flex-end;
  text-align: justify;
  width: 100%;
  color: red;
}

.S_InputDiv .invalidInput {
  color: red;
  background-color: #fff1de;
}

.progressBar_Splint {
  position: absolute;
  width: 10em;
  background-color: blue;
  display: flex;
}

.progressBar_Splint > .S_progressBar_Body {
  width: 100%;
  border: 1px solid black;
}

.progressBar_Splint > .S_progressBar_Body > .S_progressBar_Inner {
  width: 100%;
  height: 100%;
  background-color: red;
}

.S-SliderMain {
  margin-top: 0.4em;
  margin-bottom: 0.4em;
}

.S-SliderMain[drawDivider=true]::after {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-bottom: 1px solid #BDBDBD;
  left: 0;
  margin-top: 0.25em;
  position: relative;
}

.S-SliderMain[drawDivider=true]::before {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-top: 1px solid #BDBDBD;
  left: 0;
  margin-bottom: 0.2em;
  position: relative;
}

.S-SliderMain > .label {
  position: relative;
  width: 100%;
  display: inline-block;
  box-sizing: border-box;
  text-align: left;
}

.S-SliderMain > .contentBody {
  height: 1em;
  display: flex;
}

.S-SliderMain > .contentBody > .sliderBody {
  order: 1;
  height: 100%;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range] {
  width: 100%;
  position: relative;
  font-size: 1em;
  height: 100%;
  display: inline-block;
  outline: none;
  -webkit-appearance: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-runnable-track {
  box-sizing: border-box;
  width: 100%;
  height: 0.5em;
  background: #ffa228;
  border: none;
  border-radius: 10px;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  border: none;
  vertical-align: baseline;
  height: 1em;
  width: 1em;
  border-radius: 10%;
  margin-top: -0.25em;
  background: white;
  box-sizing: border-box;
  border: 1px solid black;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus {
  outline: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus::-webkit-slider-runnable-track {
  background: #ffa228;
}

.S-SliderMain > .contentBody > .sliderBody > datalist {
  display: none;
  height: 20rem;
  margin-top: -23px;
  background-color: red;
  color: red;
}

.S-SliderMain > .contentBody > .sliderBody > datalist > option {
  background-color: red;
  color: red;
  height: 50px;
}

.S-SliderMain > .contentBody > .valueOutput {
  order: 2;
  height: 1em;
  width: 1.5em;
  display: inline-block;
  box-sizing: border-box;
  text-align: center;
}

.S-SliderMain > .contentBody > .valueOutput[hidden=true] {
  display: none;
}

.SlideShow_S {
  position: relative;
  height: 100%;
  overflow-y: visible !important;
  overflow-x: auto;
  box-sizing: border-box;
  white-space: nowrap;
  background-color: transparent;
}

.SlideShow_S > .inner {
  display: inline-block;
  position: relative;
  height: 100%;
  width: max-content;
  margin-left: auto;
  margin-right: auto;
  background-color: transparent;
}

.SlideShow_S > .inner > .listElement {
  position: relative;
  height: calc(100% - 0.4em);
  box-sizing: border-box;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  margin: 0.2em;
  margin-inline: 0.5em;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: end;
  align-items: end;
}

.SlideShow_S > .inner > .listElement > div {
  bottom: 0;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  aspect-ratio: 2/1;
}

.SlideShow_S > .inner > .listElement > div > span {
  font-size: 2em;
}

.subWindow_MAIN {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: all;
  user-select: none;
}

.subWindow_MAIN > .background {
  position: absolute;
  z-index: 1;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: rgba(255, 255, 255, 0.8509803922);
}

.subWindow_MAIN .content {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  position: absolute;
  z-index: 2;
  width: fit-content;
  max-height: 90vh;
  max-width: 90vw;
  overflow: hidden;
  margin: auto;
  left: 50%;
  height: max-content;
  top: 50%;
  user-select: none;
  pointer-events: all;
  transform: translate(-50%, -50%);
}

.subWindow_MAIN .content > button.button_close {
  position: absolute;
  right: 0.5em;
  z-index: 3;
}

.TableMain {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
}

.TableMain > .ListMain {
  position: relative;
  width: 100%;
  height: 100%;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;
}

.TableMain > .ListMain > .ListElement {
  margin: 0.5em;
  position: relative;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement > .ListElementHover {
  position: absolute;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 1;
  margin: 0;
  padding: 0;
  border: inherit;
  box-shadow: inherit;
  border-radius: inherit;
  background-color: rgba(64, 64, 64, 0.63);
  display: flex;
  flex-direction: column;
  transition: opacity 0.2s;
}

.horizontalLine {
  position: relative;
  margin: 0.1rem;
  left: 1%;
  width: 98%;
  opacity: 1;
  color: #BDBDBD;
  border: none;
  border-top: 0.5px solid #BDBDBD;
  background-color: #BDBDBD;
}

.PriceDiv {
  width: max-content;
  height: max-content !important;
  display: inline-block;
  overflow-wrap: anywhere;
  white-space: nowrap;
}

.s-ObjectEditor {
  width: 25rem;
  box-shadow: inset 1px 0px 0px 0px black, 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white;
}

.s-ObjectEditor > .Table2D {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table > tr {
  width: 0rem;
  box-sizing: border-box;
  border-bottom: 1px solid black;
  overflow: visible;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] {
  display: flex;
  flex-direction: column;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] > td[col*="1"] {
  margin-left: 1rem;
}

.s-ObjectEditor > .Table2D > table > tr > td {
  box-sizing: border-box;
  width: 100%;
  overflow: visible;
  padding-left: 0.25rem;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="0"] {
  width: 33%;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="2"] {
  width: min-content;
}

.s-ObjectEditor > .Table2D > table > tr > td > div {
  position: relative;
}

.s-sideBarMobile {
  position: absolute;
  height: 100%;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  width: 200px;
  transform: translateX(-100%);
  transition: transform 1s ease-in;
}

.s-sideBarMobile[s-state*=active] {
  transform: translateX(0);
}

.s-sideBarMobile > .headContainer {
  display: flex;
  padding: 0.25em;
  height: max-content;
  justify-content: center;
  align-items: center;
  box-shadow: 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white, inset 0px -1px 0px 0px gray;
}

.s-sideBarMobile > .headContainer > .headline {
  width: 100%;
  font-size: 2em;
}

.s-sideBarMobile > .headContainer > .buttonClose {
  position: relative;
  height: 100%;
}

.s-sideBarMobile > .content {
  width: 100%;
  height: 100%;
}

.Spinner1 {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}

.Spinner1[state*=passive] {
  visibility: hidden;
}

.Spinner1 > div {
  box-sizing: border-box;
  display: block;
  position: absolute;
  width: 80%;
  height: 80%;
  margin: 10%;
  border: 8px solid #fff;
  border-radius: 50%;
  animation: Spinner1 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
  border-color: #fff transparent transparent transparent;
}

.Spinner1 > div:nth-child(1) {
  animation-delay: -0.45s;
}

.Spinner1 > div:nth-child(2) {
  animation-delay: -0.3s;
}

.Spinner1 > div:nth-child(3) {
  animation-delay: -0.15s;
}

@keyframes Spinner1 {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.DropDownInputMain_S {
  position: relative;
  overflow: visible !important;
}

.DropDownInputMain_S > .S_InputDiv {
  width: 100%;
  margin: 0;
  margin-bottom: 0;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px;
}

.DropDownInputMain_S > .S_InputDiv > input {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > button {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > .response {
  display: none;
}

.DropDownInputMain_S > .DropDown_expander {
  z-index: 120;
  background-color: transparent;
  position: absolute;
  padding: 0;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.DropDownInputMain_S > .DropDown_expander[state*=active] {
  height: 10em;
}

.DropDownInputMain_S > .DropDown_expander[state*=passive] {
  height: 0em;
}

.DropDownInputMain_S > .DropDown_expander > div {
  z-index: 122;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-top: 0.2em;
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div > span {
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain {
  position: relative;
  overflow: visible !important;
}

.n_SelectInputMain > .Select_expander {
  z-index: 1;
  background-color: transparent;
  position: absolute;
  padding: 1%;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.n_SelectInputMain > .Select_expander[state*=active] {
  height: max-content;
  max-height: 10em;
}

.n_SelectInputMain > .Select_expander[state*=passive] {
  height: 0em;
  display: none;
}

.n_SelectInputMain > .Select_expander > div {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-bottom: 0.5em;
  text-align: center;
  cursor: pointer;
  transition: box-shadow 0.2s;
  transition-timing-function: ease-in;
}

.n_SelectInputMain > .Select_expander > div > span {
  text-align: center;
}

.n_SelectInputMain > .Select_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain > .Select_expander > div:hover {
  box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 3px, rgba(0, 0, 0, 0.21) 0px 0px 3px;
}

.n_inputDiv {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

.n_inputDiv > .inputBody {
  display: flex;
  flex-direction: row;
}

.n_inputDiv > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

.n_inputDiv > .inputBody > input:valid, .n_inputDiv > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

.n_inputDiv > .inputBody > input:valid + label span, .n_inputDiv > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

.n_inputDiv > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

.n_inputDiv > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.n_inputDiv > .inputBody > button {
  background-color: transparent;
}

.n_inputDiv > .response > span {
  color: red;
}

s-input {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

s-input > .inputBody {
  display: flex;
  flex-direction: row;
}

s-input > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

s-input > .inputBody > input:valid, s-input > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

s-input > .inputBody > input:valid + label span, s-input > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

s-input > .inputBody > input[state=passive] {
  border-bottom: 2px red solid;
}

s-input > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

s-input > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

s-input > .inputBody > button {
  background-color: transparent;
}

s-input > .response > span {
  color: red;
}

.S-AddressInput {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  column-gap: 0.5em;
  grid-template-areas: "fN fN fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.S-AddressInput > div, .S-AddressInput s-input {
  background-color: transparent;
  box-sizing: border-box;
}

.S-AddressInput > div > .inputBody, .S-AddressInput s-input > .inputBody {
  padding-top: 0.5em;
}

.S-AddressInput > div[identifier*=title], .S-AddressInput s-input[identifier*=title] {
  display: none;
}

.S-AddressInput > div[id*=salutation], .S-AddressInput s-input[id*=salutation] {
  display: none;
  grid-area: none;
}

.S-AddressInput > div[identifier*=firstName], .S-AddressInput s-input[identifier*=firstName] {
  grid-area: fN;
}

.S-AddressInput > div[identifier*=lastName], .S-AddressInput s-input[identifier*=lastName] {
  grid-area: lN;
}

.S-AddressInput > div[identifier*=postcode], .S-AddressInput s-input[identifier*=postcode] {
  grid-area: plz;
}

.S-AddressInput > div[identifier*=city], .S-AddressInput s-input[identifier*=city] {
  grid-area: ct;
}

.S-AddressInput > div[id*=country], .S-AddressInput s-input[id*=country] {
  grid-area: cy;
}

.S-AddressInput > div[identifier*=street], .S-AddressInput s-input[identifier*=street] {
  grid-area: st;
}

.S-AddressInput > div[identifier*=housenumber], .S-AddressInput s-input[identifier*=housenumber] {
  grid-area: hn;
}

.S-AddressInput > div[identifier*=email], .S-AddressInput s-input[identifier*=email] {
  grid-area: ema;
}

.S-AddressInput > div[identifier*=phone], .S-AddressInput s-input[identifier*=phone] {
  grid-area: ph;
}

.S-AddressInput > s-input {
  padding-bottom: -0.5em;
}

.n_RadioButton {
  position: relative;
}

.n_RadioButton > .radio_headline {
  position: relative;
}

.n_RadioButton > .inner {
  position: relative;
}

.n_RadioButton > .inner > div {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
  justify-content: start;
  align-items: center;
}

.n_RadioButton > .inner > div > .inputBody {
  position: relative;
  box-sizing: border-box;
  width: 1em;
  margin: 0.5em;
  height: 1em;
  min-width: 1em;
}

.n_RadioButton > .inner > div > .inputBody > input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span {
  box-sizing: border-box;
  background-color: #2196F3;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span:after {
  box-sizing: border-box;
  display: block;
}

.n_RadioButton > .inner > div > .inputBody > span {
  box-sizing: content-box;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background-color: #eee;
  border-radius: 50%;
}

.n_RadioButton > .inner > div > .inputBody > span:after {
  box-sizing: border-box;
  content: "";
  left: 0;
  top: 0;
  position: absolute;
  display: none;
  margin: 25%;
  width: 50%;
  height: 50%;
  border-radius: 50%;
  background: white;
}

.n_RadioButton > .inner > div > .inputBody:hover input ~ span {
  background-color: #ccc;
}

.toggleButton {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  display: flex;
  justify-content: space-around;
  width: max-content;
  overflow: hidden;
}

.toggleButton > button {
  width: 100%;
  padding: 0.5rem;
  background-color: transparent;
  border: none;
  cursor: pointer;
}

.toggleButton > button:hover {
  background-color: #FFAD5B;
}

.toggleButton > button[state*=active] {
  background-color: #ffa228;
}

.s-ToggleButton_2 {
  width: max-content;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
}

.s-ToggleButton_2 > button {
  border: none;
  border-radius: 0;
  outline: none;
  padding: 0em;
  min-height: 1rem;
  height: 100%;
  width: 100%;
  margin: 0.25em;
}

.s-ToggleButton_2 > button.btFALSE {
  background-color: red;
}

.s-ToggleButton_2 > button.btFALSE[state*=passive] {
  background-color: rgba(255, 0, 0, 0.3);
}

.s-ToggleButton_2 > button.btTRUE {
  background-color: green;
}

.s-ToggleButton_2 > button.btTRUE[state*=passive] {
  background-color: rgba(0, 128, 0, 0.3);
}

.S_SVGElement_BODY {
  position: relative;
  background-color: transparent;
}

.S_SVGElement_BODY > svg {
  position: relative;
}

.addressMenuNewMain > [id*=menuElement] > div {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  grid-template-areas: "salutation salutation fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.addressMenuNewMain > [id*=menuElement] > div > div {
  background-color: transparent;
  box-sizing: border-box;
}

.addressMenuNewMain > [id*=menuElement] > div > div.S_InputDiv {
  padding-bottom: -0.5em;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=title] {
  display: none;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=salutation] {
  grid-area: salutation;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=firstName] {
  grid-area: fN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=lastName] {
  grid-area: lN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=postcode] {
  grid-area: plz;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=city] {
  grid-area: ct;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=country] {
  grid-area: cy;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=street] {
  grid-area: st;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=housenumber] {
  grid-area: hn;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=email] {
  grid-area: ema;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=phone] {
  grid-area: ph;
}

/* Media Queries */
/* ------- */
/* Desktop */
/* ------- */
.CursorMain {
  display: all;
  backface-visibility: hidden;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
  width: 100px;
  height: 100px;
  background-color: red;
  z-index: 999;
}

.customCursor {
  position: absolute;
  box-sizing: content-box;
  will-change: transform;
  margin: 0;
  padding: 0;
  top: 0;
  left: 0;
  pointer-events: none;
  user-select: none;
  display: auto;
  z-index: 1000;
}
.customCursor.red {
  background-color: red;
}
.customCursor.orange {
  color: orange !important;
}

.button_Default {
  user-select: none;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 0px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  box-sizing: content-box;
  margin: 0.5em;
  overflow: hidden;
}
.button_Default > span {
  box-sizing: border-box;
}
.button_Default[state*=active] {
  background-color: #FFAD5B;
}
.button_Default[state*=passive] {
  background-color: #fff1de;
}
.button_Default:hover {
  background-color: #ffa228;
}

.button_General {
  user-select: none;
  background-color: transparent;
  border: none;
  color: #000000;
  display: inline-block;
  font-size: 1em;
  cursor: pointer;
  border-radius: 0px;
}
.button_General > span {
  display: block;
  position: relative;
  text-align: center;
}
.button_General > span:not(.material-symbols-outlined) {
  text-decoration: underline;
}
.button_General > .dropdown {
  position: absolute;
  left: 100%;
  margin-left: 10%;
  top: 0;
  width: fit-content;
  height: max-content;
  overflow: hidden;
}
.button_General:hover > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonAnimation;
}
.button_General:hover > span.material-symbols-outlined {
  color: #ffa228 !important;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonIconAnimation;
}
.button_General:hover > span.material-symbols-outlined.rotate90 {
  animation-name: buttonIconAnimation90;
}
.button_General:hover:after > span {
  color: white;
}
.button_General:hover:after > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-out;
  animation-fill-mode: backwards;
  animation-direction: reverse;
  animation-name: buttonAnimationB;
}
.button_General:hover:after > span.material-symbols-outlined {
  color: #ffa228 !important;
}
.button_General.simple {
  background-color: transparent;
  border: none;
  text-decoration: underline;
}

/* width */
::-webkit-scrollbar {
  margin-inline: 2px;
  width: 5px;
}

/* Track */
::-webkit-scrollbar-track {
  width: 2px;
  transform: scale(2);
  background: transparent;
}

/* Handle */
::-webkit-scrollbar-thumb {
  width: 5px;
  transform: scale(2);
  background: rgb(189, 189, 189);
  border-radius: 0px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: gray;
}

body {
  background-color: #fff8f1;
}
body * {
  font-family: "Arial";
  margin: 0;
  padding: 0;
}

.Slider_main > .Slider_inputBody input[type=range] {
  appearance: none;
  background: transparent;
  width: 100%;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-thumb {
  position: relative;
  appearance: none;
  width: 9px;
  height: 20px;
  background-color: #FFAD5B;
  transform: translateY(-40%);
  border-radius: 2px 2px;
  z-index: 20;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-runnable-track {
  position: relative;
  cursor: pointer;
  border-radius: 2px 2px;
  height: 20%;
  z-index: 19;
  /* Hides the slider so custom styles can be added */
  background-color: #000000;
}
.Slider_main > .Slider_inputBody > hr {
  position: absolute;
  margin-left: calc((100% - (2.1em + 6px)) / var(--size) * var(--index));
  z-index: 1;
  left: 5px;
  background-color: darkgray;
  width: 0.5px;
  top: 25%;
  height: 50%;
  margin-top: 0;
}
.Slider_main > .Slider_inputBody > hr:nth-child(even) {
  top: 12.5%;
  height: 75%;
}

body {
  position: relative;
  width: 100vw;
  overflow: hidden;
  box-sizing: content-box;
  top: 6vh;
  height: 94vh;
}
@media only screen and (max-width: 980px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 981px) and (max-width: 1199px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 1200px) {
  body {
    font-size: 1em;
  }
}

.Table {
  border: 1px solid black;
  position: relative;
  width: 50%;
}
.Table > div {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}
.Table > div > label {
  position: relative;
  overflow: hidden;
}
.Table > div > span {
  position: relative;
  overflow: hidden;
}

.bold {
  font-weight: bold;
}

.LoadBar {
  z-index: 3;
  border-radius: 0px;
  position: relative !important;
  background-color: red !important;
  width: 100% !important;
  height: 2em !important;
  overflow: hidden;
}
.LoadBar .LoadBar-progress {
  position: relative;
  height: 100%;
  background-color: green !important;
}

.LineDiv {
  position: relative;
  margin: 0;
  padding: 0;
  flex: auto;
  overflow: hidden;
  height: 100%;
  border: none;
}
.LineDiv hr {
  display: block;
  position: relative;
  color: orange;
  background-color: orange;
  opacity: 1;
  width: 0%;
  margin: 0;
  top: 50%;
  visibility: visible;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;
}

@keyframes NavBarLine {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}
.Text-primary {
  color: #000000;
}

.Text-secondary {
  color: #BCBCBC;
}

.Text-small {
  font-size: 0.75em;
}

.SliderDivMain {
  border: 1px solid black;
}

.TextInputDiv {
  position: relative;
  background-color: #fff8f1;
  border-radius: 0px;
  margin: 0.5em;
  margin-bottom: 1.5em;
  font-size: inherit;
  height: 10em;
}
.TextInputDiv textarea {
  position: relative;
  outline: 0;
  resize: none;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 0px !important;
}
.TextInputDiv textarea.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 1.1em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.TextInputDiv textarea::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.TextInputDiv label {
  user-select: none;
  position: absolute;
  z-index: 1;
  width: 100%;
  background-color: #fff8f1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.11em;
  padding-top: 0.39em;
  padding-bottom: 0.13em;
  border-top-right-radius: 5px 5px;
}
.TextInputDiv .horizontalLine {
  position: absolute;
  z-index: 2;
  width: 100%;
  top: 0.89em;
  height: 0px;
  left: 0;
  margin-block: 0px;
  margin-inline: 0.5em;
}

.InputDivMain {
  position: relative;
  background-color: #fff8f1;
  margin: 0.5em;
  height: min-content;
  display: inline-flex;
}
.InputDivMain button {
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}
.InputDivMain button > span {
  position: relative;
  font-size: 1.3em;
}
.InputDivMain button[state*=active] {
  background-color: #ffa228;
}
.InputDivMain button[state*=passive] {
  background-color: transparent;
}
.InputDivMain button[state*=passive]:hover {
  background-color: #FFAD5B;
}
.InputDivMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}
.InputDivMain input {
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 0px !important;
  outline: none;
}
.InputDivMain input.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.InputDivMain input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}
.InputDivMain input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.InputDivMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

@keyframes buttonAnimation {
  from {
    transform: translateY(0em);
    text-underline-offset: 0em;
  }
  to {
    transform: translateY(-0.1em);
    text-underline-offset: 0.2em;
  }
}
@keyframes buttonAnimationB {
  to {
    transform: translateY(0em);
    text-underline-offset: 0em;
  }
  from {
    transform: translateY(-0.1em);
    text-underline-offset: 0.2em;
  }
}
@keyframes buttonIconAnimation {}
@keyframes buttonIconAnimation90 {
  from {
    transform: translateY(0em) rotate(90deg);
  }
  to {
    transform: translateY(-0.1em) rotate(90deg);
  }
}
.RadioButton {
  border: 1px solid black;
  position: relative;
}
.RadioButton > div {
  width: 100%;
  height: 100%;
  position: relative;
  align-items: center;
  display: flex;
  flex-direction: row;
  cursor: pointer;
}
.RadioButton > div > input {
  position: relative;
  margin-inline: 2%;
  cursor: pointer;
}
.RadioButton > div > div {
  position: relative;
  height: 100%;
}
.RadioButton > div > div[id*=Price] {
  font-size: 1em;
  margin-left: auto;
  margin-right: 5%;
}

:root {
  --main-font: "Montserrat";
  --primary: "";
  --primary-text: #333;
}

* {
  margin: 0;
  padding: 0;
  font-family: var(--main-font);
}

.tooltip_S[state*=active]:after, .tooltip_S[state*=active]:before {
  display: none;
}

.tooltip_S[data-tooltip-direction=right] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=right]:after {
  pointer-events: none;
  content: attr(data-tooltip-value);
  position: absolute;
  z-index: 10;
  top: 50%;
  transform: translateY(-50%);
  left: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=right]:before {
  pointer-events: none;
  content: "";
  position: absolute;
  z-index: 10;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-right: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=right]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  left: 110%;
}

.tooltip_S[data-tooltip-direction=right]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  left: 103%;
}

.tooltip_S[data-tooltip-direction=right]:hover:after, .tooltip_S[data-tooltip-direction=right]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=top] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=top]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  bottom: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=top]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  bottom: 130%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after {
  bottom: 120%;
}

.tooltip_S[data-tooltip-direction=top]:hover:before {
  bottom: 103%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after, .tooltip_S[data-tooltip-direction=top]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=left] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=left]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=left]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-left: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  right: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=left]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  right: 110%;
}

.tooltip_S[data-tooltip-direction=left]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  right: 103%;
}

.tooltip_S[data-tooltip-direction=left]:hover:after, .tooltip_S[data-tooltip-direction=left]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=bottom] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=bottom]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=bottom]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-bottom: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  top: 130%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after {
  top: 120%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:before {
  top: 103%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after, .tooltip_S[data-tooltip-direction=bottom]:hover:before {
  opacity: 1;
}

.AdaptiveTableMain {
  position: relative;
  display: block;
  width: 98%;
  height: 100%;
  overflow: hidden;
  overflow-y: auto;
}

.AdaptiveTableMain > .ListMain {
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

.AdaptiveTableMain > .ListMain > .column {
  position: relative;
  width: 90%;
  height: fit-content;
  flex-direction: column;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement {
  user-select: none;
  padding: 0.5em;
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: inline-block;
  height: fit-content;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > img {
  user-select: none;
  box-sizing: border-box;
  overflow: hidden;
  display: block;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  position: relative;
  width: 100%;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv {
  user-select: none;
  border-radius: 5px 5px;
  position: absolute;
  top: 0;
  margin: 0.5em;
  left: 0;
  width: calc(100% - 1em);
  height: calc(100% - 1em);
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
  background-color: rgba(94, 94, 94, 0.471);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv:hover {
  opacity: 1;
  box-shadow: rgba(0, 0, 0, 0.55) 0px 0px 3px, rgba(0, 0, 0, 0.51) 0px 0px 3px;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .informationDiv {
  display: none;
  position: relative;
  top: 0;
  margin: 0.5em;
  border-radius: 5px 5px;
  left: 0;
  background-color: rgba(255, 0, 0, 0.299);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv {
  user-select: none;
  position: absolute;
  bottom: 0;
  left: 0;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv > button {
  user-select: none;
}

.AmountDiv {
  display: flex;
  position: relative;
  border: 1px solid black;
  box-sizing: border-box;
  width: fit-content;
  padding: 0.2em;
}

.AmountDiv > button {
  width: 33%;
  position: relative;
  box-sizing: border-box;
  border-radius: 0px 0px;
}

.AmountDiv > button > span {
  font-size: 1em;
}

.AmountDiv > div {
  position: relative;
  width: 2em;
  margin: 0;
  background-color: transparent;
  padding: 0;
  overflow: hidden;
}

.AmountDiv > div > input {
  font-size: 1em;
  background-color: transparent;
  position: relative;
  border: none;
  outline: none;
  width: 100%;
  height: 100%;
  text-align: center;
}

.button_Default {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.button_Default > span {
  display: block;
}

.button_Default:hover {
  background-color: red;
}

.s-button_basic {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_basic > span {
  display: block;
}

.s-button_link {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_link > span {
  text-decoration: underline;
  color: blue;
  display: block;
}

.s-button_link:hover > span {
  color: rgb(34, 34, 255);
}

.DropDownInputMain {
  position: relative;
  background-color: #ffd7af;
  border-radius: 5px;
  margin: 0.5em;
  font-size: inherit;
}

.DropDownInputMain select {
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.25em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 5px 5px !important;
}

.DropDownInputMain select.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.25em;
}

.DropDownInputMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.DropDownInputMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

.header {
  position: fixed;
  width: 100%;
  height: 4rem;
  display: flex;
  flex-direction: row;
  alignItems: center;
  justifyContent: space-between !important;
  background-color: var(--bg-color);
  box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.2);
}

.header > .logoLinkBox {
  position: relative;
  margin-left: 3rem;
  min-width: 3rem;
  width: auto;
  max-width: 15rem;
  height: 4rem;
  display: flex;
  align-items: center;
  justify-content: start;
  text-decoration: none;
  cursor: pointer;
  user-select: none;
}

.header > .logoLinkBox > .logoIcon {
  position: relative;
  width: 2.5rem;
}

.header > .logoLinkBox > .logoText {
  position: relative;
  margin-left: 0.5rem;
  font-size: 1.3rem;
  font-weight: 600;
  color: #333 !important;
}

.header > .headerNavigation {
  position: absolute;
  right: 3rem;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: end;
}

.header > .headerNavigation > button {
  font-size: 1.1rem;
  margin-left: 1.5rem;
}

.header > .headerNavigation > button > span {
  position: relative;
  text-decoration: none;
  color: #a8a8a8;
}

.S_InputDiv {
  position: relative;
  background-color: #ffd7af;
  margin: 0.5em;
  height: min-content;
  display: flex;
  flex-wrap: wrap;
}

.S_InputDiv > button {
  flex: 0 1;
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}

.S_InputDiv > button > span {
  position: relative;
  font-size: 1.3em;
}

.S_InputDiv > button[state*=active] {
  background-color: #ffa228;
}

.S_InputDiv > button[state*=passive] {
  background-color: transparent;
}

.S_InputDiv > button[state*=passive]:hover {
  background-color: #FFAD5B;
}

.S_InputDiv label.switchLabel {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.S_InputDiv input {
  flex: 2 1;
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 5px 5px !important;
  outline: none;
}

.S_InputDiv input.filled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}

.S_InputDiv input[state*=passive] {
  color: red;
  background-color: #fff1de;
}

.S_InputDiv input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}

.S_InputDiv input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}

.S_InputDiv > .response {
  align-self: flex-end;
  text-align: justify;
  width: 100%;
  color: red;
}

.S_InputDiv .invalidInput {
  color: red;
  background-color: #fff1de;
}

.progressBar_Splint {
  position: absolute;
  width: 10em;
  background-color: blue;
  display: flex;
}

.progressBar_Splint > .S_progressBar_Body {
  width: 100%;
  border: 1px solid black;
}

.progressBar_Splint > .S_progressBar_Body > .S_progressBar_Inner {
  width: 100%;
  height: 100%;
  background-color: red;
}

.S-SliderMain {
  margin-top: 0.4em;
  margin-bottom: 0.4em;
}

.S-SliderMain[drawDivider=true]::after {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-bottom: 1px solid #BDBDBD;
  left: 0;
  margin-top: 0.25em;
  position: relative;
}

.S-SliderMain[drawDivider=true]::before {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-top: 1px solid #BDBDBD;
  left: 0;
  margin-bottom: 0.2em;
  position: relative;
}

.S-SliderMain > .label {
  position: relative;
  width: 100%;
  display: inline-block;
  box-sizing: border-box;
  text-align: left;
}

.S-SliderMain > .contentBody {
  height: 1em;
  display: flex;
}

.S-SliderMain > .contentBody > .sliderBody {
  order: 1;
  height: 100%;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range] {
  width: 100%;
  position: relative;
  font-size: 1em;
  height: 100%;
  display: inline-block;
  outline: none;
  -webkit-appearance: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-runnable-track {
  box-sizing: border-box;
  width: 100%;
  height: 0.5em;
  background: #ffa228;
  border: none;
  border-radius: 10px;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  border: none;
  vertical-align: baseline;
  height: 1em;
  width: 1em;
  border-radius: 10%;
  margin-top: -0.25em;
  background: white;
  box-sizing: border-box;
  border: 1px solid black;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus {
  outline: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus::-webkit-slider-runnable-track {
  background: #ffa228;
}

.S-SliderMain > .contentBody > .sliderBody > datalist {
  display: none;
  height: 20rem;
  margin-top: -23px;
  background-color: red;
  color: red;
}

.S-SliderMain > .contentBody > .sliderBody > datalist > option {
  background-color: red;
  color: red;
  height: 50px;
}

.S-SliderMain > .contentBody > .valueOutput {
  order: 2;
  height: 1em;
  width: 1.5em;
  display: inline-block;
  box-sizing: border-box;
  text-align: center;
}

.S-SliderMain > .contentBody > .valueOutput[hidden=true] {
  display: none;
}

.SlideShow_S {
  position: relative;
  height: 100%;
  overflow-y: visible !important;
  overflow-x: auto;
  box-sizing: border-box;
  white-space: nowrap;
  background-color: transparent;
}

.SlideShow_S > .inner {
  display: inline-block;
  position: relative;
  height: 100%;
  width: max-content;
  margin-left: auto;
  margin-right: auto;
  background-color: transparent;
}

.SlideShow_S > .inner > .listElement {
  position: relative;
  height: calc(100% - 0.4em);
  box-sizing: border-box;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  margin: 0.2em;
  margin-inline: 0.5em;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: end;
  align-items: end;
}

.SlideShow_S > .inner > .listElement > div {
  bottom: 0;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  aspect-ratio: 2/1;
}

.SlideShow_S > .inner > .listElement > div > span {
  font-size: 2em;
}

.subWindow_MAIN {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: all;
  user-select: none;
}

.subWindow_MAIN > .background {
  position: absolute;
  z-index: 1;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: rgba(255, 255, 255, 0.8509803922);
}

.subWindow_MAIN .content {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  position: absolute;
  z-index: 2;
  width: fit-content;
  max-height: 90vh;
  max-width: 90vw;
  overflow: hidden;
  margin: auto;
  left: 50%;
  height: max-content;
  top: 50%;
  user-select: none;
  pointer-events: all;
  transform: translate(-50%, -50%);
}

.subWindow_MAIN .content > button.button_close {
  position: absolute;
  right: 0.5em;
  z-index: 3;
}

.TableMain {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
}

.TableMain > .ListMain {
  position: relative;
  width: 100%;
  height: 100%;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;
}

.TableMain > .ListMain > .ListElement {
  margin: 0.5em;
  position: relative;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement > .ListElementHover {
  position: absolute;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 1;
  margin: 0;
  padding: 0;
  border: inherit;
  box-shadow: inherit;
  border-radius: inherit;
  background-color: rgba(64, 64, 64, 0.63);
  display: flex;
  flex-direction: column;
  transition: opacity 0.2s;
}

.horizontalLine {
  position: relative;
  margin: 0.1rem;
  left: 1%;
  width: 98%;
  opacity: 1;
  color: #BDBDBD;
  border: none;
  border-top: 0.5px solid #BDBDBD;
  background-color: #BDBDBD;
}

.PriceDiv {
  width: max-content;
  height: max-content !important;
  display: inline-block;
  overflow-wrap: anywhere;
  white-space: nowrap;
}

.s-ObjectEditor {
  width: 25rem;
  box-shadow: inset 1px 0px 0px 0px black, 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white;
}

.s-ObjectEditor > .Table2D {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table > tr {
  width: 0rem;
  box-sizing: border-box;
  border-bottom: 1px solid black;
  overflow: visible;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] {
  display: flex;
  flex-direction: column;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] > td[col*="1"] {
  margin-left: 1rem;
}

.s-ObjectEditor > .Table2D > table > tr > td {
  box-sizing: border-box;
  width: 100%;
  overflow: visible;
  padding-left: 0.25rem;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="0"] {
  width: 33%;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="2"] {
  width: min-content;
}

.s-ObjectEditor > .Table2D > table > tr > td > div {
  position: relative;
}

.s-sideBarMobile {
  position: absolute;
  height: 100%;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  width: 200px;
  transform: translateX(-100%);
  transition: transform 1s ease-in;
}

.s-sideBarMobile[s-state*=active] {
  transform: translateX(0);
}

.s-sideBarMobile > .headContainer {
  display: flex;
  padding: 0.25em;
  height: max-content;
  justify-content: center;
  align-items: center;
  box-shadow: 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white, inset 0px -1px 0px 0px gray;
}

.s-sideBarMobile > .headContainer > .headline {
  width: 100%;
  font-size: 2em;
}

.s-sideBarMobile > .headContainer > .buttonClose {
  position: relative;
  height: 100%;
}

.s-sideBarMobile > .content {
  width: 100%;
  height: 100%;
}

.Spinner1 {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}

.Spinner1[state*=passive] {
  visibility: hidden;
}

.Spinner1 > div {
  box-sizing: border-box;
  display: block;
  position: absolute;
  width: 80%;
  height: 80%;
  margin: 10%;
  border: 8px solid #fff;
  border-radius: 50%;
  animation: Spinner1 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
  border-color: #fff transparent transparent transparent;
}

.Spinner1 > div:nth-child(1) {
  animation-delay: -0.45s;
}

.Spinner1 > div:nth-child(2) {
  animation-delay: -0.3s;
}

.Spinner1 > div:nth-child(3) {
  animation-delay: -0.15s;
}

@keyframes Spinner1 {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.DropDownInputMain_S {
  position: relative;
  overflow: visible !important;
}

.DropDownInputMain_S > .S_InputDiv {
  width: 100%;
  margin: 0;
  margin-bottom: 0;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px;
}

.DropDownInputMain_S > .S_InputDiv > input {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > button {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > .response {
  display: none;
}

.DropDownInputMain_S > .DropDown_expander {
  z-index: 120;
  background-color: transparent;
  position: absolute;
  padding: 0;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.DropDownInputMain_S > .DropDown_expander[state*=active] {
  height: 10em;
}

.DropDownInputMain_S > .DropDown_expander[state*=passive] {
  height: 0em;
}

.DropDownInputMain_S > .DropDown_expander > div {
  z-index: 122;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-top: 0.2em;
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div > span {
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain {
  position: relative;
  overflow: visible !important;
}

.n_SelectInputMain > .Select_expander {
  z-index: 1;
  background-color: transparent;
  position: absolute;
  padding: 1%;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.n_SelectInputMain > .Select_expander[state*=active] {
  height: max-content;
  max-height: 10em;
}

.n_SelectInputMain > .Select_expander[state*=passive] {
  height: 0em;
  display: none;
}

.n_SelectInputMain > .Select_expander > div {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-bottom: 0.5em;
  text-align: center;
  cursor: pointer;
  transition: box-shadow 0.2s;
  transition-timing-function: ease-in;
}

.n_SelectInputMain > .Select_expander > div > span {
  text-align: center;
}

.n_SelectInputMain > .Select_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain > .Select_expander > div:hover {
  box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 3px, rgba(0, 0, 0, 0.21) 0px 0px 3px;
}

.n_inputDiv {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

.n_inputDiv > .inputBody {
  display: flex;
  flex-direction: row;
}

.n_inputDiv > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

.n_inputDiv > .inputBody > input:valid, .n_inputDiv > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

.n_inputDiv > .inputBody > input:valid + label span, .n_inputDiv > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

.n_inputDiv > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

.n_inputDiv > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.n_inputDiv > .inputBody > button {
  background-color: transparent;
}

.n_inputDiv > .response > span {
  color: red;
}

s-input {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

s-input > .inputBody {
  display: flex;
  flex-direction: row;
}

s-input > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

s-input > .inputBody > input:valid, s-input > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

s-input > .inputBody > input:valid + label span, s-input > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

s-input > .inputBody > input[state=passive] {
  border-bottom: 2px red solid;
}

s-input > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

s-input > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

s-input > .inputBody > button {
  background-color: transparent;
}

s-input > .response > span {
  color: red;
}

.S-AddressInput {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  column-gap: 0.5em;
  grid-template-areas: "fN fN fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.S-AddressInput > div, .S-AddressInput s-input {
  background-color: transparent;
  box-sizing: border-box;
}

.S-AddressInput > div > .inputBody, .S-AddressInput s-input > .inputBody {
  padding-top: 0.5em;
}

.S-AddressInput > div[identifier*=title], .S-AddressInput s-input[identifier*=title] {
  display: none;
}

.S-AddressInput > div[id*=salutation], .S-AddressInput s-input[id*=salutation] {
  display: none;
  grid-area: none;
}

.S-AddressInput > div[identifier*=firstName], .S-AddressInput s-input[identifier*=firstName] {
  grid-area: fN;
}

.S-AddressInput > div[identifier*=lastName], .S-AddressInput s-input[identifier*=lastName] {
  grid-area: lN;
}

.S-AddressInput > div[identifier*=postcode], .S-AddressInput s-input[identifier*=postcode] {
  grid-area: plz;
}

.S-AddressInput > div[identifier*=city], .S-AddressInput s-input[identifier*=city] {
  grid-area: ct;
}

.S-AddressInput > div[id*=country], .S-AddressInput s-input[id*=country] {
  grid-area: cy;
}

.S-AddressInput > div[identifier*=street], .S-AddressInput s-input[identifier*=street] {
  grid-area: st;
}

.S-AddressInput > div[identifier*=housenumber], .S-AddressInput s-input[identifier*=housenumber] {
  grid-area: hn;
}

.S-AddressInput > div[identifier*=email], .S-AddressInput s-input[identifier*=email] {
  grid-area: ema;
}

.S-AddressInput > div[identifier*=phone], .S-AddressInput s-input[identifier*=phone] {
  grid-area: ph;
}

.S-AddressInput > s-input {
  padding-bottom: -0.5em;
}

.n_RadioButton {
  position: relative;
}

.n_RadioButton > .radio_headline {
  position: relative;
}

.n_RadioButton > .inner {
  position: relative;
}

.n_RadioButton > .inner > div {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
  justify-content: start;
  align-items: center;
}

.n_RadioButton > .inner > div > .inputBody {
  position: relative;
  box-sizing: border-box;
  width: 1em;
  margin: 0.5em;
  height: 1em;
  min-width: 1em;
}

.n_RadioButton > .inner > div > .inputBody > input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span {
  box-sizing: border-box;
  background-color: #2196F3;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span:after {
  box-sizing: border-box;
  display: block;
}

.n_RadioButton > .inner > div > .inputBody > span {
  box-sizing: content-box;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background-color: #eee;
  border-radius: 50%;
}

.n_RadioButton > .inner > div > .inputBody > span:after {
  box-sizing: border-box;
  content: "";
  left: 0;
  top: 0;
  position: absolute;
  display: none;
  margin: 25%;
  width: 50%;
  height: 50%;
  border-radius: 50%;
  background: white;
}

.n_RadioButton > .inner > div > .inputBody:hover input ~ span {
  background-color: #ccc;
}

.toggleButton {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  display: flex;
  justify-content: space-around;
  width: max-content;
  overflow: hidden;
}

.toggleButton > button {
  width: 100%;
  padding: 0.5rem;
  background-color: transparent;
  border: none;
  cursor: pointer;
}

.toggleButton > button:hover {
  background-color: #FFAD5B;
}

.toggleButton > button[state*=active] {
  background-color: #ffa228;
}

.s-ToggleButton_2 {
  width: max-content;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
}

.s-ToggleButton_2 > button {
  border: none;
  border-radius: 0;
  outline: none;
  padding: 0em;
  min-height: 1rem;
  height: 100%;
  width: 100%;
  margin: 0.25em;
}

.s-ToggleButton_2 > button.btFALSE {
  background-color: red;
}

.s-ToggleButton_2 > button.btFALSE[state*=passive] {
  background-color: rgba(255, 0, 0, 0.3);
}

.s-ToggleButton_2 > button.btTRUE {
  background-color: green;
}

.s-ToggleButton_2 > button.btTRUE[state*=passive] {
  background-color: rgba(0, 128, 0, 0.3);
}

.S_SVGElement_BODY {
  position: relative;
  background-color: transparent;
}

.S_SVGElement_BODY > svg {
  position: relative;
}

.addressMenuNewMain > [id*=menuElement] > div {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  grid-template-areas: "salutation salutation fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.addressMenuNewMain > [id*=menuElement] > div > div {
  background-color: transparent;
  box-sizing: border-box;
}

.addressMenuNewMain > [id*=menuElement] > div > div.S_InputDiv {
  padding-bottom: -0.5em;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=title] {
  display: none;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=salutation] {
  grid-area: salutation;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=firstName] {
  grid-area: fN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=lastName] {
  grid-area: lN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=postcode] {
  grid-area: plz;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=city] {
  grid-area: ct;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=country] {
  grid-area: cy;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=street] {
  grid-area: st;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=housenumber] {
  grid-area: hn;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=email] {
  grid-area: ema;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=phone] {
  grid-area: ph;
}

/* Media Queries */
/* ------- */
/* Desktop */
/* ------- */
.CursorMain {
  display: all;
  backface-visibility: hidden;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
  width: 100px;
  height: 100px;
  background-color: red;
  z-index: 999;
}

.customCursor {
  position: absolute;
  box-sizing: content-box;
  will-change: transform;
  margin: 0;
  padding: 0;
  top: 0;
  left: 0;
  pointer-events: none;
  user-select: none;
  display: auto;
  z-index: 1000;
}
.customCursor.red {
  background-color: red;
}
.customCursor.orange {
  color: orange !important;
}

.button_Default {
  user-select: none;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 0px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  box-sizing: content-box;
  margin: 0.5em;
  overflow: hidden;
}
.button_Default > span {
  box-sizing: border-box;
}
.button_Default[state*=active] {
  background-color: #FFAD5B;
}
.button_Default[state*=passive] {
  background-color: #fff1de;
}
.button_Default:hover {
  background-color: #ffa228;
}

.button_General {
  user-select: none;
  background-color: transparent;
  border: none;
  color: #000000;
  display: inline-block;
  font-size: 1em;
  cursor: pointer;
  border-radius: 0px;
}
.button_General > span {
  display: block;
  position: relative;
  text-align: center;
}
.button_General > span:not(.material-symbols-outlined) {
  text-decoration: underline;
}
.button_General > .dropdown {
  position: absolute;
  left: 100%;
  margin-left: 10%;
  top: 0;
  width: fit-content;
  height: max-content;
  overflow: hidden;
}
.button_General:hover > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonAnimation;
}
.button_General:hover > span.material-symbols-outlined {
  color: #ffa228 !important;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonIconAnimation;
}
.button_General:hover > span.material-symbols-outlined.rotate90 {
  animation-name: buttonIconAnimation90;
}
.button_General:hover:after > span {
  color: white;
}
.button_General:hover:after > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-out;
  animation-fill-mode: backwards;
  animation-direction: reverse;
  animation-name: buttonAnimationB;
}
.button_General:hover:after > span.material-symbols-outlined {
  color: #ffa228 !important;
}
.button_General.simple {
  background-color: transparent;
  border: none;
  text-decoration: underline;
}

/* width */
::-webkit-scrollbar {
  margin-inline: 2px;
  width: 5px;
}

/* Track */
::-webkit-scrollbar-track {
  width: 2px;
  transform: scale(2);
  background: transparent;
}

/* Handle */
::-webkit-scrollbar-thumb {
  width: 5px;
  transform: scale(2);
  background: rgb(189, 189, 189);
  border-radius: 0px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: gray;
}

body {
  background-color: #fff8f1;
}
body * {
  font-family: "Arial";
  margin: 0;
  padding: 0;
}

.Slider_main > .Slider_inputBody input[type=range] {
  appearance: none;
  background: transparent;
  width: 100%;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-thumb {
  position: relative;
  appearance: none;
  width: 9px;
  height: 20px;
  background-color: #FFAD5B;
  transform: translateY(-40%);
  border-radius: 2px 2px;
  z-index: 20;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-runnable-track {
  position: relative;
  cursor: pointer;
  border-radius: 2px 2px;
  height: 20%;
  z-index: 19;
  /* Hides the slider so custom styles can be added */
  background-color: #000000;
}
.Slider_main > .Slider_inputBody > hr {
  position: absolute;
  margin-left: calc((100% - (2.1em + 6px)) / var(--size) * var(--index));
  z-index: 1;
  left: 5px;
  background-color: darkgray;
  width: 0.5px;
  top: 25%;
  height: 50%;
  margin-top: 0;
}
.Slider_main > .Slider_inputBody > hr:nth-child(even) {
  top: 12.5%;
  height: 75%;
}

body {
  position: relative;
  width: 100vw;
  overflow: hidden;
  box-sizing: content-box;
  top: 6vh;
  height: 94vh;
}
@media only screen and (max-width: 980px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 981px) and (max-width: 1199px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 1200px) {
  body {
    font-size: 1em;
  }
}

.Table {
  border: 1px solid black;
  position: relative;
  width: 50%;
}
.Table > div {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}
.Table > div > label {
  position: relative;
  overflow: hidden;
}
.Table > div > span {
  position: relative;
  overflow: hidden;
}

.bold {
  font-weight: bold;
}

.LoadBar {
  z-index: 3;
  border-radius: 0px;
  position: relative !important;
  background-color: red !important;
  width: 100% !important;
  height: 2em !important;
  overflow: hidden;
}
.LoadBar .LoadBar-progress {
  position: relative;
  height: 100%;
  background-color: green !important;
}

.LineDiv {
  position: relative;
  margin: 0;
  padding: 0;
  flex: auto;
  overflow: hidden;
  height: 100%;
  border: none;
}
.LineDiv hr {
  display: block;
  position: relative;
  color: orange;
  background-color: orange;
  opacity: 1;
  width: 0%;
  margin: 0;
  top: 50%;
  visibility: visible;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;
}

@keyframes NavBarLine {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}
.Text-primary {
  color: #000000;
}

.Text-secondary {
  color: #BCBCBC;
}

.Text-small {
  font-size: 0.75em;
}

.SliderDivMain {
  border: 1px solid black;
}

.TextInputDiv {
  position: relative;
  background-color: #fff8f1;
  border-radius: 0px;
  margin: 0.5em;
  margin-bottom: 1.5em;
  font-size: inherit;
  height: 10em;
}
.TextInputDiv textarea {
  position: relative;
  outline: 0;
  resize: none;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 0px !important;
}
.TextInputDiv textarea.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 1.1em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.TextInputDiv textarea::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.TextInputDiv label {
  user-select: none;
  position: absolute;
  z-index: 1;
  width: 100%;
  background-color: #fff8f1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.11em;
  padding-top: 0.39em;
  padding-bottom: 0.13em;
  border-top-right-radius: 5px 5px;
}
.TextInputDiv .horizontalLine {
  position: absolute;
  z-index: 2;
  width: 100%;
  top: 0.89em;
  height: 0px;
  left: 0;
  margin-block: 0px;
  margin-inline: 0.5em;
}

.InputDivMain {
  position: relative;
  background-color: #fff8f1;
  margin: 0.5em;
  height: min-content;
  display: inline-flex;
}
.InputDivMain button {
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}
.InputDivMain button > span {
  position: relative;
  font-size: 1.3em;
}
.InputDivMain button[state*=active] {
  background-color: #ffa228;
}
.InputDivMain button[state*=passive] {
  background-color: transparent;
}
.InputDivMain button[state*=passive]:hover {
  background-color: #FFAD5B;
}
.InputDivMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}
.InputDivMain input {
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 0px !important;
  outline: none;
}
.InputDivMain input.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.InputDivMain input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}
.InputDivMain input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.InputDivMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

/* Media Queries */
/* ------- */
/* Desktop */
/* ------- */
.NavigationBar {
  transform: translateY(0px);
  transition: transform 0.2s ease-out;
  visibility: visible;
  position: fixed;
  z-index: 1001;
  background-color: transparent;
  top: 0;
  left: 0;
  height: 7vh;
  padding: 0%;
  box-sizing: border-box;
  width: 100vw;
}
.NavigationBar:not([loaded*=true]) {
  visibility: hidden;
  transform: translateY(-10rem);
}
.NavigationBar > .content {
  background-color: transparent;
  position: relative;
  margin: 0.5rem;
  margin-bottom: 0;
  width: calc(100% - 1rem);
  height: calc(7vh - 0.5rem);
  box-sizing: border-box;
  display: grid;
  grid-template-areas: "Logo Design shoppingCart";
  grid-template-columns: [Logo] 3fr [Design] minmax(min-content, max-content) [shoppingCart] minmax(min-content, max-content);
  grid-template-rows: 100%;
  grid-auto-flow: dense;
  align-content: stretch;
  gap: 0.5rem;
  align-items: stretch;
  padding: 0;
}
.NavigationBar > .content div {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 0px;
  background-color: white;
  padding: 0.5em;
  box-shadow: rgba(26, 26, 26, 0.49) 0px 0px 5px 0px, rgba(26, 26, 26, 0.49) 0px 0px 1px 0px;
  box-sizing: border-box;
  position: relative;
  padding: 0;
  height: 100%;
  display: flex;
  align-items: center;
}
.NavigationBar > .content div > button {
  position: relative;
}
.NavigationBar > .content div.Logo {
  position: relative;
  grid-area: Logo;
  left: 0;
  height: 100%;
  width: auto;
}
.NavigationBar > .content div.Logo > div {
  box-shadow: none;
  height: 100%;
  width: max-content;
  left: 0.5rem;
  padding: 0.5rem;
}
.NavigationBar > .content div.Logo > div img {
  position: relative;
  height: 100%;
  transform: scale(1.2);
  cursor: pointer;
}
.NavigationBar > .content div.Cart {
  position: relative;
  grid-area: shoppingCart;
  height: 100%;
  aspect-ratio: 1/1;
  padding: 0rem;
}
.NavigationBar > .content div.Cart > button {
  width: 100%;
  height: 100%;
}
.NavigationBar > .content div.Cart > button > span {
  font-size: 2rem;
}
.NavigationBar > .content div.Cart > .cartPoint {
  cursor: pointer;
  position: absolute;
  z-index: 1;
  left: 50%;
  top: 60%;
  background-color: #FFAD5B;
  border-radius: 50%;
  width: 1em;
  height: 1em;
  aspect-ratio: 1/1;
  display: flex;
  justify-content: center;
}
.NavigationBar > .content div.Design {
  position: relative;
  grid-area: Design;
  box-sizing: border-box;
  height: 100%;
  width: max-content;
  margin: 0;
  padding: 0rem;
}
.NavigationBar > .content div.Design > button {
  margin: 0;
  width: 100%;
  height: 100%;
  padding: 0;
  padding-inline: 1.5rem;
  background-color: #FFAD5B;
  transition: background-color 0.05s linear;
}
.NavigationBar > .content div.Design > button > span {
  color: black;
  font-size: 1.4rem;
}
.NavigationBar > .content div.Design > button:hover {
  background-color: #ffa228;
}
.NavigationBar > .content div.Profile {
  display: none;
}
.NavigationBar > .content div.Sparks {
  display: none;
}

:root {
  --main-font: "Montserrat";
  --primary: "";
  --primary-text: #333;
}

* {
  margin: 0;
  padding: 0;
  font-family: var(--main-font);
}

.tooltip_S[state*=active]:after, .tooltip_S[state*=active]:before {
  display: none;
}

.tooltip_S[data-tooltip-direction=right] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=right]:after {
  pointer-events: none;
  content: attr(data-tooltip-value);
  position: absolute;
  z-index: 10;
  top: 50%;
  transform: translateY(-50%);
  left: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=right]:before {
  pointer-events: none;
  content: "";
  position: absolute;
  z-index: 10;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-right: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=right]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  left: 110%;
}

.tooltip_S[data-tooltip-direction=right]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  left: 103%;
}

.tooltip_S[data-tooltip-direction=right]:hover:after, .tooltip_S[data-tooltip-direction=right]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=top] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=top]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  bottom: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=top]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  bottom: 130%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after {
  bottom: 120%;
}

.tooltip_S[data-tooltip-direction=top]:hover:before {
  bottom: 103%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after, .tooltip_S[data-tooltip-direction=top]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=left] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=left]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=left]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-left: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  right: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=left]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  right: 110%;
}

.tooltip_S[data-tooltip-direction=left]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  right: 103%;
}

.tooltip_S[data-tooltip-direction=left]:hover:after, .tooltip_S[data-tooltip-direction=left]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=bottom] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=bottom]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=bottom]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-bottom: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  top: 130%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after {
  top: 120%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:before {
  top: 103%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after, .tooltip_S[data-tooltip-direction=bottom]:hover:before {
  opacity: 1;
}

.AdaptiveTableMain {
  position: relative;
  display: block;
  width: 98%;
  height: 100%;
  overflow: hidden;
  overflow-y: auto;
}

.AdaptiveTableMain > .ListMain {
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

.AdaptiveTableMain > .ListMain > .column {
  position: relative;
  width: 90%;
  height: fit-content;
  flex-direction: column;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement {
  user-select: none;
  padding: 0.5em;
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: inline-block;
  height: fit-content;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > img {
  user-select: none;
  box-sizing: border-box;
  overflow: hidden;
  display: block;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  position: relative;
  width: 100%;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv {
  user-select: none;
  border-radius: 5px 5px;
  position: absolute;
  top: 0;
  margin: 0.5em;
  left: 0;
  width: calc(100% - 1em);
  height: calc(100% - 1em);
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
  background-color: rgba(94, 94, 94, 0.471);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv:hover {
  opacity: 1;
  box-shadow: rgba(0, 0, 0, 0.55) 0px 0px 3px, rgba(0, 0, 0, 0.51) 0px 0px 3px;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .informationDiv {
  display: none;
  position: relative;
  top: 0;
  margin: 0.5em;
  border-radius: 5px 5px;
  left: 0;
  background-color: rgba(255, 0, 0, 0.299);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv {
  user-select: none;
  position: absolute;
  bottom: 0;
  left: 0;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv > button {
  user-select: none;
}

.AmountDiv {
  display: flex;
  position: relative;
  border: 1px solid black;
  box-sizing: border-box;
  width: fit-content;
  padding: 0.2em;
}

.AmountDiv > button {
  width: 33%;
  position: relative;
  box-sizing: border-box;
  border-radius: 0px 0px;
}

.AmountDiv > button > span {
  font-size: 1em;
}

.AmountDiv > div {
  position: relative;
  width: 2em;
  margin: 0;
  background-color: transparent;
  padding: 0;
  overflow: hidden;
}

.AmountDiv > div > input {
  font-size: 1em;
  background-color: transparent;
  position: relative;
  border: none;
  outline: none;
  width: 100%;
  height: 100%;
  text-align: center;
}

.button_Default {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.button_Default > span {
  display: block;
}

.button_Default:hover {
  background-color: red;
}

.s-button_basic {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_basic > span {
  display: block;
}

.s-button_link {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_link > span {
  text-decoration: underline;
  color: blue;
  display: block;
}

.s-button_link:hover > span {
  color: rgb(34, 34, 255);
}

.DropDownInputMain {
  position: relative;
  background-color: #ffd7af;
  border-radius: 5px;
  margin: 0.5em;
  font-size: inherit;
}

.DropDownInputMain select {
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.25em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 5px 5px !important;
}

.DropDownInputMain select.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.25em;
}

.DropDownInputMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.DropDownInputMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

.header {
  position: fixed;
  width: 100%;
  height: 4rem;
  display: flex;
  flex-direction: row;
  alignItems: center;
  justifyContent: space-between !important;
  background-color: var(--bg-color);
  box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.2);
}

.header > .logoLinkBox {
  position: relative;
  margin-left: 3rem;
  min-width: 3rem;
  width: auto;
  max-width: 15rem;
  height: 4rem;
  display: flex;
  align-items: center;
  justify-content: start;
  text-decoration: none;
  cursor: pointer;
  user-select: none;
}

.header > .logoLinkBox > .logoIcon {
  position: relative;
  width: 2.5rem;
}

.header > .logoLinkBox > .logoText {
  position: relative;
  margin-left: 0.5rem;
  font-size: 1.3rem;
  font-weight: 600;
  color: #333 !important;
}

.header > .headerNavigation {
  position: absolute;
  right: 3rem;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: end;
}

.header > .headerNavigation > button {
  font-size: 1.1rem;
  margin-left: 1.5rem;
}

.header > .headerNavigation > button > span {
  position: relative;
  text-decoration: none;
  color: #a8a8a8;
}

.S_InputDiv {
  position: relative;
  background-color: #ffd7af;
  margin: 0.5em;
  height: min-content;
  display: flex;
  flex-wrap: wrap;
}

.S_InputDiv > button {
  flex: 0 1;
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}

.S_InputDiv > button > span {
  position: relative;
  font-size: 1.3em;
}

.S_InputDiv > button[state*=active] {
  background-color: #ffa228;
}

.S_InputDiv > button[state*=passive] {
  background-color: transparent;
}

.S_InputDiv > button[state*=passive]:hover {
  background-color: #FFAD5B;
}

.S_InputDiv label.switchLabel {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.S_InputDiv input {
  flex: 2 1;
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 5px 5px !important;
  outline: none;
}

.S_InputDiv input.filled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}

.S_InputDiv input[state*=passive] {
  color: red;
  background-color: #fff1de;
}

.S_InputDiv input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}

.S_InputDiv input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}

.S_InputDiv > .response {
  align-self: flex-end;
  text-align: justify;
  width: 100%;
  color: red;
}

.S_InputDiv .invalidInput {
  color: red;
  background-color: #fff1de;
}

.progressBar_Splint {
  position: absolute;
  width: 10em;
  background-color: blue;
  display: flex;
}

.progressBar_Splint > .S_progressBar_Body {
  width: 100%;
  border: 1px solid black;
}

.progressBar_Splint > .S_progressBar_Body > .S_progressBar_Inner {
  width: 100%;
  height: 100%;
  background-color: red;
}

.S-SliderMain {
  margin-top: 0.4em;
  margin-bottom: 0.4em;
}

.S-SliderMain[drawDivider=true]::after {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-bottom: 1px solid #BDBDBD;
  left: 0;
  margin-top: 0.25em;
  position: relative;
}

.S-SliderMain[drawDivider=true]::before {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-top: 1px solid #BDBDBD;
  left: 0;
  margin-bottom: 0.2em;
  position: relative;
}

.S-SliderMain > .label {
  position: relative;
  width: 100%;
  display: inline-block;
  box-sizing: border-box;
  text-align: left;
}

.S-SliderMain > .contentBody {
  height: 1em;
  display: flex;
}

.S-SliderMain > .contentBody > .sliderBody {
  order: 1;
  height: 100%;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range] {
  width: 100%;
  position: relative;
  font-size: 1em;
  height: 100%;
  display: inline-block;
  outline: none;
  -webkit-appearance: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-runnable-track {
  box-sizing: border-box;
  width: 100%;
  height: 0.5em;
  background: #ffa228;
  border: none;
  border-radius: 10px;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  border: none;
  vertical-align: baseline;
  height: 1em;
  width: 1em;
  border-radius: 10%;
  margin-top: -0.25em;
  background: white;
  box-sizing: border-box;
  border: 1px solid black;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus {
  outline: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus::-webkit-slider-runnable-track {
  background: #ffa228;
}

.S-SliderMain > .contentBody > .sliderBody > datalist {
  display: none;
  height: 20rem;
  margin-top: -23px;
  background-color: red;
  color: red;
}

.S-SliderMain > .contentBody > .sliderBody > datalist > option {
  background-color: red;
  color: red;
  height: 50px;
}

.S-SliderMain > .contentBody > .valueOutput {
  order: 2;
  height: 1em;
  width: 1.5em;
  display: inline-block;
  box-sizing: border-box;
  text-align: center;
}

.S-SliderMain > .contentBody > .valueOutput[hidden=true] {
  display: none;
}

.SlideShow_S {
  position: relative;
  height: 100%;
  overflow-y: visible !important;
  overflow-x: auto;
  box-sizing: border-box;
  white-space: nowrap;
  background-color: transparent;
}

.SlideShow_S > .inner {
  display: inline-block;
  position: relative;
  height: 100%;
  width: max-content;
  margin-left: auto;
  margin-right: auto;
  background-color: transparent;
}

.SlideShow_S > .inner > .listElement {
  position: relative;
  height: calc(100% - 0.4em);
  box-sizing: border-box;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  margin: 0.2em;
  margin-inline: 0.5em;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: end;
  align-items: end;
}

.SlideShow_S > .inner > .listElement > div {
  bottom: 0;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  aspect-ratio: 2/1;
}

.SlideShow_S > .inner > .listElement > div > span {
  font-size: 2em;
}

.subWindow_MAIN {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: all;
  user-select: none;
}

.subWindow_MAIN > .background {
  position: absolute;
  z-index: 1;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: rgba(255, 255, 255, 0.8509803922);
}

.subWindow_MAIN .content {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  position: absolute;
  z-index: 2;
  width: fit-content;
  max-height: 90vh;
  max-width: 90vw;
  overflow: hidden;
  margin: auto;
  left: 50%;
  height: max-content;
  top: 50%;
  user-select: none;
  pointer-events: all;
  transform: translate(-50%, -50%);
}

.subWindow_MAIN .content > button.button_close {
  position: absolute;
  right: 0.5em;
  z-index: 3;
}

.TableMain {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
}

.TableMain > .ListMain {
  position: relative;
  width: 100%;
  height: 100%;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;
}

.TableMain > .ListMain > .ListElement {
  margin: 0.5em;
  position: relative;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement > .ListElementHover {
  position: absolute;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 1;
  margin: 0;
  padding: 0;
  border: inherit;
  box-shadow: inherit;
  border-radius: inherit;
  background-color: rgba(64, 64, 64, 0.63);
  display: flex;
  flex-direction: column;
  transition: opacity 0.2s;
}

.horizontalLine {
  position: relative;
  margin: 0.1rem;
  left: 1%;
  width: 98%;
  opacity: 1;
  color: #BDBDBD;
  border: none;
  border-top: 0.5px solid #BDBDBD;
  background-color: #BDBDBD;
}

.PriceDiv {
  width: max-content;
  height: max-content !important;
  display: inline-block;
  overflow-wrap: anywhere;
  white-space: nowrap;
}

.s-ObjectEditor {
  width: 25rem;
  box-shadow: inset 1px 0px 0px 0px black, 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white;
}

.s-ObjectEditor > .Table2D {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table > tr {
  width: 0rem;
  box-sizing: border-box;
  border-bottom: 1px solid black;
  overflow: visible;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] {
  display: flex;
  flex-direction: column;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] > td[col*="1"] {
  margin-left: 1rem;
}

.s-ObjectEditor > .Table2D > table > tr > td {
  box-sizing: border-box;
  width: 100%;
  overflow: visible;
  padding-left: 0.25rem;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="0"] {
  width: 33%;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="2"] {
  width: min-content;
}

.s-ObjectEditor > .Table2D > table > tr > td > div {
  position: relative;
}

.s-sideBarMobile {
  position: absolute;
  height: 100%;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  width: 200px;
  transform: translateX(-100%);
  transition: transform 1s ease-in;
}

.s-sideBarMobile[s-state*=active] {
  transform: translateX(0);
}

.s-sideBarMobile > .headContainer {
  display: flex;
  padding: 0.25em;
  height: max-content;
  justify-content: center;
  align-items: center;
  box-shadow: 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white, inset 0px -1px 0px 0px gray;
}

.s-sideBarMobile > .headContainer > .headline {
  width: 100%;
  font-size: 2em;
}

.s-sideBarMobile > .headContainer > .buttonClose {
  position: relative;
  height: 100%;
}

.s-sideBarMobile > .content {
  width: 100%;
  height: 100%;
}

.Spinner1 {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}

.Spinner1[state*=passive] {
  visibility: hidden;
}

.Spinner1 > div {
  box-sizing: border-box;
  display: block;
  position: absolute;
  width: 80%;
  height: 80%;
  margin: 10%;
  border: 8px solid #fff;
  border-radius: 50%;
  animation: Spinner1 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
  border-color: #fff transparent transparent transparent;
}

.Spinner1 > div:nth-child(1) {
  animation-delay: -0.45s;
}

.Spinner1 > div:nth-child(2) {
  animation-delay: -0.3s;
}

.Spinner1 > div:nth-child(3) {
  animation-delay: -0.15s;
}

@keyframes Spinner1 {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.DropDownInputMain_S {
  position: relative;
  overflow: visible !important;
}

.DropDownInputMain_S > .S_InputDiv {
  width: 100%;
  margin: 0;
  margin-bottom: 0;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px;
}

.DropDownInputMain_S > .S_InputDiv > input {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > button {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > .response {
  display: none;
}

.DropDownInputMain_S > .DropDown_expander {
  z-index: 120;
  background-color: transparent;
  position: absolute;
  padding: 0;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.DropDownInputMain_S > .DropDown_expander[state*=active] {
  height: 10em;
}

.DropDownInputMain_S > .DropDown_expander[state*=passive] {
  height: 0em;
}

.DropDownInputMain_S > .DropDown_expander > div {
  z-index: 122;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-top: 0.2em;
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div > span {
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain {
  position: relative;
  overflow: visible !important;
}

.n_SelectInputMain > .Select_expander {
  z-index: 1;
  background-color: transparent;
  position: absolute;
  padding: 1%;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.n_SelectInputMain > .Select_expander[state*=active] {
  height: max-content;
  max-height: 10em;
}

.n_SelectInputMain > .Select_expander[state*=passive] {
  height: 0em;
  display: none;
}

.n_SelectInputMain > .Select_expander > div {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-bottom: 0.5em;
  text-align: center;
  cursor: pointer;
  transition: box-shadow 0.2s;
  transition-timing-function: ease-in;
}

.n_SelectInputMain > .Select_expander > div > span {
  text-align: center;
}

.n_SelectInputMain > .Select_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain > .Select_expander > div:hover {
  box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 3px, rgba(0, 0, 0, 0.21) 0px 0px 3px;
}

.n_inputDiv {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

.n_inputDiv > .inputBody {
  display: flex;
  flex-direction: row;
}

.n_inputDiv > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

.n_inputDiv > .inputBody > input:valid, .n_inputDiv > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

.n_inputDiv > .inputBody > input:valid + label span, .n_inputDiv > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

.n_inputDiv > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

.n_inputDiv > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.n_inputDiv > .inputBody > button {
  background-color: transparent;
}

.n_inputDiv > .response > span {
  color: red;
}

s-input {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

s-input > .inputBody {
  display: flex;
  flex-direction: row;
}

s-input > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

s-input > .inputBody > input:valid, s-input > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

s-input > .inputBody > input:valid + label span, s-input > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

s-input > .inputBody > input[state=passive] {
  border-bottom: 2px red solid;
}

s-input > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

s-input > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

s-input > .inputBody > button {
  background-color: transparent;
}

s-input > .response > span {
  color: red;
}

.S-AddressInput {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  column-gap: 0.5em;
  grid-template-areas: "fN fN fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.S-AddressInput > div, .S-AddressInput s-input {
  background-color: transparent;
  box-sizing: border-box;
}

.S-AddressInput > div > .inputBody, .S-AddressInput s-input > .inputBody {
  padding-top: 0.5em;
}

.S-AddressInput > div[identifier*=title], .S-AddressInput s-input[identifier*=title] {
  display: none;
}

.S-AddressInput > div[id*=salutation], .S-AddressInput s-input[id*=salutation] {
  display: none;
  grid-area: none;
}

.S-AddressInput > div[identifier*=firstName], .S-AddressInput s-input[identifier*=firstName] {
  grid-area: fN;
}

.S-AddressInput > div[identifier*=lastName], .S-AddressInput s-input[identifier*=lastName] {
  grid-area: lN;
}

.S-AddressInput > div[identifier*=postcode], .S-AddressInput s-input[identifier*=postcode] {
  grid-area: plz;
}

.S-AddressInput > div[identifier*=city], .S-AddressInput s-input[identifier*=city] {
  grid-area: ct;
}

.S-AddressInput > div[id*=country], .S-AddressInput s-input[id*=country] {
  grid-area: cy;
}

.S-AddressInput > div[identifier*=street], .S-AddressInput s-input[identifier*=street] {
  grid-area: st;
}

.S-AddressInput > div[identifier*=housenumber], .S-AddressInput s-input[identifier*=housenumber] {
  grid-area: hn;
}

.S-AddressInput > div[identifier*=email], .S-AddressInput s-input[identifier*=email] {
  grid-area: ema;
}

.S-AddressInput > div[identifier*=phone], .S-AddressInput s-input[identifier*=phone] {
  grid-area: ph;
}

.S-AddressInput > s-input {
  padding-bottom: -0.5em;
}

.n_RadioButton {
  position: relative;
}

.n_RadioButton > .radio_headline {
  position: relative;
}

.n_RadioButton > .inner {
  position: relative;
}

.n_RadioButton > .inner > div {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
  justify-content: start;
  align-items: center;
}

.n_RadioButton > .inner > div > .inputBody {
  position: relative;
  box-sizing: border-box;
  width: 1em;
  margin: 0.5em;
  height: 1em;
  min-width: 1em;
}

.n_RadioButton > .inner > div > .inputBody > input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span {
  box-sizing: border-box;
  background-color: #2196F3;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span:after {
  box-sizing: border-box;
  display: block;
}

.n_RadioButton > .inner > div > .inputBody > span {
  box-sizing: content-box;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background-color: #eee;
  border-radius: 50%;
}

.n_RadioButton > .inner > div > .inputBody > span:after {
  box-sizing: border-box;
  content: "";
  left: 0;
  top: 0;
  position: absolute;
  display: none;
  margin: 25%;
  width: 50%;
  height: 50%;
  border-radius: 50%;
  background: white;
}

.n_RadioButton > .inner > div > .inputBody:hover input ~ span {
  background-color: #ccc;
}

.toggleButton {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  display: flex;
  justify-content: space-around;
  width: max-content;
  overflow: hidden;
}

.toggleButton > button {
  width: 100%;
  padding: 0.5rem;
  background-color: transparent;
  border: none;
  cursor: pointer;
}

.toggleButton > button:hover {
  background-color: #FFAD5B;
}

.toggleButton > button[state*=active] {
  background-color: #ffa228;
}

.s-ToggleButton_2 {
  width: max-content;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
}

.s-ToggleButton_2 > button {
  border: none;
  border-radius: 0;
  outline: none;
  padding: 0em;
  min-height: 1rem;
  height: 100%;
  width: 100%;
  margin: 0.25em;
}

.s-ToggleButton_2 > button.btFALSE {
  background-color: red;
}

.s-ToggleButton_2 > button.btFALSE[state*=passive] {
  background-color: rgba(255, 0, 0, 0.3);
}

.s-ToggleButton_2 > button.btTRUE {
  background-color: green;
}

.s-ToggleButton_2 > button.btTRUE[state*=passive] {
  background-color: rgba(0, 128, 0, 0.3);
}

.S_SVGElement_BODY {
  position: relative;
  background-color: transparent;
}

.S_SVGElement_BODY > svg {
  position: relative;
}

.addressMenuNewMain > [id*=menuElement] > div {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  grid-template-areas: "salutation salutation fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.addressMenuNewMain > [id*=menuElement] > div > div {
  background-color: transparent;
  box-sizing: border-box;
}

.addressMenuNewMain > [id*=menuElement] > div > div.S_InputDiv {
  padding-bottom: -0.5em;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=title] {
  display: none;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=salutation] {
  grid-area: salutation;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=firstName] {
  grid-area: fN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=lastName] {
  grid-area: lN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=postcode] {
  grid-area: plz;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=city] {
  grid-area: ct;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=country] {
  grid-area: cy;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=street] {
  grid-area: st;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=housenumber] {
  grid-area: hn;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=email] {
  grid-area: ema;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=phone] {
  grid-area: ph;
}

/* Media Queries */
/* ------- */
/* Desktop */
/* ------- */
.CursorMain {
  display: all;
  backface-visibility: hidden;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
  width: 100px;
  height: 100px;
  background-color: red;
  z-index: 999;
}

.customCursor {
  position: absolute;
  box-sizing: content-box;
  will-change: transform;
  margin: 0;
  padding: 0;
  top: 0;
  left: 0;
  pointer-events: none;
  user-select: none;
  display: auto;
  z-index: 1000;
}
.customCursor.red {
  background-color: red;
}
.customCursor.orange {
  color: orange !important;
}

.button_Default {
  user-select: none;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 0px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  box-sizing: content-box;
  margin: 0.5em;
  overflow: hidden;
}
.button_Default > span {
  box-sizing: border-box;
}
.button_Default[state*=active] {
  background-color: #FFAD5B;
}
.button_Default[state*=passive] {
  background-color: #fff1de;
}
.button_Default:hover {
  background-color: #ffa228;
}

.button_General {
  user-select: none;
  background-color: transparent;
  border: none;
  color: #000000;
  display: inline-block;
  font-size: 1em;
  cursor: pointer;
  border-radius: 0px;
}
.button_General > span {
  display: block;
  position: relative;
  text-align: center;
}
.button_General > span:not(.material-symbols-outlined) {
  text-decoration: underline;
}
.button_General > .dropdown {
  position: absolute;
  left: 100%;
  margin-left: 10%;
  top: 0;
  width: fit-content;
  height: max-content;
  overflow: hidden;
}
.button_General:hover > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonAnimation;
}
.button_General:hover > span.material-symbols-outlined {
  color: #ffa228 !important;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonIconAnimation;
}
.button_General:hover > span.material-symbols-outlined.rotate90 {
  animation-name: buttonIconAnimation90;
}
.button_General:hover:after > span {
  color: white;
}
.button_General:hover:after > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-out;
  animation-fill-mode: backwards;
  animation-direction: reverse;
  animation-name: buttonAnimationB;
}
.button_General:hover:after > span.material-symbols-outlined {
  color: #ffa228 !important;
}
.button_General.simple {
  background-color: transparent;
  border: none;
  text-decoration: underline;
}

/* width */
::-webkit-scrollbar {
  margin-inline: 2px;
  width: 5px;
}

/* Track */
::-webkit-scrollbar-track {
  width: 2px;
  transform: scale(2);
  background: transparent;
}

/* Handle */
::-webkit-scrollbar-thumb {
  width: 5px;
  transform: scale(2);
  background: rgb(189, 189, 189);
  border-radius: 0px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: gray;
}

body {
  background-color: #fff8f1;
}
body * {
  font-family: "Arial";
  margin: 0;
  padding: 0;
}

.Slider_main > .Slider_inputBody input[type=range] {
  appearance: none;
  background: transparent;
  width: 100%;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-thumb {
  position: relative;
  appearance: none;
  width: 9px;
  height: 20px;
  background-color: #FFAD5B;
  transform: translateY(-40%);
  border-radius: 2px 2px;
  z-index: 20;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-runnable-track {
  position: relative;
  cursor: pointer;
  border-radius: 2px 2px;
  height: 20%;
  z-index: 19;
  /* Hides the slider so custom styles can be added */
  background-color: #000000;
}
.Slider_main > .Slider_inputBody > hr {
  position: absolute;
  margin-left: calc((100% - (2.1em + 6px)) / var(--size) * var(--index));
  z-index: 1;
  left: 5px;
  background-color: darkgray;
  width: 0.5px;
  top: 25%;
  height: 50%;
  margin-top: 0;
}
.Slider_main > .Slider_inputBody > hr:nth-child(even) {
  top: 12.5%;
  height: 75%;
}

body {
  position: relative;
  width: 100vw;
  overflow: hidden;
  box-sizing: content-box;
  top: 6vh;
  height: 94vh;
}
@media only screen and (max-width: 980px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 981px) and (max-width: 1199px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 1200px) {
  body {
    font-size: 1em;
  }
}

.Table {
  border: 1px solid black;
  position: relative;
  width: 50%;
}
.Table > div {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}
.Table > div > label {
  position: relative;
  overflow: hidden;
}
.Table > div > span {
  position: relative;
  overflow: hidden;
}

.bold {
  font-weight: bold;
}

.LoadBar {
  z-index: 3;
  border-radius: 0px;
  position: relative !important;
  background-color: red !important;
  width: 100% !important;
  height: 2em !important;
  overflow: hidden;
}
.LoadBar .LoadBar-progress {
  position: relative;
  height: 100%;
  background-color: green !important;
}

.LineDiv {
  position: relative;
  margin: 0;
  padding: 0;
  flex: auto;
  overflow: hidden;
  height: 100%;
  border: none;
}
.LineDiv hr {
  display: block;
  position: relative;
  color: orange;
  background-color: orange;
  opacity: 1;
  width: 0%;
  margin: 0;
  top: 50%;
  visibility: visible;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;
}

@keyframes NavBarLine {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}
.Text-primary {
  color: #000000;
}

.Text-secondary {
  color: #BCBCBC;
}

.Text-small {
  font-size: 0.75em;
}

.SliderDivMain {
  border: 1px solid black;
}

.TextInputDiv {
  position: relative;
  background-color: #fff8f1;
  border-radius: 0px;
  margin: 0.5em;
  margin-bottom: 1.5em;
  font-size: inherit;
  height: 10em;
}
.TextInputDiv textarea {
  position: relative;
  outline: 0;
  resize: none;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 0px !important;
}
.TextInputDiv textarea.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 1.1em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.TextInputDiv textarea::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.TextInputDiv label {
  user-select: none;
  position: absolute;
  z-index: 1;
  width: 100%;
  background-color: #fff8f1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.11em;
  padding-top: 0.39em;
  padding-bottom: 0.13em;
  border-top-right-radius: 5px 5px;
}
.TextInputDiv .horizontalLine {
  position: absolute;
  z-index: 2;
  width: 100%;
  top: 0.89em;
  height: 0px;
  left: 0;
  margin-block: 0px;
  margin-inline: 0.5em;
}

.InputDivMain {
  position: relative;
  background-color: #fff8f1;
  margin: 0.5em;
  height: min-content;
  display: inline-flex;
}
.InputDivMain button {
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}
.InputDivMain button > span {
  position: relative;
  font-size: 1.3em;
}
.InputDivMain button[state*=active] {
  background-color: #ffa228;
}
.InputDivMain button[state*=passive] {
  background-color: transparent;
}
.InputDivMain button[state*=passive]:hover {
  background-color: #FFAD5B;
}
.InputDivMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}
.InputDivMain input {
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 0px !important;
  outline: none;
}
.InputDivMain input.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.InputDivMain input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}
.InputDivMain input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.InputDivMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

:root {
  --main-font: "Montserrat";
  --primary: "";
  --primary-text: #333;
}

* {
  margin: 0;
  padding: 0;
  font-family: var(--main-font);
}

.tooltip_S[state*=active]:after, .tooltip_S[state*=active]:before {
  display: none;
}

.tooltip_S[data-tooltip-direction=right] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=right]:after {
  pointer-events: none;
  content: attr(data-tooltip-value);
  position: absolute;
  z-index: 10;
  top: 50%;
  transform: translateY(-50%);
  left: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=right]:before {
  pointer-events: none;
  content: "";
  position: absolute;
  z-index: 10;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-right: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=right]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  left: 110%;
}

.tooltip_S[data-tooltip-direction=right]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  left: 103%;
}

.tooltip_S[data-tooltip-direction=right]:hover:after, .tooltip_S[data-tooltip-direction=right]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=top] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=top]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  bottom: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=top]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  bottom: 130%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after {
  bottom: 120%;
}

.tooltip_S[data-tooltip-direction=top]:hover:before {
  bottom: 103%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after, .tooltip_S[data-tooltip-direction=top]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=left] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=left]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=left]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-left: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  right: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=left]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  right: 110%;
}

.tooltip_S[data-tooltip-direction=left]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  right: 103%;
}

.tooltip_S[data-tooltip-direction=left]:hover:after, .tooltip_S[data-tooltip-direction=left]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=bottom] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=bottom]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=bottom]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-bottom: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  top: 130%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after {
  top: 120%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:before {
  top: 103%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after, .tooltip_S[data-tooltip-direction=bottom]:hover:before {
  opacity: 1;
}

.AdaptiveTableMain {
  position: relative;
  display: block;
  width: 98%;
  height: 100%;
  overflow: hidden;
  overflow-y: auto;
}

.AdaptiveTableMain > .ListMain {
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

.AdaptiveTableMain > .ListMain > .column {
  position: relative;
  width: 90%;
  height: fit-content;
  flex-direction: column;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement {
  user-select: none;
  padding: 0.5em;
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: inline-block;
  height: fit-content;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > img {
  user-select: none;
  box-sizing: border-box;
  overflow: hidden;
  display: block;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  position: relative;
  width: 100%;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv {
  user-select: none;
  border-radius: 5px 5px;
  position: absolute;
  top: 0;
  margin: 0.5em;
  left: 0;
  width: calc(100% - 1em);
  height: calc(100% - 1em);
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
  background-color: rgba(94, 94, 94, 0.471);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv:hover {
  opacity: 1;
  box-shadow: rgba(0, 0, 0, 0.55) 0px 0px 3px, rgba(0, 0, 0, 0.51) 0px 0px 3px;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .informationDiv {
  display: none;
  position: relative;
  top: 0;
  margin: 0.5em;
  border-radius: 5px 5px;
  left: 0;
  background-color: rgba(255, 0, 0, 0.299);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv {
  user-select: none;
  position: absolute;
  bottom: 0;
  left: 0;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv > button {
  user-select: none;
}

.AmountDiv {
  display: flex;
  position: relative;
  border: 1px solid black;
  box-sizing: border-box;
  width: fit-content;
  padding: 0.2em;
}

.AmountDiv > button {
  width: 33%;
  position: relative;
  box-sizing: border-box;
  border-radius: 0px 0px;
}

.AmountDiv > button > span {
  font-size: 1em;
}

.AmountDiv > div {
  position: relative;
  width: 2em;
  margin: 0;
  background-color: transparent;
  padding: 0;
  overflow: hidden;
}

.AmountDiv > div > input {
  font-size: 1em;
  background-color: transparent;
  position: relative;
  border: none;
  outline: none;
  width: 100%;
  height: 100%;
  text-align: center;
}

.button_Default {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.button_Default > span {
  display: block;
}

.button_Default:hover {
  background-color: red;
}

.s-button_basic {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_basic > span {
  display: block;
}

.s-button_link {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_link > span {
  text-decoration: underline;
  color: blue;
  display: block;
}

.s-button_link:hover > span {
  color: rgb(34, 34, 255);
}

.DropDownInputMain {
  position: relative;
  background-color: #ffd7af;
  border-radius: 5px;
  margin: 0.5em;
  font-size: inherit;
}

.DropDownInputMain select {
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.25em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 5px 5px !important;
}

.DropDownInputMain select.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.25em;
}

.DropDownInputMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.DropDownInputMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

.header {
  position: fixed;
  width: 100%;
  height: 4rem;
  display: flex;
  flex-direction: row;
  alignItems: center;
  justifyContent: space-between !important;
  background-color: var(--bg-color);
  box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.2);
}

.header > .logoLinkBox {
  position: relative;
  margin-left: 3rem;
  min-width: 3rem;
  width: auto;
  max-width: 15rem;
  height: 4rem;
  display: flex;
  align-items: center;
  justify-content: start;
  text-decoration: none;
  cursor: pointer;
  user-select: none;
}

.header > .logoLinkBox > .logoIcon {
  position: relative;
  width: 2.5rem;
}

.header > .logoLinkBox > .logoText {
  position: relative;
  margin-left: 0.5rem;
  font-size: 1.3rem;
  font-weight: 600;
  color: #333 !important;
}

.header > .headerNavigation {
  position: absolute;
  right: 3rem;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: end;
}

.header > .headerNavigation > button {
  font-size: 1.1rem;
  margin-left: 1.5rem;
}

.header > .headerNavigation > button > span {
  position: relative;
  text-decoration: none;
  color: #a8a8a8;
}

.S_InputDiv {
  position: relative;
  background-color: #ffd7af;
  margin: 0.5em;
  height: min-content;
  display: flex;
  flex-wrap: wrap;
}

.S_InputDiv > button {
  flex: 0 1;
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}

.S_InputDiv > button > span {
  position: relative;
  font-size: 1.3em;
}

.S_InputDiv > button[state*=active] {
  background-color: #ffa228;
}

.S_InputDiv > button[state*=passive] {
  background-color: transparent;
}

.S_InputDiv > button[state*=passive]:hover {
  background-color: #FFAD5B;
}

.S_InputDiv label.switchLabel {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.S_InputDiv input {
  flex: 2 1;
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 5px 5px !important;
  outline: none;
}

.S_InputDiv input.filled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}

.S_InputDiv input[state*=passive] {
  color: red;
  background-color: #fff1de;
}

.S_InputDiv input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}

.S_InputDiv input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}

.S_InputDiv > .response {
  align-self: flex-end;
  text-align: justify;
  width: 100%;
  color: red;
}

.S_InputDiv .invalidInput {
  color: red;
  background-color: #fff1de;
}

.progressBar_Splint {
  position: absolute;
  width: 10em;
  background-color: blue;
  display: flex;
}

.progressBar_Splint > .S_progressBar_Body {
  width: 100%;
  border: 1px solid black;
}

.progressBar_Splint > .S_progressBar_Body > .S_progressBar_Inner {
  width: 100%;
  height: 100%;
  background-color: red;
}

.S-SliderMain {
  margin-top: 0.4em;
  margin-bottom: 0.4em;
}

.S-SliderMain[drawDivider=true]::after {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-bottom: 1px solid #BDBDBD;
  left: 0;
  margin-top: 0.25em;
  position: relative;
}

.S-SliderMain[drawDivider=true]::before {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-top: 1px solid #BDBDBD;
  left: 0;
  margin-bottom: 0.2em;
  position: relative;
}

.S-SliderMain > .label {
  position: relative;
  width: 100%;
  display: inline-block;
  box-sizing: border-box;
  text-align: left;
}

.S-SliderMain > .contentBody {
  height: 1em;
  display: flex;
}

.S-SliderMain > .contentBody > .sliderBody {
  order: 1;
  height: 100%;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range] {
  width: 100%;
  position: relative;
  font-size: 1em;
  height: 100%;
  display: inline-block;
  outline: none;
  -webkit-appearance: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-runnable-track {
  box-sizing: border-box;
  width: 100%;
  height: 0.5em;
  background: #ffa228;
  border: none;
  border-radius: 10px;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  border: none;
  vertical-align: baseline;
  height: 1em;
  width: 1em;
  border-radius: 10%;
  margin-top: -0.25em;
  background: white;
  box-sizing: border-box;
  border: 1px solid black;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus {
  outline: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus::-webkit-slider-runnable-track {
  background: #ffa228;
}

.S-SliderMain > .contentBody > .sliderBody > datalist {
  display: none;
  height: 20rem;
  margin-top: -23px;
  background-color: red;
  color: red;
}

.S-SliderMain > .contentBody > .sliderBody > datalist > option {
  background-color: red;
  color: red;
  height: 50px;
}

.S-SliderMain > .contentBody > .valueOutput {
  order: 2;
  height: 1em;
  width: 1.5em;
  display: inline-block;
  box-sizing: border-box;
  text-align: center;
}

.S-SliderMain > .contentBody > .valueOutput[hidden=true] {
  display: none;
}

.SlideShow_S {
  position: relative;
  height: 100%;
  overflow-y: visible !important;
  overflow-x: auto;
  box-sizing: border-box;
  white-space: nowrap;
  background-color: transparent;
}

.SlideShow_S > .inner {
  display: inline-block;
  position: relative;
  height: 100%;
  width: max-content;
  margin-left: auto;
  margin-right: auto;
  background-color: transparent;
}

.SlideShow_S > .inner > .listElement {
  position: relative;
  height: calc(100% - 0.4em);
  box-sizing: border-box;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  margin: 0.2em;
  margin-inline: 0.5em;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: end;
  align-items: end;
}

.SlideShow_S > .inner > .listElement > div {
  bottom: 0;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  aspect-ratio: 2/1;
}

.SlideShow_S > .inner > .listElement > div > span {
  font-size: 2em;
}

.subWindow_MAIN {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: all;
  user-select: none;
}

.subWindow_MAIN > .background {
  position: absolute;
  z-index: 1;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: rgba(255, 255, 255, 0.8509803922);
}

.subWindow_MAIN .content {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  position: absolute;
  z-index: 2;
  width: fit-content;
  max-height: 90vh;
  max-width: 90vw;
  overflow: hidden;
  margin: auto;
  left: 50%;
  height: max-content;
  top: 50%;
  user-select: none;
  pointer-events: all;
  transform: translate(-50%, -50%);
}

.subWindow_MAIN .content > button.button_close {
  position: absolute;
  right: 0.5em;
  z-index: 3;
}

.TableMain {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
}

.TableMain > .ListMain {
  position: relative;
  width: 100%;
  height: 100%;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;
}

.TableMain > .ListMain > .ListElement {
  margin: 0.5em;
  position: relative;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement > .ListElementHover {
  position: absolute;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 1;
  margin: 0;
  padding: 0;
  border: inherit;
  box-shadow: inherit;
  border-radius: inherit;
  background-color: rgba(64, 64, 64, 0.63);
  display: flex;
  flex-direction: column;
  transition: opacity 0.2s;
}

.horizontalLine {
  position: relative;
  margin: 0.1rem;
  left: 1%;
  width: 98%;
  opacity: 1;
  color: #BDBDBD;
  border: none;
  border-top: 0.5px solid #BDBDBD;
  background-color: #BDBDBD;
}

.PriceDiv {
  width: max-content;
  height: max-content !important;
  display: inline-block;
  overflow-wrap: anywhere;
  white-space: nowrap;
}

.s-ObjectEditor {
  width: 25rem;
  box-shadow: inset 1px 0px 0px 0px black, 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white;
}

.s-ObjectEditor > .Table2D {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table > tr {
  width: 0rem;
  box-sizing: border-box;
  border-bottom: 1px solid black;
  overflow: visible;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] {
  display: flex;
  flex-direction: column;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] > td[col*="1"] {
  margin-left: 1rem;
}

.s-ObjectEditor > .Table2D > table > tr > td {
  box-sizing: border-box;
  width: 100%;
  overflow: visible;
  padding-left: 0.25rem;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="0"] {
  width: 33%;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="2"] {
  width: min-content;
}

.s-ObjectEditor > .Table2D > table > tr > td > div {
  position: relative;
}

.s-sideBarMobile {
  position: absolute;
  height: 100%;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  width: 200px;
  transform: translateX(-100%);
  transition: transform 1s ease-in;
}

.s-sideBarMobile[s-state*=active] {
  transform: translateX(0);
}

.s-sideBarMobile > .headContainer {
  display: flex;
  padding: 0.25em;
  height: max-content;
  justify-content: center;
  align-items: center;
  box-shadow: 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white, inset 0px -1px 0px 0px gray;
}

.s-sideBarMobile > .headContainer > .headline {
  width: 100%;
  font-size: 2em;
}

.s-sideBarMobile > .headContainer > .buttonClose {
  position: relative;
  height: 100%;
}

.s-sideBarMobile > .content {
  width: 100%;
  height: 100%;
}

.Spinner1 {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}

.Spinner1[state*=passive] {
  visibility: hidden;
}

.Spinner1 > div {
  box-sizing: border-box;
  display: block;
  position: absolute;
  width: 80%;
  height: 80%;
  margin: 10%;
  border: 8px solid #fff;
  border-radius: 50%;
  animation: Spinner1 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
  border-color: #fff transparent transparent transparent;
}

.Spinner1 > div:nth-child(1) {
  animation-delay: -0.45s;
}

.Spinner1 > div:nth-child(2) {
  animation-delay: -0.3s;
}

.Spinner1 > div:nth-child(3) {
  animation-delay: -0.15s;
}

@keyframes Spinner1 {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.DropDownInputMain_S {
  position: relative;
  overflow: visible !important;
}

.DropDownInputMain_S > .S_InputDiv {
  width: 100%;
  margin: 0;
  margin-bottom: 0;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px;
}

.DropDownInputMain_S > .S_InputDiv > input {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > button {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > .response {
  display: none;
}

.DropDownInputMain_S > .DropDown_expander {
  z-index: 120;
  background-color: transparent;
  position: absolute;
  padding: 0;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.DropDownInputMain_S > .DropDown_expander[state*=active] {
  height: 10em;
}

.DropDownInputMain_S > .DropDown_expander[state*=passive] {
  height: 0em;
}

.DropDownInputMain_S > .DropDown_expander > div {
  z-index: 122;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-top: 0.2em;
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div > span {
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain {
  position: relative;
  overflow: visible !important;
}

.n_SelectInputMain > .Select_expander {
  z-index: 1;
  background-color: transparent;
  position: absolute;
  padding: 1%;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.n_SelectInputMain > .Select_expander[state*=active] {
  height: max-content;
  max-height: 10em;
}

.n_SelectInputMain > .Select_expander[state*=passive] {
  height: 0em;
  display: none;
}

.n_SelectInputMain > .Select_expander > div {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-bottom: 0.5em;
  text-align: center;
  cursor: pointer;
  transition: box-shadow 0.2s;
  transition-timing-function: ease-in;
}

.n_SelectInputMain > .Select_expander > div > span {
  text-align: center;
}

.n_SelectInputMain > .Select_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain > .Select_expander > div:hover {
  box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 3px, rgba(0, 0, 0, 0.21) 0px 0px 3px;
}

.n_inputDiv {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

.n_inputDiv > .inputBody {
  display: flex;
  flex-direction: row;
}

.n_inputDiv > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

.n_inputDiv > .inputBody > input:valid, .n_inputDiv > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

.n_inputDiv > .inputBody > input:valid + label span, .n_inputDiv > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

.n_inputDiv > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

.n_inputDiv > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.n_inputDiv > .inputBody > button {
  background-color: transparent;
}

.n_inputDiv > .response > span {
  color: red;
}

s-input {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

s-input > .inputBody {
  display: flex;
  flex-direction: row;
}

s-input > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

s-input > .inputBody > input:valid, s-input > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

s-input > .inputBody > input:valid + label span, s-input > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

s-input > .inputBody > input[state=passive] {
  border-bottom: 2px red solid;
}

s-input > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

s-input > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

s-input > .inputBody > button {
  background-color: transparent;
}

s-input > .response > span {
  color: red;
}

.S-AddressInput {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  column-gap: 0.5em;
  grid-template-areas: "fN fN fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.S-AddressInput > div, .S-AddressInput s-input {
  background-color: transparent;
  box-sizing: border-box;
}

.S-AddressInput > div > .inputBody, .S-AddressInput s-input > .inputBody {
  padding-top: 0.5em;
}

.S-AddressInput > div[identifier*=title], .S-AddressInput s-input[identifier*=title] {
  display: none;
}

.S-AddressInput > div[id*=salutation], .S-AddressInput s-input[id*=salutation] {
  display: none;
  grid-area: none;
}

.S-AddressInput > div[identifier*=firstName], .S-AddressInput s-input[identifier*=firstName] {
  grid-area: fN;
}

.S-AddressInput > div[identifier*=lastName], .S-AddressInput s-input[identifier*=lastName] {
  grid-area: lN;
}

.S-AddressInput > div[identifier*=postcode], .S-AddressInput s-input[identifier*=postcode] {
  grid-area: plz;
}

.S-AddressInput > div[identifier*=city], .S-AddressInput s-input[identifier*=city] {
  grid-area: ct;
}

.S-AddressInput > div[id*=country], .S-AddressInput s-input[id*=country] {
  grid-area: cy;
}

.S-AddressInput > div[identifier*=street], .S-AddressInput s-input[identifier*=street] {
  grid-area: st;
}

.S-AddressInput > div[identifier*=housenumber], .S-AddressInput s-input[identifier*=housenumber] {
  grid-area: hn;
}

.S-AddressInput > div[identifier*=email], .S-AddressInput s-input[identifier*=email] {
  grid-area: ema;
}

.S-AddressInput > div[identifier*=phone], .S-AddressInput s-input[identifier*=phone] {
  grid-area: ph;
}

.S-AddressInput > s-input {
  padding-bottom: -0.5em;
}

.n_RadioButton {
  position: relative;
}

.n_RadioButton > .radio_headline {
  position: relative;
}

.n_RadioButton > .inner {
  position: relative;
}

.n_RadioButton > .inner > div {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
  justify-content: start;
  align-items: center;
}

.n_RadioButton > .inner > div > .inputBody {
  position: relative;
  box-sizing: border-box;
  width: 1em;
  margin: 0.5em;
  height: 1em;
  min-width: 1em;
}

.n_RadioButton > .inner > div > .inputBody > input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span {
  box-sizing: border-box;
  background-color: #2196F3;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span:after {
  box-sizing: border-box;
  display: block;
}

.n_RadioButton > .inner > div > .inputBody > span {
  box-sizing: content-box;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background-color: #eee;
  border-radius: 50%;
}

.n_RadioButton > .inner > div > .inputBody > span:after {
  box-sizing: border-box;
  content: "";
  left: 0;
  top: 0;
  position: absolute;
  display: none;
  margin: 25%;
  width: 50%;
  height: 50%;
  border-radius: 50%;
  background: white;
}

.n_RadioButton > .inner > div > .inputBody:hover input ~ span {
  background-color: #ccc;
}

.toggleButton {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  display: flex;
  justify-content: space-around;
  width: max-content;
  overflow: hidden;
}

.toggleButton > button {
  width: 100%;
  padding: 0.5rem;
  background-color: transparent;
  border: none;
  cursor: pointer;
}

.toggleButton > button:hover {
  background-color: #FFAD5B;
}

.toggleButton > button[state*=active] {
  background-color: #ffa228;
}

.s-ToggleButton_2 {
  width: max-content;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
}

.s-ToggleButton_2 > button {
  border: none;
  border-radius: 0;
  outline: none;
  padding: 0em;
  min-height: 1rem;
  height: 100%;
  width: 100%;
  margin: 0.25em;
}

.s-ToggleButton_2 > button.btFALSE {
  background-color: red;
}

.s-ToggleButton_2 > button.btFALSE[state*=passive] {
  background-color: rgba(255, 0, 0, 0.3);
}

.s-ToggleButton_2 > button.btTRUE {
  background-color: green;
}

.s-ToggleButton_2 > button.btTRUE[state*=passive] {
  background-color: rgba(0, 128, 0, 0.3);
}

.S_SVGElement_BODY {
  position: relative;
  background-color: transparent;
}

.S_SVGElement_BODY > svg {
  position: relative;
}

.addressMenuNewMain > [id*=menuElement] > div {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  grid-template-areas: "salutation salutation fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.addressMenuNewMain > [id*=menuElement] > div > div {
  background-color: transparent;
  box-sizing: border-box;
}

.addressMenuNewMain > [id*=menuElement] > div > div.S_InputDiv {
  padding-bottom: -0.5em;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=title] {
  display: none;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=salutation] {
  grid-area: salutation;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=firstName] {
  grid-area: fN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=lastName] {
  grid-area: lN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=postcode] {
  grid-area: plz;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=city] {
  grid-area: ct;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=country] {
  grid-area: cy;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=street] {
  grid-area: st;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=housenumber] {
  grid-area: hn;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=email] {
  grid-area: ema;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=phone] {
  grid-area: ph;
}

/* Media Queries */
/* ------- */
/* Desktop */
/* ------- */
.CursorMain {
  display: all;
  backface-visibility: hidden;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
  width: 100px;
  height: 100px;
  background-color: red;
  z-index: 999;
}

.customCursor {
  position: absolute;
  box-sizing: content-box;
  will-change: transform;
  margin: 0;
  padding: 0;
  top: 0;
  left: 0;
  pointer-events: none;
  user-select: none;
  display: auto;
  z-index: 1000;
}
.customCursor.red {
  background-color: red;
}
.customCursor.orange {
  color: orange !important;
}

.button_Default {
  user-select: none;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 0px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  box-sizing: content-box;
  margin: 0.5em;
  overflow: hidden;
}
.button_Default > span {
  box-sizing: border-box;
}
.button_Default[state*=active] {
  background-color: #FFAD5B;
}
.button_Default[state*=passive] {
  background-color: #fff1de;
}
.button_Default:hover {
  background-color: #ffa228;
}

.button_General {
  user-select: none;
  background-color: transparent;
  border: none;
  color: #000000;
  display: inline-block;
  font-size: 1em;
  cursor: pointer;
  border-radius: 0px;
}
.button_General > span {
  display: block;
  position: relative;
  text-align: center;
}
.button_General > span:not(.material-symbols-outlined) {
  text-decoration: underline;
}
.button_General > .dropdown {
  position: absolute;
  left: 100%;
  margin-left: 10%;
  top: 0;
  width: fit-content;
  height: max-content;
  overflow: hidden;
}
.button_General:hover > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonAnimation;
}
.button_General:hover > span.material-symbols-outlined {
  color: #ffa228 !important;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonIconAnimation;
}
.button_General:hover > span.material-symbols-outlined.rotate90 {
  animation-name: buttonIconAnimation90;
}
.button_General:hover:after > span {
  color: white;
}
.button_General:hover:after > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-out;
  animation-fill-mode: backwards;
  animation-direction: reverse;
  animation-name: buttonAnimationB;
}
.button_General:hover:after > span.material-symbols-outlined {
  color: #ffa228 !important;
}
.button_General.simple {
  background-color: transparent;
  border: none;
  text-decoration: underline;
}

/* width */
::-webkit-scrollbar {
  margin-inline: 2px;
  width: 5px;
}

/* Track */
::-webkit-scrollbar-track {
  width: 2px;
  transform: scale(2);
  background: transparent;
}

/* Handle */
::-webkit-scrollbar-thumb {
  width: 5px;
  transform: scale(2);
  background: rgb(189, 189, 189);
  border-radius: 0px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: gray;
}

body {
  background-color: #fff8f1;
}
body * {
  font-family: "Arial";
  margin: 0;
  padding: 0;
}

.Slider_main > .Slider_inputBody input[type=range] {
  appearance: none;
  background: transparent;
  width: 100%;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-thumb {
  position: relative;
  appearance: none;
  width: 9px;
  height: 20px;
  background-color: #FFAD5B;
  transform: translateY(-40%);
  border-radius: 2px 2px;
  z-index: 20;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-runnable-track {
  position: relative;
  cursor: pointer;
  border-radius: 2px 2px;
  height: 20%;
  z-index: 19;
  /* Hides the slider so custom styles can be added */
  background-color: #000000;
}
.Slider_main > .Slider_inputBody > hr {
  position: absolute;
  margin-left: calc((100% - (2.1em + 6px)) / var(--size) * var(--index));
  z-index: 1;
  left: 5px;
  background-color: darkgray;
  width: 0.5px;
  top: 25%;
  height: 50%;
  margin-top: 0;
}
.Slider_main > .Slider_inputBody > hr:nth-child(even) {
  top: 12.5%;
  height: 75%;
}

body {
  position: relative;
  width: 100vw;
  overflow: hidden;
  box-sizing: content-box;
  top: 6vh;
  height: 94vh;
}
@media only screen and (max-width: 980px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 981px) and (max-width: 1199px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 1200px) {
  body {
    font-size: 1em;
  }
}

.Table {
  border: 1px solid black;
  position: relative;
  width: 50%;
}
.Table > div {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}
.Table > div > label {
  position: relative;
  overflow: hidden;
}
.Table > div > span {
  position: relative;
  overflow: hidden;
}

.bold {
  font-weight: bold;
}

.LoadBar {
  z-index: 3;
  border-radius: 0px;
  position: relative !important;
  background-color: red !important;
  width: 100% !important;
  height: 2em !important;
  overflow: hidden;
}
.LoadBar .LoadBar-progress {
  position: relative;
  height: 100%;
  background-color: green !important;
}

.LineDiv {
  position: relative;
  margin: 0;
  padding: 0;
  flex: auto;
  overflow: hidden;
  height: 100%;
  border: none;
}
.LineDiv hr {
  display: block;
  position: relative;
  color: orange;
  background-color: orange;
  opacity: 1;
  width: 0%;
  margin: 0;
  top: 50%;
  visibility: visible;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;
}

@keyframes NavBarLine {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}
.Text-primary {
  color: #000000;
}

.Text-secondary {
  color: #BCBCBC;
}

.Text-small {
  font-size: 0.75em;
}

.SliderDivMain {
  border: 1px solid black;
}

.TextInputDiv {
  position: relative;
  background-color: #fff8f1;
  border-radius: 0px;
  margin: 0.5em;
  margin-bottom: 1.5em;
  font-size: inherit;
  height: 10em;
}
.TextInputDiv textarea {
  position: relative;
  outline: 0;
  resize: none;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 0px !important;
}
.TextInputDiv textarea.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 1.1em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.TextInputDiv textarea::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.TextInputDiv label {
  user-select: none;
  position: absolute;
  z-index: 1;
  width: 100%;
  background-color: #fff8f1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.11em;
  padding-top: 0.39em;
  padding-bottom: 0.13em;
  border-top-right-radius: 5px 5px;
}
.TextInputDiv .horizontalLine {
  position: absolute;
  z-index: 2;
  width: 100%;
  top: 0.89em;
  height: 0px;
  left: 0;
  margin-block: 0px;
  margin-inline: 0.5em;
}

.InputDivMain {
  position: relative;
  background-color: #fff8f1;
  margin: 0.5em;
  height: min-content;
  display: inline-flex;
}
.InputDivMain button {
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}
.InputDivMain button > span {
  position: relative;
  font-size: 1.3em;
}
.InputDivMain button[state*=active] {
  background-color: #ffa228;
}
.InputDivMain button[state*=passive] {
  background-color: transparent;
}
.InputDivMain button[state*=passive]:hover {
  background-color: #FFAD5B;
}
.InputDivMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}
.InputDivMain input {
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 0px !important;
  outline: none;
}
.InputDivMain input.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.InputDivMain input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}
.InputDivMain input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.InputDivMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

@keyframes buttonAnimation {
  from {
    transform: translateY(0em);
    text-underline-offset: 0em;
  }
  to {
    transform: translateY(-0.1em);
    text-underline-offset: 0.2em;
  }
}
@keyframes buttonAnimationB {
  to {
    transform: translateY(0em);
    text-underline-offset: 0em;
  }
  from {
    transform: translateY(-0.1em);
    text-underline-offset: 0.2em;
  }
}
@keyframes buttonIconAnimation {}
@keyframes buttonIconAnimation90 {
  from {
    transform: translateY(0em) rotate(90deg);
  }
  to {
    transform: translateY(-0.1em) rotate(90deg);
  }
}
.RadioButton {
  border: 1px solid black;
  position: relative;
}
.RadioButton > div {
  width: 100%;
  height: 100%;
  position: relative;
  align-items: center;
  display: flex;
  flex-direction: row;
  cursor: pointer;
}
.RadioButton > div > input {
  position: relative;
  margin-inline: 2%;
  cursor: pointer;
}
.RadioButton > div > div {
  position: relative;
  height: 100%;
}
.RadioButton > div > div[id*=Price] {
  font-size: 1em;
  margin-left: auto;
  margin-right: 5%;
}

:root {
  --main-font: "Montserrat";
  --primary: "";
  --primary-text: #333;
}

* {
  margin: 0;
  padding: 0;
  font-family: var(--main-font);
}

.tooltip_S[state*=active]:after, .tooltip_S[state*=active]:before {
  display: none;
}

.tooltip_S[data-tooltip-direction=right] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=right]:after {
  pointer-events: none;
  content: attr(data-tooltip-value);
  position: absolute;
  z-index: 10;
  top: 50%;
  transform: translateY(-50%);
  left: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=right]:before {
  pointer-events: none;
  content: "";
  position: absolute;
  z-index: 10;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-right: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=right]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  left: 110%;
}

.tooltip_S[data-tooltip-direction=right]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  left: 103%;
}

.tooltip_S[data-tooltip-direction=right]:hover:after, .tooltip_S[data-tooltip-direction=right]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=top] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=top]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  bottom: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=top]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  bottom: 130%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after {
  bottom: 120%;
}

.tooltip_S[data-tooltip-direction=top]:hover:before {
  bottom: 103%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after, .tooltip_S[data-tooltip-direction=top]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=left] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=left]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=left]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-left: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  right: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=left]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  right: 110%;
}

.tooltip_S[data-tooltip-direction=left]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  right: 103%;
}

.tooltip_S[data-tooltip-direction=left]:hover:after, .tooltip_S[data-tooltip-direction=left]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=bottom] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=bottom]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=bottom]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-bottom: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  top: 130%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after {
  top: 120%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:before {
  top: 103%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after, .tooltip_S[data-tooltip-direction=bottom]:hover:before {
  opacity: 1;
}

.AdaptiveTableMain {
  position: relative;
  display: block;
  width: 98%;
  height: 100%;
  overflow: hidden;
  overflow-y: auto;
}

.AdaptiveTableMain > .ListMain {
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

.AdaptiveTableMain > .ListMain > .column {
  position: relative;
  width: 90%;
  height: fit-content;
  flex-direction: column;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement {
  user-select: none;
  padding: 0.5em;
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: inline-block;
  height: fit-content;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > img {
  user-select: none;
  box-sizing: border-box;
  overflow: hidden;
  display: block;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  position: relative;
  width: 100%;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv {
  user-select: none;
  border-radius: 5px 5px;
  position: absolute;
  top: 0;
  margin: 0.5em;
  left: 0;
  width: calc(100% - 1em);
  height: calc(100% - 1em);
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
  background-color: rgba(94, 94, 94, 0.471);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv:hover {
  opacity: 1;
  box-shadow: rgba(0, 0, 0, 0.55) 0px 0px 3px, rgba(0, 0, 0, 0.51) 0px 0px 3px;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .informationDiv {
  display: none;
  position: relative;
  top: 0;
  margin: 0.5em;
  border-radius: 5px 5px;
  left: 0;
  background-color: rgba(255, 0, 0, 0.299);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv {
  user-select: none;
  position: absolute;
  bottom: 0;
  left: 0;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv > button {
  user-select: none;
}

.AmountDiv {
  display: flex;
  position: relative;
  border: 1px solid black;
  box-sizing: border-box;
  width: fit-content;
  padding: 0.2em;
}

.AmountDiv > button {
  width: 33%;
  position: relative;
  box-sizing: border-box;
  border-radius: 0px 0px;
}

.AmountDiv > button > span {
  font-size: 1em;
}

.AmountDiv > div {
  position: relative;
  width: 2em;
  margin: 0;
  background-color: transparent;
  padding: 0;
  overflow: hidden;
}

.AmountDiv > div > input {
  font-size: 1em;
  background-color: transparent;
  position: relative;
  border: none;
  outline: none;
  width: 100%;
  height: 100%;
  text-align: center;
}

.button_Default {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.button_Default > span {
  display: block;
}

.button_Default:hover {
  background-color: red;
}

.s-button_basic {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_basic > span {
  display: block;
}

.s-button_link {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_link > span {
  text-decoration: underline;
  color: blue;
  display: block;
}

.s-button_link:hover > span {
  color: rgb(34, 34, 255);
}

.DropDownInputMain {
  position: relative;
  background-color: #ffd7af;
  border-radius: 5px;
  margin: 0.5em;
  font-size: inherit;
}

.DropDownInputMain select {
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.25em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 5px 5px !important;
}

.DropDownInputMain select.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.25em;
}

.DropDownInputMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.DropDownInputMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

.header {
  position: fixed;
  width: 100%;
  height: 4rem;
  display: flex;
  flex-direction: row;
  alignItems: center;
  justifyContent: space-between !important;
  background-color: var(--bg-color);
  box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.2);
}

.header > .logoLinkBox {
  position: relative;
  margin-left: 3rem;
  min-width: 3rem;
  width: auto;
  max-width: 15rem;
  height: 4rem;
  display: flex;
  align-items: center;
  justify-content: start;
  text-decoration: none;
  cursor: pointer;
  user-select: none;
}

.header > .logoLinkBox > .logoIcon {
  position: relative;
  width: 2.5rem;
}

.header > .logoLinkBox > .logoText {
  position: relative;
  margin-left: 0.5rem;
  font-size: 1.3rem;
  font-weight: 600;
  color: #333 !important;
}

.header > .headerNavigation {
  position: absolute;
  right: 3rem;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: end;
}

.header > .headerNavigation > button {
  font-size: 1.1rem;
  margin-left: 1.5rem;
}

.header > .headerNavigation > button > span {
  position: relative;
  text-decoration: none;
  color: #a8a8a8;
}

.S_InputDiv {
  position: relative;
  background-color: #ffd7af;
  margin: 0.5em;
  height: min-content;
  display: flex;
  flex-wrap: wrap;
}

.S_InputDiv > button {
  flex: 0 1;
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}

.S_InputDiv > button > span {
  position: relative;
  font-size: 1.3em;
}

.S_InputDiv > button[state*=active] {
  background-color: #ffa228;
}

.S_InputDiv > button[state*=passive] {
  background-color: transparent;
}

.S_InputDiv > button[state*=passive]:hover {
  background-color: #FFAD5B;
}

.S_InputDiv label.switchLabel {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.S_InputDiv input {
  flex: 2 1;
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 5px 5px !important;
  outline: none;
}

.S_InputDiv input.filled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}

.S_InputDiv input[state*=passive] {
  color: red;
  background-color: #fff1de;
}

.S_InputDiv input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}

.S_InputDiv input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}

.S_InputDiv > .response {
  align-self: flex-end;
  text-align: justify;
  width: 100%;
  color: red;
}

.S_InputDiv .invalidInput {
  color: red;
  background-color: #fff1de;
}

.progressBar_Splint {
  position: absolute;
  width: 10em;
  background-color: blue;
  display: flex;
}

.progressBar_Splint > .S_progressBar_Body {
  width: 100%;
  border: 1px solid black;
}

.progressBar_Splint > .S_progressBar_Body > .S_progressBar_Inner {
  width: 100%;
  height: 100%;
  background-color: red;
}

.S-SliderMain {
  margin-top: 0.4em;
  margin-bottom: 0.4em;
}

.S-SliderMain[drawDivider=true]::after {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-bottom: 1px solid #BDBDBD;
  left: 0;
  margin-top: 0.25em;
  position: relative;
}

.S-SliderMain[drawDivider=true]::before {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-top: 1px solid #BDBDBD;
  left: 0;
  margin-bottom: 0.2em;
  position: relative;
}

.S-SliderMain > .label {
  position: relative;
  width: 100%;
  display: inline-block;
  box-sizing: border-box;
  text-align: left;
}

.S-SliderMain > .contentBody {
  height: 1em;
  display: flex;
}

.S-SliderMain > .contentBody > .sliderBody {
  order: 1;
  height: 100%;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range] {
  width: 100%;
  position: relative;
  font-size: 1em;
  height: 100%;
  display: inline-block;
  outline: none;
  -webkit-appearance: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-runnable-track {
  box-sizing: border-box;
  width: 100%;
  height: 0.5em;
  background: #ffa228;
  border: none;
  border-radius: 10px;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  border: none;
  vertical-align: baseline;
  height: 1em;
  width: 1em;
  border-radius: 10%;
  margin-top: -0.25em;
  background: white;
  box-sizing: border-box;
  border: 1px solid black;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus {
  outline: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus::-webkit-slider-runnable-track {
  background: #ffa228;
}

.S-SliderMain > .contentBody > .sliderBody > datalist {
  display: none;
  height: 20rem;
  margin-top: -23px;
  background-color: red;
  color: red;
}

.S-SliderMain > .contentBody > .sliderBody > datalist > option {
  background-color: red;
  color: red;
  height: 50px;
}

.S-SliderMain > .contentBody > .valueOutput {
  order: 2;
  height: 1em;
  width: 1.5em;
  display: inline-block;
  box-sizing: border-box;
  text-align: center;
}

.S-SliderMain > .contentBody > .valueOutput[hidden=true] {
  display: none;
}

.SlideShow_S {
  position: relative;
  height: 100%;
  overflow-y: visible !important;
  overflow-x: auto;
  box-sizing: border-box;
  white-space: nowrap;
  background-color: transparent;
}

.SlideShow_S > .inner {
  display: inline-block;
  position: relative;
  height: 100%;
  width: max-content;
  margin-left: auto;
  margin-right: auto;
  background-color: transparent;
}

.SlideShow_S > .inner > .listElement {
  position: relative;
  height: calc(100% - 0.4em);
  box-sizing: border-box;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  margin: 0.2em;
  margin-inline: 0.5em;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: end;
  align-items: end;
}

.SlideShow_S > .inner > .listElement > div {
  bottom: 0;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  aspect-ratio: 2/1;
}

.SlideShow_S > .inner > .listElement > div > span {
  font-size: 2em;
}

.subWindow_MAIN {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: all;
  user-select: none;
}

.subWindow_MAIN > .background {
  position: absolute;
  z-index: 1;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: rgba(255, 255, 255, 0.8509803922);
}

.subWindow_MAIN .content {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  position: absolute;
  z-index: 2;
  width: fit-content;
  max-height: 90vh;
  max-width: 90vw;
  overflow: hidden;
  margin: auto;
  left: 50%;
  height: max-content;
  top: 50%;
  user-select: none;
  pointer-events: all;
  transform: translate(-50%, -50%);
}

.subWindow_MAIN .content > button.button_close {
  position: absolute;
  right: 0.5em;
  z-index: 3;
}

.TableMain {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
}

.TableMain > .ListMain {
  position: relative;
  width: 100%;
  height: 100%;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;
}

.TableMain > .ListMain > .ListElement {
  margin: 0.5em;
  position: relative;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement > .ListElementHover {
  position: absolute;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 1;
  margin: 0;
  padding: 0;
  border: inherit;
  box-shadow: inherit;
  border-radius: inherit;
  background-color: rgba(64, 64, 64, 0.63);
  display: flex;
  flex-direction: column;
  transition: opacity 0.2s;
}

.horizontalLine {
  position: relative;
  margin: 0.1rem;
  left: 1%;
  width: 98%;
  opacity: 1;
  color: #BDBDBD;
  border: none;
  border-top: 0.5px solid #BDBDBD;
  background-color: #BDBDBD;
}

.PriceDiv {
  width: max-content;
  height: max-content !important;
  display: inline-block;
  overflow-wrap: anywhere;
  white-space: nowrap;
}

.s-ObjectEditor {
  width: 25rem;
  box-shadow: inset 1px 0px 0px 0px black, 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white;
}

.s-ObjectEditor > .Table2D {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table > tr {
  width: 0rem;
  box-sizing: border-box;
  border-bottom: 1px solid black;
  overflow: visible;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] {
  display: flex;
  flex-direction: column;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] > td[col*="1"] {
  margin-left: 1rem;
}

.s-ObjectEditor > .Table2D > table > tr > td {
  box-sizing: border-box;
  width: 100%;
  overflow: visible;
  padding-left: 0.25rem;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="0"] {
  width: 33%;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="2"] {
  width: min-content;
}

.s-ObjectEditor > .Table2D > table > tr > td > div {
  position: relative;
}

.s-sideBarMobile {
  position: absolute;
  height: 100%;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  width: 200px;
  transform: translateX(-100%);
  transition: transform 1s ease-in;
}

.s-sideBarMobile[s-state*=active] {
  transform: translateX(0);
}

.s-sideBarMobile > .headContainer {
  display: flex;
  padding: 0.25em;
  height: max-content;
  justify-content: center;
  align-items: center;
  box-shadow: 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white, inset 0px -1px 0px 0px gray;
}

.s-sideBarMobile > .headContainer > .headline {
  width: 100%;
  font-size: 2em;
}

.s-sideBarMobile > .headContainer > .buttonClose {
  position: relative;
  height: 100%;
}

.s-sideBarMobile > .content {
  width: 100%;
  height: 100%;
}

.Spinner1 {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}

.Spinner1[state*=passive] {
  visibility: hidden;
}

.Spinner1 > div {
  box-sizing: border-box;
  display: block;
  position: absolute;
  width: 80%;
  height: 80%;
  margin: 10%;
  border: 8px solid #fff;
  border-radius: 50%;
  animation: Spinner1 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
  border-color: #fff transparent transparent transparent;
}

.Spinner1 > div:nth-child(1) {
  animation-delay: -0.45s;
}

.Spinner1 > div:nth-child(2) {
  animation-delay: -0.3s;
}

.Spinner1 > div:nth-child(3) {
  animation-delay: -0.15s;
}

@keyframes Spinner1 {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.DropDownInputMain_S {
  position: relative;
  overflow: visible !important;
}

.DropDownInputMain_S > .S_InputDiv {
  width: 100%;
  margin: 0;
  margin-bottom: 0;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px;
}

.DropDownInputMain_S > .S_InputDiv > input {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > button {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > .response {
  display: none;
}

.DropDownInputMain_S > .DropDown_expander {
  z-index: 120;
  background-color: transparent;
  position: absolute;
  padding: 0;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.DropDownInputMain_S > .DropDown_expander[state*=active] {
  height: 10em;
}

.DropDownInputMain_S > .DropDown_expander[state*=passive] {
  height: 0em;
}

.DropDownInputMain_S > .DropDown_expander > div {
  z-index: 122;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-top: 0.2em;
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div > span {
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain {
  position: relative;
  overflow: visible !important;
}

.n_SelectInputMain > .Select_expander {
  z-index: 1;
  background-color: transparent;
  position: absolute;
  padding: 1%;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.n_SelectInputMain > .Select_expander[state*=active] {
  height: max-content;
  max-height: 10em;
}

.n_SelectInputMain > .Select_expander[state*=passive] {
  height: 0em;
  display: none;
}

.n_SelectInputMain > .Select_expander > div {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-bottom: 0.5em;
  text-align: center;
  cursor: pointer;
  transition: box-shadow 0.2s;
  transition-timing-function: ease-in;
}

.n_SelectInputMain > .Select_expander > div > span {
  text-align: center;
}

.n_SelectInputMain > .Select_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain > .Select_expander > div:hover {
  box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 3px, rgba(0, 0, 0, 0.21) 0px 0px 3px;
}

.n_inputDiv {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

.n_inputDiv > .inputBody {
  display: flex;
  flex-direction: row;
}

.n_inputDiv > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

.n_inputDiv > .inputBody > input:valid, .n_inputDiv > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

.n_inputDiv > .inputBody > input:valid + label span, .n_inputDiv > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

.n_inputDiv > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

.n_inputDiv > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.n_inputDiv > .inputBody > button {
  background-color: transparent;
}

.n_inputDiv > .response > span {
  color: red;
}

s-input {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

s-input > .inputBody {
  display: flex;
  flex-direction: row;
}

s-input > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

s-input > .inputBody > input:valid, s-input > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

s-input > .inputBody > input:valid + label span, s-input > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

s-input > .inputBody > input[state=passive] {
  border-bottom: 2px red solid;
}

s-input > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

s-input > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

s-input > .inputBody > button {
  background-color: transparent;
}

s-input > .response > span {
  color: red;
}

.S-AddressInput {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  column-gap: 0.5em;
  grid-template-areas: "fN fN fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.S-AddressInput > div, .S-AddressInput s-input {
  background-color: transparent;
  box-sizing: border-box;
}

.S-AddressInput > div > .inputBody, .S-AddressInput s-input > .inputBody {
  padding-top: 0.5em;
}

.S-AddressInput > div[identifier*=title], .S-AddressInput s-input[identifier*=title] {
  display: none;
}

.S-AddressInput > div[id*=salutation], .S-AddressInput s-input[id*=salutation] {
  display: none;
  grid-area: none;
}

.S-AddressInput > div[identifier*=firstName], .S-AddressInput s-input[identifier*=firstName] {
  grid-area: fN;
}

.S-AddressInput > div[identifier*=lastName], .S-AddressInput s-input[identifier*=lastName] {
  grid-area: lN;
}

.S-AddressInput > div[identifier*=postcode], .S-AddressInput s-input[identifier*=postcode] {
  grid-area: plz;
}

.S-AddressInput > div[identifier*=city], .S-AddressInput s-input[identifier*=city] {
  grid-area: ct;
}

.S-AddressInput > div[id*=country], .S-AddressInput s-input[id*=country] {
  grid-area: cy;
}

.S-AddressInput > div[identifier*=street], .S-AddressInput s-input[identifier*=street] {
  grid-area: st;
}

.S-AddressInput > div[identifier*=housenumber], .S-AddressInput s-input[identifier*=housenumber] {
  grid-area: hn;
}

.S-AddressInput > div[identifier*=email], .S-AddressInput s-input[identifier*=email] {
  grid-area: ema;
}

.S-AddressInput > div[identifier*=phone], .S-AddressInput s-input[identifier*=phone] {
  grid-area: ph;
}

.S-AddressInput > s-input {
  padding-bottom: -0.5em;
}

.n_RadioButton {
  position: relative;
}

.n_RadioButton > .radio_headline {
  position: relative;
}

.n_RadioButton > .inner {
  position: relative;
}

.n_RadioButton > .inner > div {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
  justify-content: start;
  align-items: center;
}

.n_RadioButton > .inner > div > .inputBody {
  position: relative;
  box-sizing: border-box;
  width: 1em;
  margin: 0.5em;
  height: 1em;
  min-width: 1em;
}

.n_RadioButton > .inner > div > .inputBody > input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span {
  box-sizing: border-box;
  background-color: #2196F3;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span:after {
  box-sizing: border-box;
  display: block;
}

.n_RadioButton > .inner > div > .inputBody > span {
  box-sizing: content-box;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background-color: #eee;
  border-radius: 50%;
}

.n_RadioButton > .inner > div > .inputBody > span:after {
  box-sizing: border-box;
  content: "";
  left: 0;
  top: 0;
  position: absolute;
  display: none;
  margin: 25%;
  width: 50%;
  height: 50%;
  border-radius: 50%;
  background: white;
}

.n_RadioButton > .inner > div > .inputBody:hover input ~ span {
  background-color: #ccc;
}

.toggleButton {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  display: flex;
  justify-content: space-around;
  width: max-content;
  overflow: hidden;
}

.toggleButton > button {
  width: 100%;
  padding: 0.5rem;
  background-color: transparent;
  border: none;
  cursor: pointer;
}

.toggleButton > button:hover {
  background-color: #FFAD5B;
}

.toggleButton > button[state*=active] {
  background-color: #ffa228;
}

.s-ToggleButton_2 {
  width: max-content;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
}

.s-ToggleButton_2 > button {
  border: none;
  border-radius: 0;
  outline: none;
  padding: 0em;
  min-height: 1rem;
  height: 100%;
  width: 100%;
  margin: 0.25em;
}

.s-ToggleButton_2 > button.btFALSE {
  background-color: red;
}

.s-ToggleButton_2 > button.btFALSE[state*=passive] {
  background-color: rgba(255, 0, 0, 0.3);
}

.s-ToggleButton_2 > button.btTRUE {
  background-color: green;
}

.s-ToggleButton_2 > button.btTRUE[state*=passive] {
  background-color: rgba(0, 128, 0, 0.3);
}

.S_SVGElement_BODY {
  position: relative;
  background-color: transparent;
}

.S_SVGElement_BODY > svg {
  position: relative;
}

.addressMenuNewMain > [id*=menuElement] > div {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  grid-template-areas: "salutation salutation fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.addressMenuNewMain > [id*=menuElement] > div > div {
  background-color: transparent;
  box-sizing: border-box;
}

.addressMenuNewMain > [id*=menuElement] > div > div.S_InputDiv {
  padding-bottom: -0.5em;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=title] {
  display: none;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=salutation] {
  grid-area: salutation;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=firstName] {
  grid-area: fN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=lastName] {
  grid-area: lN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=postcode] {
  grid-area: plz;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=city] {
  grid-area: ct;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=country] {
  grid-area: cy;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=street] {
  grid-area: st;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=housenumber] {
  grid-area: hn;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=email] {
  grid-area: ema;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=phone] {
  grid-area: ph;
}

/* Media Queries */
/* ------- */
/* Desktop */
/* ------- */
.CursorMain {
  display: all;
  backface-visibility: hidden;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
  width: 100px;
  height: 100px;
  background-color: red;
  z-index: 999;
}

.customCursor {
  position: absolute;
  box-sizing: content-box;
  will-change: transform;
  margin: 0;
  padding: 0;
  top: 0;
  left: 0;
  pointer-events: none;
  user-select: none;
  display: auto;
  z-index: 1000;
}
.customCursor.red {
  background-color: red;
}
.customCursor.orange {
  color: orange !important;
}

.button_Default {
  user-select: none;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 0px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  box-sizing: content-box;
  margin: 0.5em;
  overflow: hidden;
}
.button_Default > span {
  box-sizing: border-box;
}
.button_Default[state*=active] {
  background-color: #FFAD5B;
}
.button_Default[state*=passive] {
  background-color: #fff1de;
}
.button_Default:hover {
  background-color: #ffa228;
}

.button_General {
  user-select: none;
  background-color: transparent;
  border: none;
  color: #000000;
  display: inline-block;
  font-size: 1em;
  cursor: pointer;
  border-radius: 0px;
}
.button_General > span {
  display: block;
  position: relative;
  text-align: center;
}
.button_General > span:not(.material-symbols-outlined) {
  text-decoration: underline;
}
.button_General > .dropdown {
  position: absolute;
  left: 100%;
  margin-left: 10%;
  top: 0;
  width: fit-content;
  height: max-content;
  overflow: hidden;
}
.button_General:hover > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonAnimation;
}
.button_General:hover > span.material-symbols-outlined {
  color: #ffa228 !important;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonIconAnimation;
}
.button_General:hover > span.material-symbols-outlined.rotate90 {
  animation-name: buttonIconAnimation90;
}
.button_General:hover:after > span {
  color: white;
}
.button_General:hover:after > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-out;
  animation-fill-mode: backwards;
  animation-direction: reverse;
  animation-name: buttonAnimationB;
}
.button_General:hover:after > span.material-symbols-outlined {
  color: #ffa228 !important;
}
.button_General.simple {
  background-color: transparent;
  border: none;
  text-decoration: underline;
}

/* width */
::-webkit-scrollbar {
  margin-inline: 2px;
  width: 5px;
}

/* Track */
::-webkit-scrollbar-track {
  width: 2px;
  transform: scale(2);
  background: transparent;
}

/* Handle */
::-webkit-scrollbar-thumb {
  width: 5px;
  transform: scale(2);
  background: rgb(189, 189, 189);
  border-radius: 0px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: gray;
}

body {
  background-color: #fff8f1;
}
body * {
  font-family: "Arial";
  margin: 0;
  padding: 0;
}

.Slider_main > .Slider_inputBody input[type=range] {
  appearance: none;
  background: transparent;
  width: 100%;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-thumb {
  position: relative;
  appearance: none;
  width: 9px;
  height: 20px;
  background-color: #FFAD5B;
  transform: translateY(-40%);
  border-radius: 2px 2px;
  z-index: 20;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-runnable-track {
  position: relative;
  cursor: pointer;
  border-radius: 2px 2px;
  height: 20%;
  z-index: 19;
  /* Hides the slider so custom styles can be added */
  background-color: #000000;
}
.Slider_main > .Slider_inputBody > hr {
  position: absolute;
  margin-left: calc((100% - (2.1em + 6px)) / var(--size) * var(--index));
  z-index: 1;
  left: 5px;
  background-color: darkgray;
  width: 0.5px;
  top: 25%;
  height: 50%;
  margin-top: 0;
}
.Slider_main > .Slider_inputBody > hr:nth-child(even) {
  top: 12.5%;
  height: 75%;
}

body {
  position: relative;
  width: 100vw;
  overflow: hidden;
  box-sizing: content-box;
  top: 6vh;
  height: 94vh;
}
@media only screen and (max-width: 980px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 981px) and (max-width: 1199px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 1200px) {
  body {
    font-size: 1em;
  }
}

.Table {
  border: 1px solid black;
  position: relative;
  width: 50%;
}
.Table > div {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}
.Table > div > label {
  position: relative;
  overflow: hidden;
}
.Table > div > span {
  position: relative;
  overflow: hidden;
}

.bold {
  font-weight: bold;
}

.LoadBar {
  z-index: 3;
  border-radius: 0px;
  position: relative !important;
  background-color: red !important;
  width: 100% !important;
  height: 2em !important;
  overflow: hidden;
}
.LoadBar .LoadBar-progress {
  position: relative;
  height: 100%;
  background-color: green !important;
}

.LineDiv {
  position: relative;
  margin: 0;
  padding: 0;
  flex: auto;
  overflow: hidden;
  height: 100%;
  border: none;
}
.LineDiv hr {
  display: block;
  position: relative;
  color: orange;
  background-color: orange;
  opacity: 1;
  width: 0%;
  margin: 0;
  top: 50%;
  visibility: visible;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;
}

@keyframes NavBarLine {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}
.Text-primary {
  color: #000000;
}

.Text-secondary {
  color: #BCBCBC;
}

.Text-small {
  font-size: 0.75em;
}

.SliderDivMain {
  border: 1px solid black;
}

.TextInputDiv {
  position: relative;
  background-color: #fff8f1;
  border-radius: 0px;
  margin: 0.5em;
  margin-bottom: 1.5em;
  font-size: inherit;
  height: 10em;
}
.TextInputDiv textarea {
  position: relative;
  outline: 0;
  resize: none;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 0px !important;
}
.TextInputDiv textarea.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 1.1em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.TextInputDiv textarea::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.TextInputDiv label {
  user-select: none;
  position: absolute;
  z-index: 1;
  width: 100%;
  background-color: #fff8f1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.11em;
  padding-top: 0.39em;
  padding-bottom: 0.13em;
  border-top-right-radius: 5px 5px;
}
.TextInputDiv .horizontalLine {
  position: absolute;
  z-index: 2;
  width: 100%;
  top: 0.89em;
  height: 0px;
  left: 0;
  margin-block: 0px;
  margin-inline: 0.5em;
}

.InputDivMain {
  position: relative;
  background-color: #fff8f1;
  margin: 0.5em;
  height: min-content;
  display: inline-flex;
}
.InputDivMain button {
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}
.InputDivMain button > span {
  position: relative;
  font-size: 1.3em;
}
.InputDivMain button[state*=active] {
  background-color: #ffa228;
}
.InputDivMain button[state*=passive] {
  background-color: transparent;
}
.InputDivMain button[state*=passive]:hover {
  background-color: #FFAD5B;
}
.InputDivMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}
.InputDivMain input {
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 0px !important;
  outline: none;
}
.InputDivMain input.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.InputDivMain input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}
.InputDivMain input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.InputDivMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

:root {
  --main-font: "Montserrat";
  --primary: "";
  --primary-text: #333;
}

* {
  margin: 0;
  padding: 0;
  font-family: var(--main-font);
}

.tooltip_S[state*=active]:after, .tooltip_S[state*=active]:before {
  display: none;
}

.tooltip_S[data-tooltip-direction=right] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=right]:after {
  pointer-events: none;
  content: attr(data-tooltip-value);
  position: absolute;
  z-index: 10;
  top: 50%;
  transform: translateY(-50%);
  left: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=right]:before {
  pointer-events: none;
  content: "";
  position: absolute;
  z-index: 10;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-right: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=right]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  left: 110%;
}

.tooltip_S[data-tooltip-direction=right]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  left: 103%;
}

.tooltip_S[data-tooltip-direction=right]:hover:after, .tooltip_S[data-tooltip-direction=right]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=top] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=top]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  bottom: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=top]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  bottom: 130%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after {
  bottom: 120%;
}

.tooltip_S[data-tooltip-direction=top]:hover:before {
  bottom: 103%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after, .tooltip_S[data-tooltip-direction=top]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=left] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=left]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=left]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-left: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  right: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=left]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  right: 110%;
}

.tooltip_S[data-tooltip-direction=left]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  right: 103%;
}

.tooltip_S[data-tooltip-direction=left]:hover:after, .tooltip_S[data-tooltip-direction=left]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=bottom] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=bottom]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=bottom]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-bottom: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  top: 130%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after {
  top: 120%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:before {
  top: 103%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after, .tooltip_S[data-tooltip-direction=bottom]:hover:before {
  opacity: 1;
}

.AdaptiveTableMain {
  position: relative;
  display: block;
  width: 98%;
  height: 100%;
  overflow: hidden;
  overflow-y: auto;
}

.AdaptiveTableMain > .ListMain {
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

.AdaptiveTableMain > .ListMain > .column {
  position: relative;
  width: 90%;
  height: fit-content;
  flex-direction: column;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement {
  user-select: none;
  padding: 0.5em;
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: inline-block;
  height: fit-content;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > img {
  user-select: none;
  box-sizing: border-box;
  overflow: hidden;
  display: block;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  position: relative;
  width: 100%;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv {
  user-select: none;
  border-radius: 5px 5px;
  position: absolute;
  top: 0;
  margin: 0.5em;
  left: 0;
  width: calc(100% - 1em);
  height: calc(100% - 1em);
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
  background-color: rgba(94, 94, 94, 0.471);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv:hover {
  opacity: 1;
  box-shadow: rgba(0, 0, 0, 0.55) 0px 0px 3px, rgba(0, 0, 0, 0.51) 0px 0px 3px;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .informationDiv {
  display: none;
  position: relative;
  top: 0;
  margin: 0.5em;
  border-radius: 5px 5px;
  left: 0;
  background-color: rgba(255, 0, 0, 0.299);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv {
  user-select: none;
  position: absolute;
  bottom: 0;
  left: 0;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv > button {
  user-select: none;
}

.AmountDiv {
  display: flex;
  position: relative;
  border: 1px solid black;
  box-sizing: border-box;
  width: fit-content;
  padding: 0.2em;
}

.AmountDiv > button {
  width: 33%;
  position: relative;
  box-sizing: border-box;
  border-radius: 0px 0px;
}

.AmountDiv > button > span {
  font-size: 1em;
}

.AmountDiv > div {
  position: relative;
  width: 2em;
  margin: 0;
  background-color: transparent;
  padding: 0;
  overflow: hidden;
}

.AmountDiv > div > input {
  font-size: 1em;
  background-color: transparent;
  position: relative;
  border: none;
  outline: none;
  width: 100%;
  height: 100%;
  text-align: center;
}

.button_Default {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.button_Default > span {
  display: block;
}

.button_Default:hover {
  background-color: red;
}

.s-button_basic {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_basic > span {
  display: block;
}

.s-button_link {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_link > span {
  text-decoration: underline;
  color: blue;
  display: block;
}

.s-button_link:hover > span {
  color: rgb(34, 34, 255);
}

.DropDownInputMain {
  position: relative;
  background-color: #ffd7af;
  border-radius: 5px;
  margin: 0.5em;
  font-size: inherit;
}

.DropDownInputMain select {
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.25em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 5px 5px !important;
}

.DropDownInputMain select.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.25em;
}

.DropDownInputMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.DropDownInputMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

.header {
  position: fixed;
  width: 100%;
  height: 4rem;
  display: flex;
  flex-direction: row;
  alignItems: center;
  justifyContent: space-between !important;
  background-color: var(--bg-color);
  box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.2);
}

.header > .logoLinkBox {
  position: relative;
  margin-left: 3rem;
  min-width: 3rem;
  width: auto;
  max-width: 15rem;
  height: 4rem;
  display: flex;
  align-items: center;
  justify-content: start;
  text-decoration: none;
  cursor: pointer;
  user-select: none;
}

.header > .logoLinkBox > .logoIcon {
  position: relative;
  width: 2.5rem;
}

.header > .logoLinkBox > .logoText {
  position: relative;
  margin-left: 0.5rem;
  font-size: 1.3rem;
  font-weight: 600;
  color: #333 !important;
}

.header > .headerNavigation {
  position: absolute;
  right: 3rem;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: end;
}

.header > .headerNavigation > button {
  font-size: 1.1rem;
  margin-left: 1.5rem;
}

.header > .headerNavigation > button > span {
  position: relative;
  text-decoration: none;
  color: #a8a8a8;
}

.S_InputDiv {
  position: relative;
  background-color: #ffd7af;
  margin: 0.5em;
  height: min-content;
  display: flex;
  flex-wrap: wrap;
}

.S_InputDiv > button {
  flex: 0 1;
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}

.S_InputDiv > button > span {
  position: relative;
  font-size: 1.3em;
}

.S_InputDiv > button[state*=active] {
  background-color: #ffa228;
}

.S_InputDiv > button[state*=passive] {
  background-color: transparent;
}

.S_InputDiv > button[state*=passive]:hover {
  background-color: #FFAD5B;
}

.S_InputDiv label.switchLabel {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.S_InputDiv input {
  flex: 2 1;
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 5px 5px !important;
  outline: none;
}

.S_InputDiv input.filled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}

.S_InputDiv input[state*=passive] {
  color: red;
  background-color: #fff1de;
}

.S_InputDiv input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}

.S_InputDiv input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}

.S_InputDiv > .response {
  align-self: flex-end;
  text-align: justify;
  width: 100%;
  color: red;
}

.S_InputDiv .invalidInput {
  color: red;
  background-color: #fff1de;
}

.progressBar_Splint {
  position: absolute;
  width: 10em;
  background-color: blue;
  display: flex;
}

.progressBar_Splint > .S_progressBar_Body {
  width: 100%;
  border: 1px solid black;
}

.progressBar_Splint > .S_progressBar_Body > .S_progressBar_Inner {
  width: 100%;
  height: 100%;
  background-color: red;
}

.S-SliderMain {
  margin-top: 0.4em;
  margin-bottom: 0.4em;
}

.S-SliderMain[drawDivider=true]::after {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-bottom: 1px solid #BDBDBD;
  left: 0;
  margin-top: 0.25em;
  position: relative;
}

.S-SliderMain[drawDivider=true]::before {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-top: 1px solid #BDBDBD;
  left: 0;
  margin-bottom: 0.2em;
  position: relative;
}

.S-SliderMain > .label {
  position: relative;
  width: 100%;
  display: inline-block;
  box-sizing: border-box;
  text-align: left;
}

.S-SliderMain > .contentBody {
  height: 1em;
  display: flex;
}

.S-SliderMain > .contentBody > .sliderBody {
  order: 1;
  height: 100%;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range] {
  width: 100%;
  position: relative;
  font-size: 1em;
  height: 100%;
  display: inline-block;
  outline: none;
  -webkit-appearance: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-runnable-track {
  box-sizing: border-box;
  width: 100%;
  height: 0.5em;
  background: #ffa228;
  border: none;
  border-radius: 10px;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  border: none;
  vertical-align: baseline;
  height: 1em;
  width: 1em;
  border-radius: 10%;
  margin-top: -0.25em;
  background: white;
  box-sizing: border-box;
  border: 1px solid black;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus {
  outline: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus::-webkit-slider-runnable-track {
  background: #ffa228;
}

.S-SliderMain > .contentBody > .sliderBody > datalist {
  display: none;
  height: 20rem;
  margin-top: -23px;
  background-color: red;
  color: red;
}

.S-SliderMain > .contentBody > .sliderBody > datalist > option {
  background-color: red;
  color: red;
  height: 50px;
}

.S-SliderMain > .contentBody > .valueOutput {
  order: 2;
  height: 1em;
  width: 1.5em;
  display: inline-block;
  box-sizing: border-box;
  text-align: center;
}

.S-SliderMain > .contentBody > .valueOutput[hidden=true] {
  display: none;
}

.SlideShow_S {
  position: relative;
  height: 100%;
  overflow-y: visible !important;
  overflow-x: auto;
  box-sizing: border-box;
  white-space: nowrap;
  background-color: transparent;
}

.SlideShow_S > .inner {
  display: inline-block;
  position: relative;
  height: 100%;
  width: max-content;
  margin-left: auto;
  margin-right: auto;
  background-color: transparent;
}

.SlideShow_S > .inner > .listElement {
  position: relative;
  height: calc(100% - 0.4em);
  box-sizing: border-box;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  margin: 0.2em;
  margin-inline: 0.5em;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: end;
  align-items: end;
}

.SlideShow_S > .inner > .listElement > div {
  bottom: 0;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  aspect-ratio: 2/1;
}

.SlideShow_S > .inner > .listElement > div > span {
  font-size: 2em;
}

.subWindow_MAIN {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: all;
  user-select: none;
}

.subWindow_MAIN > .background {
  position: absolute;
  z-index: 1;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: rgba(255, 255, 255, 0.8509803922);
}

.subWindow_MAIN .content {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  position: absolute;
  z-index: 2;
  width: fit-content;
  max-height: 90vh;
  max-width: 90vw;
  overflow: hidden;
  margin: auto;
  left: 50%;
  height: max-content;
  top: 50%;
  user-select: none;
  pointer-events: all;
  transform: translate(-50%, -50%);
}

.subWindow_MAIN .content > button.button_close {
  position: absolute;
  right: 0.5em;
  z-index: 3;
}

.TableMain {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
}

.TableMain > .ListMain {
  position: relative;
  width: 100%;
  height: 100%;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;
}

.TableMain > .ListMain > .ListElement {
  margin: 0.5em;
  position: relative;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement > .ListElementHover {
  position: absolute;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 1;
  margin: 0;
  padding: 0;
  border: inherit;
  box-shadow: inherit;
  border-radius: inherit;
  background-color: rgba(64, 64, 64, 0.63);
  display: flex;
  flex-direction: column;
  transition: opacity 0.2s;
}

.horizontalLine {
  position: relative;
  margin: 0.1rem;
  left: 1%;
  width: 98%;
  opacity: 1;
  color: #BDBDBD;
  border: none;
  border-top: 0.5px solid #BDBDBD;
  background-color: #BDBDBD;
}

.PriceDiv {
  width: max-content;
  height: max-content !important;
  display: inline-block;
  overflow-wrap: anywhere;
  white-space: nowrap;
}

.s-ObjectEditor {
  width: 25rem;
  box-shadow: inset 1px 0px 0px 0px black, 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white;
}

.s-ObjectEditor > .Table2D {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table > tr {
  width: 0rem;
  box-sizing: border-box;
  border-bottom: 1px solid black;
  overflow: visible;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] {
  display: flex;
  flex-direction: column;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] > td[col*="1"] {
  margin-left: 1rem;
}

.s-ObjectEditor > .Table2D > table > tr > td {
  box-sizing: border-box;
  width: 100%;
  overflow: visible;
  padding-left: 0.25rem;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="0"] {
  width: 33%;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="2"] {
  width: min-content;
}

.s-ObjectEditor > .Table2D > table > tr > td > div {
  position: relative;
}

.s-sideBarMobile {
  position: absolute;
  height: 100%;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  width: 200px;
  transform: translateX(-100%);
  transition: transform 1s ease-in;
}

.s-sideBarMobile[s-state*=active] {
  transform: translateX(0);
}

.s-sideBarMobile > .headContainer {
  display: flex;
  padding: 0.25em;
  height: max-content;
  justify-content: center;
  align-items: center;
  box-shadow: 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white, inset 0px -1px 0px 0px gray;
}

.s-sideBarMobile > .headContainer > .headline {
  width: 100%;
  font-size: 2em;
}

.s-sideBarMobile > .headContainer > .buttonClose {
  position: relative;
  height: 100%;
}

.s-sideBarMobile > .content {
  width: 100%;
  height: 100%;
}

.Spinner1 {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}

.Spinner1[state*=passive] {
  visibility: hidden;
}

.Spinner1 > div {
  box-sizing: border-box;
  display: block;
  position: absolute;
  width: 80%;
  height: 80%;
  margin: 10%;
  border: 8px solid #fff;
  border-radius: 50%;
  animation: Spinner1 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
  border-color: #fff transparent transparent transparent;
}

.Spinner1 > div:nth-child(1) {
  animation-delay: -0.45s;
}

.Spinner1 > div:nth-child(2) {
  animation-delay: -0.3s;
}

.Spinner1 > div:nth-child(3) {
  animation-delay: -0.15s;
}

@keyframes Spinner1 {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.DropDownInputMain_S {
  position: relative;
  overflow: visible !important;
}

.DropDownInputMain_S > .S_InputDiv {
  width: 100%;
  margin: 0;
  margin-bottom: 0;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px;
}

.DropDownInputMain_S > .S_InputDiv > input {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > button {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > .response {
  display: none;
}

.DropDownInputMain_S > .DropDown_expander {
  z-index: 120;
  background-color: transparent;
  position: absolute;
  padding: 0;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.DropDownInputMain_S > .DropDown_expander[state*=active] {
  height: 10em;
}

.DropDownInputMain_S > .DropDown_expander[state*=passive] {
  height: 0em;
}

.DropDownInputMain_S > .DropDown_expander > div {
  z-index: 122;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-top: 0.2em;
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div > span {
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain {
  position: relative;
  overflow: visible !important;
}

.n_SelectInputMain > .Select_expander {
  z-index: 1;
  background-color: transparent;
  position: absolute;
  padding: 1%;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.n_SelectInputMain > .Select_expander[state*=active] {
  height: max-content;
  max-height: 10em;
}

.n_SelectInputMain > .Select_expander[state*=passive] {
  height: 0em;
  display: none;
}

.n_SelectInputMain > .Select_expander > div {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-bottom: 0.5em;
  text-align: center;
  cursor: pointer;
  transition: box-shadow 0.2s;
  transition-timing-function: ease-in;
}

.n_SelectInputMain > .Select_expander > div > span {
  text-align: center;
}

.n_SelectInputMain > .Select_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain > .Select_expander > div:hover {
  box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 3px, rgba(0, 0, 0, 0.21) 0px 0px 3px;
}

.n_inputDiv {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

.n_inputDiv > .inputBody {
  display: flex;
  flex-direction: row;
}

.n_inputDiv > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

.n_inputDiv > .inputBody > input:valid, .n_inputDiv > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

.n_inputDiv > .inputBody > input:valid + label span, .n_inputDiv > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

.n_inputDiv > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

.n_inputDiv > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.n_inputDiv > .inputBody > button {
  background-color: transparent;
}

.n_inputDiv > .response > span {
  color: red;
}

s-input {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

s-input > .inputBody {
  display: flex;
  flex-direction: row;
}

s-input > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

s-input > .inputBody > input:valid, s-input > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

s-input > .inputBody > input:valid + label span, s-input > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

s-input > .inputBody > input[state=passive] {
  border-bottom: 2px red solid;
}

s-input > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

s-input > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

s-input > .inputBody > button {
  background-color: transparent;
}

s-input > .response > span {
  color: red;
}

.S-AddressInput {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  column-gap: 0.5em;
  grid-template-areas: "fN fN fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.S-AddressInput > div, .S-AddressInput s-input {
  background-color: transparent;
  box-sizing: border-box;
}

.S-AddressInput > div > .inputBody, .S-AddressInput s-input > .inputBody {
  padding-top: 0.5em;
}

.S-AddressInput > div[identifier*=title], .S-AddressInput s-input[identifier*=title] {
  display: none;
}

.S-AddressInput > div[id*=salutation], .S-AddressInput s-input[id*=salutation] {
  display: none;
  grid-area: none;
}

.S-AddressInput > div[identifier*=firstName], .S-AddressInput s-input[identifier*=firstName] {
  grid-area: fN;
}

.S-AddressInput > div[identifier*=lastName], .S-AddressInput s-input[identifier*=lastName] {
  grid-area: lN;
}

.S-AddressInput > div[identifier*=postcode], .S-AddressInput s-input[identifier*=postcode] {
  grid-area: plz;
}

.S-AddressInput > div[identifier*=city], .S-AddressInput s-input[identifier*=city] {
  grid-area: ct;
}

.S-AddressInput > div[id*=country], .S-AddressInput s-input[id*=country] {
  grid-area: cy;
}

.S-AddressInput > div[identifier*=street], .S-AddressInput s-input[identifier*=street] {
  grid-area: st;
}

.S-AddressInput > div[identifier*=housenumber], .S-AddressInput s-input[identifier*=housenumber] {
  grid-area: hn;
}

.S-AddressInput > div[identifier*=email], .S-AddressInput s-input[identifier*=email] {
  grid-area: ema;
}

.S-AddressInput > div[identifier*=phone], .S-AddressInput s-input[identifier*=phone] {
  grid-area: ph;
}

.S-AddressInput > s-input {
  padding-bottom: -0.5em;
}

.n_RadioButton {
  position: relative;
}

.n_RadioButton > .radio_headline {
  position: relative;
}

.n_RadioButton > .inner {
  position: relative;
}

.n_RadioButton > .inner > div {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
  justify-content: start;
  align-items: center;
}

.n_RadioButton > .inner > div > .inputBody {
  position: relative;
  box-sizing: border-box;
  width: 1em;
  margin: 0.5em;
  height: 1em;
  min-width: 1em;
}

.n_RadioButton > .inner > div > .inputBody > input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span {
  box-sizing: border-box;
  background-color: #2196F3;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span:after {
  box-sizing: border-box;
  display: block;
}

.n_RadioButton > .inner > div > .inputBody > span {
  box-sizing: content-box;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background-color: #eee;
  border-radius: 50%;
}

.n_RadioButton > .inner > div > .inputBody > span:after {
  box-sizing: border-box;
  content: "";
  left: 0;
  top: 0;
  position: absolute;
  display: none;
  margin: 25%;
  width: 50%;
  height: 50%;
  border-radius: 50%;
  background: white;
}

.n_RadioButton > .inner > div > .inputBody:hover input ~ span {
  background-color: #ccc;
}

.toggleButton {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  display: flex;
  justify-content: space-around;
  width: max-content;
  overflow: hidden;
}

.toggleButton > button {
  width: 100%;
  padding: 0.5rem;
  background-color: transparent;
  border: none;
  cursor: pointer;
}

.toggleButton > button:hover {
  background-color: #FFAD5B;
}

.toggleButton > button[state*=active] {
  background-color: #ffa228;
}

.s-ToggleButton_2 {
  width: max-content;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
}

.s-ToggleButton_2 > button {
  border: none;
  border-radius: 0;
  outline: none;
  padding: 0em;
  min-height: 1rem;
  height: 100%;
  width: 100%;
  margin: 0.25em;
}

.s-ToggleButton_2 > button.btFALSE {
  background-color: red;
}

.s-ToggleButton_2 > button.btFALSE[state*=passive] {
  background-color: rgba(255, 0, 0, 0.3);
}

.s-ToggleButton_2 > button.btTRUE {
  background-color: green;
}

.s-ToggleButton_2 > button.btTRUE[state*=passive] {
  background-color: rgba(0, 128, 0, 0.3);
}

.S_SVGElement_BODY {
  position: relative;
  background-color: transparent;
}

.S_SVGElement_BODY > svg {
  position: relative;
}

.addressMenuNewMain > [id*=menuElement] > div {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  grid-template-areas: "salutation salutation fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.addressMenuNewMain > [id*=menuElement] > div > div {
  background-color: transparent;
  box-sizing: border-box;
}

.addressMenuNewMain > [id*=menuElement] > div > div.S_InputDiv {
  padding-bottom: -0.5em;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=title] {
  display: none;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=salutation] {
  grid-area: salutation;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=firstName] {
  grid-area: fN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=lastName] {
  grid-area: lN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=postcode] {
  grid-area: plz;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=city] {
  grid-area: ct;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=country] {
  grid-area: cy;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=street] {
  grid-area: st;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=housenumber] {
  grid-area: hn;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=email] {
  grid-area: ema;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=phone] {
  grid-area: ph;
}

/* Media Queries */
/* ------- */
/* Desktop */
/* ------- */
.CursorMain {
  display: all;
  backface-visibility: hidden;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
  width: 100px;
  height: 100px;
  background-color: red;
  z-index: 999;
}

.customCursor {
  position: absolute;
  box-sizing: content-box;
  will-change: transform;
  margin: 0;
  padding: 0;
  top: 0;
  left: 0;
  pointer-events: none;
  user-select: none;
  display: auto;
  z-index: 1000;
}
.customCursor.red {
  background-color: red;
}
.customCursor.orange {
  color: orange !important;
}

.button_Default {
  user-select: none;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 0px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  box-sizing: content-box;
  margin: 0.5em;
  overflow: hidden;
}
.button_Default > span {
  box-sizing: border-box;
}
.button_Default[state*=active] {
  background-color: #FFAD5B;
}
.button_Default[state*=passive] {
  background-color: #fff1de;
}
.button_Default:hover {
  background-color: #ffa228;
}

.button_General {
  user-select: none;
  background-color: transparent;
  border: none;
  color: #000000;
  display: inline-block;
  font-size: 1em;
  cursor: pointer;
  border-radius: 0px;
}
.button_General > span {
  display: block;
  position: relative;
  text-align: center;
}
.button_General > span:not(.material-symbols-outlined) {
  text-decoration: underline;
}
.button_General > .dropdown {
  position: absolute;
  left: 100%;
  margin-left: 10%;
  top: 0;
  width: fit-content;
  height: max-content;
  overflow: hidden;
}
.button_General:hover > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonAnimation;
}
.button_General:hover > span.material-symbols-outlined {
  color: #ffa228 !important;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonIconAnimation;
}
.button_General:hover > span.material-symbols-outlined.rotate90 {
  animation-name: buttonIconAnimation90;
}
.button_General:hover:after > span {
  color: white;
}
.button_General:hover:after > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-out;
  animation-fill-mode: backwards;
  animation-direction: reverse;
  animation-name: buttonAnimationB;
}
.button_General:hover:after > span.material-symbols-outlined {
  color: #ffa228 !important;
}
.button_General.simple {
  background-color: transparent;
  border: none;
  text-decoration: underline;
}

/* width */
::-webkit-scrollbar {
  margin-inline: 2px;
  width: 5px;
}

/* Track */
::-webkit-scrollbar-track {
  width: 2px;
  transform: scale(2);
  background: transparent;
}

/* Handle */
::-webkit-scrollbar-thumb {
  width: 5px;
  transform: scale(2);
  background: rgb(189, 189, 189);
  border-radius: 0px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: gray;
}

body {
  background-color: #fff8f1;
}
body * {
  font-family: "Arial";
  margin: 0;
  padding: 0;
}

.Slider_main > .Slider_inputBody input[type=range] {
  appearance: none;
  background: transparent;
  width: 100%;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-thumb {
  position: relative;
  appearance: none;
  width: 9px;
  height: 20px;
  background-color: #FFAD5B;
  transform: translateY(-40%);
  border-radius: 2px 2px;
  z-index: 20;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-runnable-track {
  position: relative;
  cursor: pointer;
  border-radius: 2px 2px;
  height: 20%;
  z-index: 19;
  /* Hides the slider so custom styles can be added */
  background-color: #000000;
}
.Slider_main > .Slider_inputBody > hr {
  position: absolute;
  margin-left: calc((100% - (2.1em + 6px)) / var(--size) * var(--index));
  z-index: 1;
  left: 5px;
  background-color: darkgray;
  width: 0.5px;
  top: 25%;
  height: 50%;
  margin-top: 0;
}
.Slider_main > .Slider_inputBody > hr:nth-child(even) {
  top: 12.5%;
  height: 75%;
}

body {
  position: relative;
  width: 100vw;
  overflow: hidden;
  box-sizing: content-box;
  top: 6vh;
  height: 94vh;
}
@media only screen and (max-width: 980px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 981px) and (max-width: 1199px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 1200px) {
  body {
    font-size: 1em;
  }
}

.Table {
  border: 1px solid black;
  position: relative;
  width: 50%;
}
.Table > div {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}
.Table > div > label {
  position: relative;
  overflow: hidden;
}
.Table > div > span {
  position: relative;
  overflow: hidden;
}

.bold {
  font-weight: bold;
}

.LoadBar {
  z-index: 3;
  border-radius: 0px;
  position: relative !important;
  background-color: red !important;
  width: 100% !important;
  height: 2em !important;
  overflow: hidden;
}
.LoadBar .LoadBar-progress {
  position: relative;
  height: 100%;
  background-color: green !important;
}

.LineDiv {
  position: relative;
  margin: 0;
  padding: 0;
  flex: auto;
  overflow: hidden;
  height: 100%;
  border: none;
}
.LineDiv hr {
  display: block;
  position: relative;
  color: orange;
  background-color: orange;
  opacity: 1;
  width: 0%;
  margin: 0;
  top: 50%;
  visibility: visible;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;
}

@keyframes NavBarLine {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}
.Text-primary {
  color: #000000;
}

.Text-secondary {
  color: #BCBCBC;
}

.Text-small {
  font-size: 0.75em;
}

.SliderDivMain {
  border: 1px solid black;
}

.TextInputDiv {
  position: relative;
  background-color: #fff8f1;
  border-radius: 0px;
  margin: 0.5em;
  margin-bottom: 1.5em;
  font-size: inherit;
  height: 10em;
}
.TextInputDiv textarea {
  position: relative;
  outline: 0;
  resize: none;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 0px !important;
}
.TextInputDiv textarea.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 1.1em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.TextInputDiv textarea::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.TextInputDiv label {
  user-select: none;
  position: absolute;
  z-index: 1;
  width: 100%;
  background-color: #fff8f1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.11em;
  padding-top: 0.39em;
  padding-bottom: 0.13em;
  border-top-right-radius: 5px 5px;
}
.TextInputDiv .horizontalLine {
  position: absolute;
  z-index: 2;
  width: 100%;
  top: 0.89em;
  height: 0px;
  left: 0;
  margin-block: 0px;
  margin-inline: 0.5em;
}

.InputDivMain {
  position: relative;
  background-color: #fff8f1;
  margin: 0.5em;
  height: min-content;
  display: inline-flex;
}
.InputDivMain button {
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}
.InputDivMain button > span {
  position: relative;
  font-size: 1.3em;
}
.InputDivMain button[state*=active] {
  background-color: #ffa228;
}
.InputDivMain button[state*=passive] {
  background-color: transparent;
}
.InputDivMain button[state*=passive]:hover {
  background-color: #FFAD5B;
}
.InputDivMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}
.InputDivMain input {
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 0px !important;
  outline: none;
}
.InputDivMain input.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.InputDivMain input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}
.InputDivMain input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.InputDivMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

@keyframes buttonAnimation {
  from {
    transform: translateY(0em);
    text-underline-offset: 0em;
  }
  to {
    transform: translateY(-0.1em);
    text-underline-offset: 0.2em;
  }
}
@keyframes buttonAnimationB {
  to {
    transform: translateY(0em);
    text-underline-offset: 0em;
  }
  from {
    transform: translateY(-0.1em);
    text-underline-offset: 0.2em;
  }
}
@keyframes buttonIconAnimation {}
@keyframes buttonIconAnimation90 {
  from {
    transform: translateY(0em) rotate(90deg);
  }
  to {
    transform: translateY(-0.1em) rotate(90deg);
  }
}
.RadioButton {
  border: 1px solid black;
  position: relative;
}
.RadioButton > div {
  width: 100%;
  height: 100%;
  position: relative;
  align-items: center;
  display: flex;
  flex-direction: row;
  cursor: pointer;
}
.RadioButton > div > input {
  position: relative;
  margin-inline: 2%;
  cursor: pointer;
}
.RadioButton > div > div {
  position: relative;
  height: 100%;
}
.RadioButton > div > div[id*=Price] {
  font-size: 1em;
  margin-left: auto;
  margin-right: 5%;
}

:root {
  --main-font: "Montserrat";
  --primary: "";
  --primary-text: #333;
}

* {
  margin: 0;
  padding: 0;
  font-family: var(--main-font);
}

.tooltip_S[state*=active]:after, .tooltip_S[state*=active]:before {
  display: none;
}

.tooltip_S[data-tooltip-direction=right] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=right]:after {
  pointer-events: none;
  content: attr(data-tooltip-value);
  position: absolute;
  z-index: 10;
  top: 50%;
  transform: translateY(-50%);
  left: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=right]:before {
  pointer-events: none;
  content: "";
  position: absolute;
  z-index: 10;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-right: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=right]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  left: 110%;
}

.tooltip_S[data-tooltip-direction=right]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  left: 103%;
}

.tooltip_S[data-tooltip-direction=right]:hover:after, .tooltip_S[data-tooltip-direction=right]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=top] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=top]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  bottom: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=top]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  bottom: 130%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after {
  bottom: 120%;
}

.tooltip_S[data-tooltip-direction=top]:hover:before {
  bottom: 103%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after, .tooltip_S[data-tooltip-direction=top]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=left] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=left]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=left]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-left: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  right: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=left]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  right: 110%;
}

.tooltip_S[data-tooltip-direction=left]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  right: 103%;
}

.tooltip_S[data-tooltip-direction=left]:hover:after, .tooltip_S[data-tooltip-direction=left]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=bottom] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=bottom]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=bottom]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-bottom: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  top: 130%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after {
  top: 120%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:before {
  top: 103%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after, .tooltip_S[data-tooltip-direction=bottom]:hover:before {
  opacity: 1;
}

.AdaptiveTableMain {
  position: relative;
  display: block;
  width: 98%;
  height: 100%;
  overflow: hidden;
  overflow-y: auto;
}

.AdaptiveTableMain > .ListMain {
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

.AdaptiveTableMain > .ListMain > .column {
  position: relative;
  width: 90%;
  height: fit-content;
  flex-direction: column;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement {
  user-select: none;
  padding: 0.5em;
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: inline-block;
  height: fit-content;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > img {
  user-select: none;
  box-sizing: border-box;
  overflow: hidden;
  display: block;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  position: relative;
  width: 100%;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv {
  user-select: none;
  border-radius: 5px 5px;
  position: absolute;
  top: 0;
  margin: 0.5em;
  left: 0;
  width: calc(100% - 1em);
  height: calc(100% - 1em);
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
  background-color: rgba(94, 94, 94, 0.471);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv:hover {
  opacity: 1;
  box-shadow: rgba(0, 0, 0, 0.55) 0px 0px 3px, rgba(0, 0, 0, 0.51) 0px 0px 3px;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .informationDiv {
  display: none;
  position: relative;
  top: 0;
  margin: 0.5em;
  border-radius: 5px 5px;
  left: 0;
  background-color: rgba(255, 0, 0, 0.299);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv {
  user-select: none;
  position: absolute;
  bottom: 0;
  left: 0;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv > button {
  user-select: none;
}

.AmountDiv {
  display: flex;
  position: relative;
  border: 1px solid black;
  box-sizing: border-box;
  width: fit-content;
  padding: 0.2em;
}

.AmountDiv > button {
  width: 33%;
  position: relative;
  box-sizing: border-box;
  border-radius: 0px 0px;
}

.AmountDiv > button > span {
  font-size: 1em;
}

.AmountDiv > div {
  position: relative;
  width: 2em;
  margin: 0;
  background-color: transparent;
  padding: 0;
  overflow: hidden;
}

.AmountDiv > div > input {
  font-size: 1em;
  background-color: transparent;
  position: relative;
  border: none;
  outline: none;
  width: 100%;
  height: 100%;
  text-align: center;
}

.button_Default {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.button_Default > span {
  display: block;
}

.button_Default:hover {
  background-color: red;
}

.s-button_basic {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_basic > span {
  display: block;
}

.s-button_link {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_link > span {
  text-decoration: underline;
  color: blue;
  display: block;
}

.s-button_link:hover > span {
  color: rgb(34, 34, 255);
}

.DropDownInputMain {
  position: relative;
  background-color: #ffd7af;
  border-radius: 5px;
  margin: 0.5em;
  font-size: inherit;
}

.DropDownInputMain select {
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.25em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 5px 5px !important;
}

.DropDownInputMain select.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.25em;
}

.DropDownInputMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.DropDownInputMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

.header {
  position: fixed;
  width: 100%;
  height: 4rem;
  display: flex;
  flex-direction: row;
  alignItems: center;
  justifyContent: space-between !important;
  background-color: var(--bg-color);
  box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.2);
}

.header > .logoLinkBox {
  position: relative;
  margin-left: 3rem;
  min-width: 3rem;
  width: auto;
  max-width: 15rem;
  height: 4rem;
  display: flex;
  align-items: center;
  justify-content: start;
  text-decoration: none;
  cursor: pointer;
  user-select: none;
}

.header > .logoLinkBox > .logoIcon {
  position: relative;
  width: 2.5rem;
}

.header > .logoLinkBox > .logoText {
  position: relative;
  margin-left: 0.5rem;
  font-size: 1.3rem;
  font-weight: 600;
  color: #333 !important;
}

.header > .headerNavigation {
  position: absolute;
  right: 3rem;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: end;
}

.header > .headerNavigation > button {
  font-size: 1.1rem;
  margin-left: 1.5rem;
}

.header > .headerNavigation > button > span {
  position: relative;
  text-decoration: none;
  color: #a8a8a8;
}

.S_InputDiv {
  position: relative;
  background-color: #ffd7af;
  margin: 0.5em;
  height: min-content;
  display: flex;
  flex-wrap: wrap;
}

.S_InputDiv > button {
  flex: 0 1;
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}

.S_InputDiv > button > span {
  position: relative;
  font-size: 1.3em;
}

.S_InputDiv > button[state*=active] {
  background-color: #ffa228;
}

.S_InputDiv > button[state*=passive] {
  background-color: transparent;
}

.S_InputDiv > button[state*=passive]:hover {
  background-color: #FFAD5B;
}

.S_InputDiv label.switchLabel {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.S_InputDiv input {
  flex: 2 1;
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 5px 5px !important;
  outline: none;
}

.S_InputDiv input.filled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}

.S_InputDiv input[state*=passive] {
  color: red;
  background-color: #fff1de;
}

.S_InputDiv input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}

.S_InputDiv input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}

.S_InputDiv > .response {
  align-self: flex-end;
  text-align: justify;
  width: 100%;
  color: red;
}

.S_InputDiv .invalidInput {
  color: red;
  background-color: #fff1de;
}

.progressBar_Splint {
  position: absolute;
  width: 10em;
  background-color: blue;
  display: flex;
}

.progressBar_Splint > .S_progressBar_Body {
  width: 100%;
  border: 1px solid black;
}

.progressBar_Splint > .S_progressBar_Body > .S_progressBar_Inner {
  width: 100%;
  height: 100%;
  background-color: red;
}

.S-SliderMain {
  margin-top: 0.4em;
  margin-bottom: 0.4em;
}

.S-SliderMain[drawDivider=true]::after {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-bottom: 1px solid #BDBDBD;
  left: 0;
  margin-top: 0.25em;
  position: relative;
}

.S-SliderMain[drawDivider=true]::before {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-top: 1px solid #BDBDBD;
  left: 0;
  margin-bottom: 0.2em;
  position: relative;
}

.S-SliderMain > .label {
  position: relative;
  width: 100%;
  display: inline-block;
  box-sizing: border-box;
  text-align: left;
}

.S-SliderMain > .contentBody {
  height: 1em;
  display: flex;
}

.S-SliderMain > .contentBody > .sliderBody {
  order: 1;
  height: 100%;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range] {
  width: 100%;
  position: relative;
  font-size: 1em;
  height: 100%;
  display: inline-block;
  outline: none;
  -webkit-appearance: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-runnable-track {
  box-sizing: border-box;
  width: 100%;
  height: 0.5em;
  background: #ffa228;
  border: none;
  border-radius: 10px;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  border: none;
  vertical-align: baseline;
  height: 1em;
  width: 1em;
  border-radius: 10%;
  margin-top: -0.25em;
  background: white;
  box-sizing: border-box;
  border: 1px solid black;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus {
  outline: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus::-webkit-slider-runnable-track {
  background: #ffa228;
}

.S-SliderMain > .contentBody > .sliderBody > datalist {
  display: none;
  height: 20rem;
  margin-top: -23px;
  background-color: red;
  color: red;
}

.S-SliderMain > .contentBody > .sliderBody > datalist > option {
  background-color: red;
  color: red;
  height: 50px;
}

.S-SliderMain > .contentBody > .valueOutput {
  order: 2;
  height: 1em;
  width: 1.5em;
  display: inline-block;
  box-sizing: border-box;
  text-align: center;
}

.S-SliderMain > .contentBody > .valueOutput[hidden=true] {
  display: none;
}

.SlideShow_S {
  position: relative;
  height: 100%;
  overflow-y: visible !important;
  overflow-x: auto;
  box-sizing: border-box;
  white-space: nowrap;
  background-color: transparent;
}

.SlideShow_S > .inner {
  display: inline-block;
  position: relative;
  height: 100%;
  width: max-content;
  margin-left: auto;
  margin-right: auto;
  background-color: transparent;
}

.SlideShow_S > .inner > .listElement {
  position: relative;
  height: calc(100% - 0.4em);
  box-sizing: border-box;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  margin: 0.2em;
  margin-inline: 0.5em;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: end;
  align-items: end;
}

.SlideShow_S > .inner > .listElement > div {
  bottom: 0;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  aspect-ratio: 2/1;
}

.SlideShow_S > .inner > .listElement > div > span {
  font-size: 2em;
}

.subWindow_MAIN {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: all;
  user-select: none;
}

.subWindow_MAIN > .background {
  position: absolute;
  z-index: 1;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: rgba(255, 255, 255, 0.8509803922);
}

.subWindow_MAIN .content {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  position: absolute;
  z-index: 2;
  width: fit-content;
  max-height: 90vh;
  max-width: 90vw;
  overflow: hidden;
  margin: auto;
  left: 50%;
  height: max-content;
  top: 50%;
  user-select: none;
  pointer-events: all;
  transform: translate(-50%, -50%);
}

.subWindow_MAIN .content > button.button_close {
  position: absolute;
  right: 0.5em;
  z-index: 3;
}

.TableMain {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
}

.TableMain > .ListMain {
  position: relative;
  width: 100%;
  height: 100%;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;
}

.TableMain > .ListMain > .ListElement {
  margin: 0.5em;
  position: relative;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement > .ListElementHover {
  position: absolute;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 1;
  margin: 0;
  padding: 0;
  border: inherit;
  box-shadow: inherit;
  border-radius: inherit;
  background-color: rgba(64, 64, 64, 0.63);
  display: flex;
  flex-direction: column;
  transition: opacity 0.2s;
}

.horizontalLine {
  position: relative;
  margin: 0.1rem;
  left: 1%;
  width: 98%;
  opacity: 1;
  color: #BDBDBD;
  border: none;
  border-top: 0.5px solid #BDBDBD;
  background-color: #BDBDBD;
}

.PriceDiv {
  width: max-content;
  height: max-content !important;
  display: inline-block;
  overflow-wrap: anywhere;
  white-space: nowrap;
}

.s-ObjectEditor {
  width: 25rem;
  box-shadow: inset 1px 0px 0px 0px black, 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white;
}

.s-ObjectEditor > .Table2D {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table > tr {
  width: 0rem;
  box-sizing: border-box;
  border-bottom: 1px solid black;
  overflow: visible;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] {
  display: flex;
  flex-direction: column;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] > td[col*="1"] {
  margin-left: 1rem;
}

.s-ObjectEditor > .Table2D > table > tr > td {
  box-sizing: border-box;
  width: 100%;
  overflow: visible;
  padding-left: 0.25rem;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="0"] {
  width: 33%;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="2"] {
  width: min-content;
}

.s-ObjectEditor > .Table2D > table > tr > td > div {
  position: relative;
}

.s-sideBarMobile {
  position: absolute;
  height: 100%;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  width: 200px;
  transform: translateX(-100%);
  transition: transform 1s ease-in;
}

.s-sideBarMobile[s-state*=active] {
  transform: translateX(0);
}

.s-sideBarMobile > .headContainer {
  display: flex;
  padding: 0.25em;
  height: max-content;
  justify-content: center;
  align-items: center;
  box-shadow: 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white, inset 0px -1px 0px 0px gray;
}

.s-sideBarMobile > .headContainer > .headline {
  width: 100%;
  font-size: 2em;
}

.s-sideBarMobile > .headContainer > .buttonClose {
  position: relative;
  height: 100%;
}

.s-sideBarMobile > .content {
  width: 100%;
  height: 100%;
}

.Spinner1 {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}

.Spinner1[state*=passive] {
  visibility: hidden;
}

.Spinner1 > div {
  box-sizing: border-box;
  display: block;
  position: absolute;
  width: 80%;
  height: 80%;
  margin: 10%;
  border: 8px solid #fff;
  border-radius: 50%;
  animation: Spinner1 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
  border-color: #fff transparent transparent transparent;
}

.Spinner1 > div:nth-child(1) {
  animation-delay: -0.45s;
}

.Spinner1 > div:nth-child(2) {
  animation-delay: -0.3s;
}

.Spinner1 > div:nth-child(3) {
  animation-delay: -0.15s;
}

@keyframes Spinner1 {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.DropDownInputMain_S {
  position: relative;
  overflow: visible !important;
}

.DropDownInputMain_S > .S_InputDiv {
  width: 100%;
  margin: 0;
  margin-bottom: 0;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px;
}

.DropDownInputMain_S > .S_InputDiv > input {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > button {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > .response {
  display: none;
}

.DropDownInputMain_S > .DropDown_expander {
  z-index: 120;
  background-color: transparent;
  position: absolute;
  padding: 0;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.DropDownInputMain_S > .DropDown_expander[state*=active] {
  height: 10em;
}

.DropDownInputMain_S > .DropDown_expander[state*=passive] {
  height: 0em;
}

.DropDownInputMain_S > .DropDown_expander > div {
  z-index: 122;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-top: 0.2em;
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div > span {
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain {
  position: relative;
  overflow: visible !important;
}

.n_SelectInputMain > .Select_expander {
  z-index: 1;
  background-color: transparent;
  position: absolute;
  padding: 1%;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.n_SelectInputMain > .Select_expander[state*=active] {
  height: max-content;
  max-height: 10em;
}

.n_SelectInputMain > .Select_expander[state*=passive] {
  height: 0em;
  display: none;
}

.n_SelectInputMain > .Select_expander > div {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-bottom: 0.5em;
  text-align: center;
  cursor: pointer;
  transition: box-shadow 0.2s;
  transition-timing-function: ease-in;
}

.n_SelectInputMain > .Select_expander > div > span {
  text-align: center;
}

.n_SelectInputMain > .Select_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain > .Select_expander > div:hover {
  box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 3px, rgba(0, 0, 0, 0.21) 0px 0px 3px;
}

.n_inputDiv {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

.n_inputDiv > .inputBody {
  display: flex;
  flex-direction: row;
}

.n_inputDiv > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

.n_inputDiv > .inputBody > input:valid, .n_inputDiv > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

.n_inputDiv > .inputBody > input:valid + label span, .n_inputDiv > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

.n_inputDiv > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

.n_inputDiv > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.n_inputDiv > .inputBody > button {
  background-color: transparent;
}

.n_inputDiv > .response > span {
  color: red;
}

s-input {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

s-input > .inputBody {
  display: flex;
  flex-direction: row;
}

s-input > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

s-input > .inputBody > input:valid, s-input > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

s-input > .inputBody > input:valid + label span, s-input > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

s-input > .inputBody > input[state=passive] {
  border-bottom: 2px red solid;
}

s-input > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

s-input > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

s-input > .inputBody > button {
  background-color: transparent;
}

s-input > .response > span {
  color: red;
}

.S-AddressInput {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  column-gap: 0.5em;
  grid-template-areas: "fN fN fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.S-AddressInput > div, .S-AddressInput s-input {
  background-color: transparent;
  box-sizing: border-box;
}

.S-AddressInput > div > .inputBody, .S-AddressInput s-input > .inputBody {
  padding-top: 0.5em;
}

.S-AddressInput > div[identifier*=title], .S-AddressInput s-input[identifier*=title] {
  display: none;
}

.S-AddressInput > div[id*=salutation], .S-AddressInput s-input[id*=salutation] {
  display: none;
  grid-area: none;
}

.S-AddressInput > div[identifier*=firstName], .S-AddressInput s-input[identifier*=firstName] {
  grid-area: fN;
}

.S-AddressInput > div[identifier*=lastName], .S-AddressInput s-input[identifier*=lastName] {
  grid-area: lN;
}

.S-AddressInput > div[identifier*=postcode], .S-AddressInput s-input[identifier*=postcode] {
  grid-area: plz;
}

.S-AddressInput > div[identifier*=city], .S-AddressInput s-input[identifier*=city] {
  grid-area: ct;
}

.S-AddressInput > div[id*=country], .S-AddressInput s-input[id*=country] {
  grid-area: cy;
}

.S-AddressInput > div[identifier*=street], .S-AddressInput s-input[identifier*=street] {
  grid-area: st;
}

.S-AddressInput > div[identifier*=housenumber], .S-AddressInput s-input[identifier*=housenumber] {
  grid-area: hn;
}

.S-AddressInput > div[identifier*=email], .S-AddressInput s-input[identifier*=email] {
  grid-area: ema;
}

.S-AddressInput > div[identifier*=phone], .S-AddressInput s-input[identifier*=phone] {
  grid-area: ph;
}

.S-AddressInput > s-input {
  padding-bottom: -0.5em;
}

.n_RadioButton {
  position: relative;
}

.n_RadioButton > .radio_headline {
  position: relative;
}

.n_RadioButton > .inner {
  position: relative;
}

.n_RadioButton > .inner > div {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
  justify-content: start;
  align-items: center;
}

.n_RadioButton > .inner > div > .inputBody {
  position: relative;
  box-sizing: border-box;
  width: 1em;
  margin: 0.5em;
  height: 1em;
  min-width: 1em;
}

.n_RadioButton > .inner > div > .inputBody > input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span {
  box-sizing: border-box;
  background-color: #2196F3;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span:after {
  box-sizing: border-box;
  display: block;
}

.n_RadioButton > .inner > div > .inputBody > span {
  box-sizing: content-box;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background-color: #eee;
  border-radius: 50%;
}

.n_RadioButton > .inner > div > .inputBody > span:after {
  box-sizing: border-box;
  content: "";
  left: 0;
  top: 0;
  position: absolute;
  display: none;
  margin: 25%;
  width: 50%;
  height: 50%;
  border-radius: 50%;
  background: white;
}

.n_RadioButton > .inner > div > .inputBody:hover input ~ span {
  background-color: #ccc;
}

.toggleButton {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  display: flex;
  justify-content: space-around;
  width: max-content;
  overflow: hidden;
}

.toggleButton > button {
  width: 100%;
  padding: 0.5rem;
  background-color: transparent;
  border: none;
  cursor: pointer;
}

.toggleButton > button:hover {
  background-color: #FFAD5B;
}

.toggleButton > button[state*=active] {
  background-color: #ffa228;
}

.s-ToggleButton_2 {
  width: max-content;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
}

.s-ToggleButton_2 > button {
  border: none;
  border-radius: 0;
  outline: none;
  padding: 0em;
  min-height: 1rem;
  height: 100%;
  width: 100%;
  margin: 0.25em;
}

.s-ToggleButton_2 > button.btFALSE {
  background-color: red;
}

.s-ToggleButton_2 > button.btFALSE[state*=passive] {
  background-color: rgba(255, 0, 0, 0.3);
}

.s-ToggleButton_2 > button.btTRUE {
  background-color: green;
}

.s-ToggleButton_2 > button.btTRUE[state*=passive] {
  background-color: rgba(0, 128, 0, 0.3);
}

.S_SVGElement_BODY {
  position: relative;
  background-color: transparent;
}

.S_SVGElement_BODY > svg {
  position: relative;
}

.addressMenuNewMain > [id*=menuElement] > div {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  grid-template-areas: "salutation salutation fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.addressMenuNewMain > [id*=menuElement] > div > div {
  background-color: transparent;
  box-sizing: border-box;
}

.addressMenuNewMain > [id*=menuElement] > div > div.S_InputDiv {
  padding-bottom: -0.5em;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=title] {
  display: none;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=salutation] {
  grid-area: salutation;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=firstName] {
  grid-area: fN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=lastName] {
  grid-area: lN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=postcode] {
  grid-area: plz;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=city] {
  grid-area: ct;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=country] {
  grid-area: cy;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=street] {
  grid-area: st;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=housenumber] {
  grid-area: hn;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=email] {
  grid-area: ema;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=phone] {
  grid-area: ph;
}

/* Media Queries */
/* ------- */
/* Desktop */
/* ------- */
.CursorMain {
  display: all;
  backface-visibility: hidden;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
  width: 100px;
  height: 100px;
  background-color: red;
  z-index: 999;
}

.customCursor {
  position: absolute;
  box-sizing: content-box;
  will-change: transform;
  margin: 0;
  padding: 0;
  top: 0;
  left: 0;
  pointer-events: none;
  user-select: none;
  display: auto;
  z-index: 1000;
}
.customCursor.red {
  background-color: red;
}
.customCursor.orange {
  color: orange !important;
}

.button_Default {
  user-select: none;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 0px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  box-sizing: content-box;
  margin: 0.5em;
  overflow: hidden;
}
.button_Default > span {
  box-sizing: border-box;
}
.button_Default[state*=active] {
  background-color: #FFAD5B;
}
.button_Default[state*=passive] {
  background-color: #fff1de;
}
.button_Default:hover {
  background-color: #ffa228;
}

.button_General {
  user-select: none;
  background-color: transparent;
  border: none;
  color: #000000;
  display: inline-block;
  font-size: 1em;
  cursor: pointer;
  border-radius: 0px;
}
.button_General > span {
  display: block;
  position: relative;
  text-align: center;
}
.button_General > span:not(.material-symbols-outlined) {
  text-decoration: underline;
}
.button_General > .dropdown {
  position: absolute;
  left: 100%;
  margin-left: 10%;
  top: 0;
  width: fit-content;
  height: max-content;
  overflow: hidden;
}
.button_General:hover > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonAnimation;
}
.button_General:hover > span.material-symbols-outlined {
  color: #ffa228 !important;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonIconAnimation;
}
.button_General:hover > span.material-symbols-outlined.rotate90 {
  animation-name: buttonIconAnimation90;
}
.button_General:hover:after > span {
  color: white;
}
.button_General:hover:after > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-out;
  animation-fill-mode: backwards;
  animation-direction: reverse;
  animation-name: buttonAnimationB;
}
.button_General:hover:after > span.material-symbols-outlined {
  color: #ffa228 !important;
}
.button_General.simple {
  background-color: transparent;
  border: none;
  text-decoration: underline;
}

/* width */
::-webkit-scrollbar {
  margin-inline: 2px;
  width: 5px;
}

/* Track */
::-webkit-scrollbar-track {
  width: 2px;
  transform: scale(2);
  background: transparent;
}

/* Handle */
::-webkit-scrollbar-thumb {
  width: 5px;
  transform: scale(2);
  background: rgb(189, 189, 189);
  border-radius: 0px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: gray;
}

body {
  background-color: #fff8f1;
}
body * {
  font-family: "Arial";
  margin: 0;
  padding: 0;
}

.Slider_main > .Slider_inputBody input[type=range] {
  appearance: none;
  background: transparent;
  width: 100%;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-thumb {
  position: relative;
  appearance: none;
  width: 9px;
  height: 20px;
  background-color: #FFAD5B;
  transform: translateY(-40%);
  border-radius: 2px 2px;
  z-index: 20;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-runnable-track {
  position: relative;
  cursor: pointer;
  border-radius: 2px 2px;
  height: 20%;
  z-index: 19;
  /* Hides the slider so custom styles can be added */
  background-color: #000000;
}
.Slider_main > .Slider_inputBody > hr {
  position: absolute;
  margin-left: calc((100% - (2.1em + 6px)) / var(--size) * var(--index));
  z-index: 1;
  left: 5px;
  background-color: darkgray;
  width: 0.5px;
  top: 25%;
  height: 50%;
  margin-top: 0;
}
.Slider_main > .Slider_inputBody > hr:nth-child(even) {
  top: 12.5%;
  height: 75%;
}

body {
  position: relative;
  width: 100vw;
  overflow: hidden;
  box-sizing: content-box;
  top: 6vh;
  height: 94vh;
}
@media only screen and (max-width: 980px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 981px) and (max-width: 1199px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 1200px) {
  body {
    font-size: 1em;
  }
}

.Table {
  border: 1px solid black;
  position: relative;
  width: 50%;
}
.Table > div {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}
.Table > div > label {
  position: relative;
  overflow: hidden;
}
.Table > div > span {
  position: relative;
  overflow: hidden;
}

.bold {
  font-weight: bold;
}

.LoadBar {
  z-index: 3;
  border-radius: 0px;
  position: relative !important;
  background-color: red !important;
  width: 100% !important;
  height: 2em !important;
  overflow: hidden;
}
.LoadBar .LoadBar-progress {
  position: relative;
  height: 100%;
  background-color: green !important;
}

.LineDiv {
  position: relative;
  margin: 0;
  padding: 0;
  flex: auto;
  overflow: hidden;
  height: 100%;
  border: none;
}
.LineDiv hr {
  display: block;
  position: relative;
  color: orange;
  background-color: orange;
  opacity: 1;
  width: 0%;
  margin: 0;
  top: 50%;
  visibility: visible;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;
}

@keyframes NavBarLine {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}
.Text-primary {
  color: #000000;
}

.Text-secondary {
  color: #BCBCBC;
}

.Text-small {
  font-size: 0.75em;
}

.SliderDivMain {
  border: 1px solid black;
}

.TextInputDiv {
  position: relative;
  background-color: #fff8f1;
  border-radius: 0px;
  margin: 0.5em;
  margin-bottom: 1.5em;
  font-size: inherit;
  height: 10em;
}
.TextInputDiv textarea {
  position: relative;
  outline: 0;
  resize: none;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 0px !important;
}
.TextInputDiv textarea.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 1.1em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.TextInputDiv textarea::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.TextInputDiv label {
  user-select: none;
  position: absolute;
  z-index: 1;
  width: 100%;
  background-color: #fff8f1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.11em;
  padding-top: 0.39em;
  padding-bottom: 0.13em;
  border-top-right-radius: 5px 5px;
}
.TextInputDiv .horizontalLine {
  position: absolute;
  z-index: 2;
  width: 100%;
  top: 0.89em;
  height: 0px;
  left: 0;
  margin-block: 0px;
  margin-inline: 0.5em;
}

.InputDivMain {
  position: relative;
  background-color: #fff8f1;
  margin: 0.5em;
  height: min-content;
  display: inline-flex;
}
.InputDivMain button {
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}
.InputDivMain button > span {
  position: relative;
  font-size: 1.3em;
}
.InputDivMain button[state*=active] {
  background-color: #ffa228;
}
.InputDivMain button[state*=passive] {
  background-color: transparent;
}
.InputDivMain button[state*=passive]:hover {
  background-color: #FFAD5B;
}
.InputDivMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}
.InputDivMain input {
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 0px !important;
  outline: none;
}
.InputDivMain input.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.InputDivMain input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}
.InputDivMain input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.InputDivMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

:root {
  --main-font: "Montserrat";
  --primary: "";
  --primary-text: #333;
}

* {
  margin: 0;
  padding: 0;
  font-family: var(--main-font);
}

.tooltip_S[state*=active]:after, .tooltip_S[state*=active]:before {
  display: none;
}

.tooltip_S[data-tooltip-direction=right] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=right]:after {
  pointer-events: none;
  content: attr(data-tooltip-value);
  position: absolute;
  z-index: 10;
  top: 50%;
  transform: translateY(-50%);
  left: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=right]:before {
  pointer-events: none;
  content: "";
  position: absolute;
  z-index: 10;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-right: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=right]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  left: 110%;
}

.tooltip_S[data-tooltip-direction=right]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  left: 103%;
}

.tooltip_S[data-tooltip-direction=right]:hover:after, .tooltip_S[data-tooltip-direction=right]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=top] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=top]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  bottom: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=top]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  bottom: 130%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after {
  bottom: 120%;
}

.tooltip_S[data-tooltip-direction=top]:hover:before {
  bottom: 103%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after, .tooltip_S[data-tooltip-direction=top]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=left] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=left]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=left]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-left: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  right: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=left]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  right: 110%;
}

.tooltip_S[data-tooltip-direction=left]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  right: 103%;
}

.tooltip_S[data-tooltip-direction=left]:hover:after, .tooltip_S[data-tooltip-direction=left]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=bottom] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=bottom]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=bottom]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-bottom: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  top: 130%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after {
  top: 120%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:before {
  top: 103%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after, .tooltip_S[data-tooltip-direction=bottom]:hover:before {
  opacity: 1;
}

.AdaptiveTableMain {
  position: relative;
  display: block;
  width: 98%;
  height: 100%;
  overflow: hidden;
  overflow-y: auto;
}

.AdaptiveTableMain > .ListMain {
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

.AdaptiveTableMain > .ListMain > .column {
  position: relative;
  width: 90%;
  height: fit-content;
  flex-direction: column;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement {
  user-select: none;
  padding: 0.5em;
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: inline-block;
  height: fit-content;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > img {
  user-select: none;
  box-sizing: border-box;
  overflow: hidden;
  display: block;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  position: relative;
  width: 100%;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv {
  user-select: none;
  border-radius: 5px 5px;
  position: absolute;
  top: 0;
  margin: 0.5em;
  left: 0;
  width: calc(100% - 1em);
  height: calc(100% - 1em);
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
  background-color: rgba(94, 94, 94, 0.471);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv:hover {
  opacity: 1;
  box-shadow: rgba(0, 0, 0, 0.55) 0px 0px 3px, rgba(0, 0, 0, 0.51) 0px 0px 3px;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .informationDiv {
  display: none;
  position: relative;
  top: 0;
  margin: 0.5em;
  border-radius: 5px 5px;
  left: 0;
  background-color: rgba(255, 0, 0, 0.299);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv {
  user-select: none;
  position: absolute;
  bottom: 0;
  left: 0;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv > button {
  user-select: none;
}

.AmountDiv {
  display: flex;
  position: relative;
  border: 1px solid black;
  box-sizing: border-box;
  width: fit-content;
  padding: 0.2em;
}

.AmountDiv > button {
  width: 33%;
  position: relative;
  box-sizing: border-box;
  border-radius: 0px 0px;
}

.AmountDiv > button > span {
  font-size: 1em;
}

.AmountDiv > div {
  position: relative;
  width: 2em;
  margin: 0;
  background-color: transparent;
  padding: 0;
  overflow: hidden;
}

.AmountDiv > div > input {
  font-size: 1em;
  background-color: transparent;
  position: relative;
  border: none;
  outline: none;
  width: 100%;
  height: 100%;
  text-align: center;
}

.button_Default {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.button_Default > span {
  display: block;
}

.button_Default:hover {
  background-color: red;
}

.s-button_basic {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_basic > span {
  display: block;
}

.s-button_link {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_link > span {
  text-decoration: underline;
  color: blue;
  display: block;
}

.s-button_link:hover > span {
  color: rgb(34, 34, 255);
}

.DropDownInputMain {
  position: relative;
  background-color: #ffd7af;
  border-radius: 5px;
  margin: 0.5em;
  font-size: inherit;
}

.DropDownInputMain select {
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.25em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 5px 5px !important;
}

.DropDownInputMain select.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.25em;
}

.DropDownInputMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.DropDownInputMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

.header {
  position: fixed;
  width: 100%;
  height: 4rem;
  display: flex;
  flex-direction: row;
  alignItems: center;
  justifyContent: space-between !important;
  background-color: var(--bg-color);
  box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.2);
}

.header > .logoLinkBox {
  position: relative;
  margin-left: 3rem;
  min-width: 3rem;
  width: auto;
  max-width: 15rem;
  height: 4rem;
  display: flex;
  align-items: center;
  justify-content: start;
  text-decoration: none;
  cursor: pointer;
  user-select: none;
}

.header > .logoLinkBox > .logoIcon {
  position: relative;
  width: 2.5rem;
}

.header > .logoLinkBox > .logoText {
  position: relative;
  margin-left: 0.5rem;
  font-size: 1.3rem;
  font-weight: 600;
  color: #333 !important;
}

.header > .headerNavigation {
  position: absolute;
  right: 3rem;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: end;
}

.header > .headerNavigation > button {
  font-size: 1.1rem;
  margin-left: 1.5rem;
}

.header > .headerNavigation > button > span {
  position: relative;
  text-decoration: none;
  color: #a8a8a8;
}

.S_InputDiv {
  position: relative;
  background-color: #ffd7af;
  margin: 0.5em;
  height: min-content;
  display: flex;
  flex-wrap: wrap;
}

.S_InputDiv > button {
  flex: 0 1;
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}

.S_InputDiv > button > span {
  position: relative;
  font-size: 1.3em;
}

.S_InputDiv > button[state*=active] {
  background-color: #ffa228;
}

.S_InputDiv > button[state*=passive] {
  background-color: transparent;
}

.S_InputDiv > button[state*=passive]:hover {
  background-color: #FFAD5B;
}

.S_InputDiv label.switchLabel {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.S_InputDiv input {
  flex: 2 1;
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 5px 5px !important;
  outline: none;
}

.S_InputDiv input.filled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}

.S_InputDiv input[state*=passive] {
  color: red;
  background-color: #fff1de;
}

.S_InputDiv input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}

.S_InputDiv input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}

.S_InputDiv > .response {
  align-self: flex-end;
  text-align: justify;
  width: 100%;
  color: red;
}

.S_InputDiv .invalidInput {
  color: red;
  background-color: #fff1de;
}

.progressBar_Splint {
  position: absolute;
  width: 10em;
  background-color: blue;
  display: flex;
}

.progressBar_Splint > .S_progressBar_Body {
  width: 100%;
  border: 1px solid black;
}

.progressBar_Splint > .S_progressBar_Body > .S_progressBar_Inner {
  width: 100%;
  height: 100%;
  background-color: red;
}

.S-SliderMain {
  margin-top: 0.4em;
  margin-bottom: 0.4em;
}

.S-SliderMain[drawDivider=true]::after {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-bottom: 1px solid #BDBDBD;
  left: 0;
  margin-top: 0.25em;
  position: relative;
}

.S-SliderMain[drawDivider=true]::before {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-top: 1px solid #BDBDBD;
  left: 0;
  margin-bottom: 0.2em;
  position: relative;
}

.S-SliderMain > .label {
  position: relative;
  width: 100%;
  display: inline-block;
  box-sizing: border-box;
  text-align: left;
}

.S-SliderMain > .contentBody {
  height: 1em;
  display: flex;
}

.S-SliderMain > .contentBody > .sliderBody {
  order: 1;
  height: 100%;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range] {
  width: 100%;
  position: relative;
  font-size: 1em;
  height: 100%;
  display: inline-block;
  outline: none;
  -webkit-appearance: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-runnable-track {
  box-sizing: border-box;
  width: 100%;
  height: 0.5em;
  background: #ffa228;
  border: none;
  border-radius: 10px;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  border: none;
  vertical-align: baseline;
  height: 1em;
  width: 1em;
  border-radius: 10%;
  margin-top: -0.25em;
  background: white;
  box-sizing: border-box;
  border: 1px solid black;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus {
  outline: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus::-webkit-slider-runnable-track {
  background: #ffa228;
}

.S-SliderMain > .contentBody > .sliderBody > datalist {
  display: none;
  height: 20rem;
  margin-top: -23px;
  background-color: red;
  color: red;
}

.S-SliderMain > .contentBody > .sliderBody > datalist > option {
  background-color: red;
  color: red;
  height: 50px;
}

.S-SliderMain > .contentBody > .valueOutput {
  order: 2;
  height: 1em;
  width: 1.5em;
  display: inline-block;
  box-sizing: border-box;
  text-align: center;
}

.S-SliderMain > .contentBody > .valueOutput[hidden=true] {
  display: none;
}

.SlideShow_S {
  position: relative;
  height: 100%;
  overflow-y: visible !important;
  overflow-x: auto;
  box-sizing: border-box;
  white-space: nowrap;
  background-color: transparent;
}

.SlideShow_S > .inner {
  display: inline-block;
  position: relative;
  height: 100%;
  width: max-content;
  margin-left: auto;
  margin-right: auto;
  background-color: transparent;
}

.SlideShow_S > .inner > .listElement {
  position: relative;
  height: calc(100% - 0.4em);
  box-sizing: border-box;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  margin: 0.2em;
  margin-inline: 0.5em;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: end;
  align-items: end;
}

.SlideShow_S > .inner > .listElement > div {
  bottom: 0;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  aspect-ratio: 2/1;
}

.SlideShow_S > .inner > .listElement > div > span {
  font-size: 2em;
}

.subWindow_MAIN {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: all;
  user-select: none;
}

.subWindow_MAIN > .background {
  position: absolute;
  z-index: 1;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: rgba(255, 255, 255, 0.8509803922);
}

.subWindow_MAIN .content {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  position: absolute;
  z-index: 2;
  width: fit-content;
  max-height: 90vh;
  max-width: 90vw;
  overflow: hidden;
  margin: auto;
  left: 50%;
  height: max-content;
  top: 50%;
  user-select: none;
  pointer-events: all;
  transform: translate(-50%, -50%);
}

.subWindow_MAIN .content > button.button_close {
  position: absolute;
  right: 0.5em;
  z-index: 3;
}

.TableMain {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
}

.TableMain > .ListMain {
  position: relative;
  width: 100%;
  height: 100%;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;
}

.TableMain > .ListMain > .ListElement {
  margin: 0.5em;
  position: relative;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement > .ListElementHover {
  position: absolute;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 1;
  margin: 0;
  padding: 0;
  border: inherit;
  box-shadow: inherit;
  border-radius: inherit;
  background-color: rgba(64, 64, 64, 0.63);
  display: flex;
  flex-direction: column;
  transition: opacity 0.2s;
}

.horizontalLine {
  position: relative;
  margin: 0.1rem;
  left: 1%;
  width: 98%;
  opacity: 1;
  color: #BDBDBD;
  border: none;
  border-top: 0.5px solid #BDBDBD;
  background-color: #BDBDBD;
}

.PriceDiv {
  width: max-content;
  height: max-content !important;
  display: inline-block;
  overflow-wrap: anywhere;
  white-space: nowrap;
}

.s-ObjectEditor {
  width: 25rem;
  box-shadow: inset 1px 0px 0px 0px black, 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white;
}

.s-ObjectEditor > .Table2D {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table > tr {
  width: 0rem;
  box-sizing: border-box;
  border-bottom: 1px solid black;
  overflow: visible;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] {
  display: flex;
  flex-direction: column;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] > td[col*="1"] {
  margin-left: 1rem;
}

.s-ObjectEditor > .Table2D > table > tr > td {
  box-sizing: border-box;
  width: 100%;
  overflow: visible;
  padding-left: 0.25rem;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="0"] {
  width: 33%;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="2"] {
  width: min-content;
}

.s-ObjectEditor > .Table2D > table > tr > td > div {
  position: relative;
}

.s-sideBarMobile {
  position: absolute;
  height: 100%;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  width: 200px;
  transform: translateX(-100%);
  transition: transform 1s ease-in;
}

.s-sideBarMobile[s-state*=active] {
  transform: translateX(0);
}

.s-sideBarMobile > .headContainer {
  display: flex;
  padding: 0.25em;
  height: max-content;
  justify-content: center;
  align-items: center;
  box-shadow: 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white, inset 0px -1px 0px 0px gray;
}

.s-sideBarMobile > .headContainer > .headline {
  width: 100%;
  font-size: 2em;
}

.s-sideBarMobile > .headContainer > .buttonClose {
  position: relative;
  height: 100%;
}

.s-sideBarMobile > .content {
  width: 100%;
  height: 100%;
}

.Spinner1 {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}

.Spinner1[state*=passive] {
  visibility: hidden;
}

.Spinner1 > div {
  box-sizing: border-box;
  display: block;
  position: absolute;
  width: 80%;
  height: 80%;
  margin: 10%;
  border: 8px solid #fff;
  border-radius: 50%;
  animation: Spinner1 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
  border-color: #fff transparent transparent transparent;
}

.Spinner1 > div:nth-child(1) {
  animation-delay: -0.45s;
}

.Spinner1 > div:nth-child(2) {
  animation-delay: -0.3s;
}

.Spinner1 > div:nth-child(3) {
  animation-delay: -0.15s;
}

@keyframes Spinner1 {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.DropDownInputMain_S {
  position: relative;
  overflow: visible !important;
}

.DropDownInputMain_S > .S_InputDiv {
  width: 100%;
  margin: 0;
  margin-bottom: 0;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px;
}

.DropDownInputMain_S > .S_InputDiv > input {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > button {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > .response {
  display: none;
}

.DropDownInputMain_S > .DropDown_expander {
  z-index: 120;
  background-color: transparent;
  position: absolute;
  padding: 0;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.DropDownInputMain_S > .DropDown_expander[state*=active] {
  height: 10em;
}

.DropDownInputMain_S > .DropDown_expander[state*=passive] {
  height: 0em;
}

.DropDownInputMain_S > .DropDown_expander > div {
  z-index: 122;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-top: 0.2em;
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div > span {
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain {
  position: relative;
  overflow: visible !important;
}

.n_SelectInputMain > .Select_expander {
  z-index: 1;
  background-color: transparent;
  position: absolute;
  padding: 1%;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.n_SelectInputMain > .Select_expander[state*=active] {
  height: max-content;
  max-height: 10em;
}

.n_SelectInputMain > .Select_expander[state*=passive] {
  height: 0em;
  display: none;
}

.n_SelectInputMain > .Select_expander > div {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-bottom: 0.5em;
  text-align: center;
  cursor: pointer;
  transition: box-shadow 0.2s;
  transition-timing-function: ease-in;
}

.n_SelectInputMain > .Select_expander > div > span {
  text-align: center;
}

.n_SelectInputMain > .Select_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain > .Select_expander > div:hover {
  box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 3px, rgba(0, 0, 0, 0.21) 0px 0px 3px;
}

.n_inputDiv {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

.n_inputDiv > .inputBody {
  display: flex;
  flex-direction: row;
}

.n_inputDiv > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

.n_inputDiv > .inputBody > input:valid, .n_inputDiv > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

.n_inputDiv > .inputBody > input:valid + label span, .n_inputDiv > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

.n_inputDiv > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

.n_inputDiv > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.n_inputDiv > .inputBody > button {
  background-color: transparent;
}

.n_inputDiv > .response > span {
  color: red;
}

s-input {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

s-input > .inputBody {
  display: flex;
  flex-direction: row;
}

s-input > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

s-input > .inputBody > input:valid, s-input > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

s-input > .inputBody > input:valid + label span, s-input > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

s-input > .inputBody > input[state=passive] {
  border-bottom: 2px red solid;
}

s-input > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

s-input > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

s-input > .inputBody > button {
  background-color: transparent;
}

s-input > .response > span {
  color: red;
}

.S-AddressInput {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  column-gap: 0.5em;
  grid-template-areas: "fN fN fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.S-AddressInput > div, .S-AddressInput s-input {
  background-color: transparent;
  box-sizing: border-box;
}

.S-AddressInput > div > .inputBody, .S-AddressInput s-input > .inputBody {
  padding-top: 0.5em;
}

.S-AddressInput > div[identifier*=title], .S-AddressInput s-input[identifier*=title] {
  display: none;
}

.S-AddressInput > div[id*=salutation], .S-AddressInput s-input[id*=salutation] {
  display: none;
  grid-area: none;
}

.S-AddressInput > div[identifier*=firstName], .S-AddressInput s-input[identifier*=firstName] {
  grid-area: fN;
}

.S-AddressInput > div[identifier*=lastName], .S-AddressInput s-input[identifier*=lastName] {
  grid-area: lN;
}

.S-AddressInput > div[identifier*=postcode], .S-AddressInput s-input[identifier*=postcode] {
  grid-area: plz;
}

.S-AddressInput > div[identifier*=city], .S-AddressInput s-input[identifier*=city] {
  grid-area: ct;
}

.S-AddressInput > div[id*=country], .S-AddressInput s-input[id*=country] {
  grid-area: cy;
}

.S-AddressInput > div[identifier*=street], .S-AddressInput s-input[identifier*=street] {
  grid-area: st;
}

.S-AddressInput > div[identifier*=housenumber], .S-AddressInput s-input[identifier*=housenumber] {
  grid-area: hn;
}

.S-AddressInput > div[identifier*=email], .S-AddressInput s-input[identifier*=email] {
  grid-area: ema;
}

.S-AddressInput > div[identifier*=phone], .S-AddressInput s-input[identifier*=phone] {
  grid-area: ph;
}

.S-AddressInput > s-input {
  padding-bottom: -0.5em;
}

.n_RadioButton {
  position: relative;
}

.n_RadioButton > .radio_headline {
  position: relative;
}

.n_RadioButton > .inner {
  position: relative;
}

.n_RadioButton > .inner > div {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
  justify-content: start;
  align-items: center;
}

.n_RadioButton > .inner > div > .inputBody {
  position: relative;
  box-sizing: border-box;
  width: 1em;
  margin: 0.5em;
  height: 1em;
  min-width: 1em;
}

.n_RadioButton > .inner > div > .inputBody > input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span {
  box-sizing: border-box;
  background-color: #2196F3;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span:after {
  box-sizing: border-box;
  display: block;
}

.n_RadioButton > .inner > div > .inputBody > span {
  box-sizing: content-box;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background-color: #eee;
  border-radius: 50%;
}

.n_RadioButton > .inner > div > .inputBody > span:after {
  box-sizing: border-box;
  content: "";
  left: 0;
  top: 0;
  position: absolute;
  display: none;
  margin: 25%;
  width: 50%;
  height: 50%;
  border-radius: 50%;
  background: white;
}

.n_RadioButton > .inner > div > .inputBody:hover input ~ span {
  background-color: #ccc;
}

.toggleButton {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  display: flex;
  justify-content: space-around;
  width: max-content;
  overflow: hidden;
}

.toggleButton > button {
  width: 100%;
  padding: 0.5rem;
  background-color: transparent;
  border: none;
  cursor: pointer;
}

.toggleButton > button:hover {
  background-color: #FFAD5B;
}

.toggleButton > button[state*=active] {
  background-color: #ffa228;
}

.s-ToggleButton_2 {
  width: max-content;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
}

.s-ToggleButton_2 > button {
  border: none;
  border-radius: 0;
  outline: none;
  padding: 0em;
  min-height: 1rem;
  height: 100%;
  width: 100%;
  margin: 0.25em;
}

.s-ToggleButton_2 > button.btFALSE {
  background-color: red;
}

.s-ToggleButton_2 > button.btFALSE[state*=passive] {
  background-color: rgba(255, 0, 0, 0.3);
}

.s-ToggleButton_2 > button.btTRUE {
  background-color: green;
}

.s-ToggleButton_2 > button.btTRUE[state*=passive] {
  background-color: rgba(0, 128, 0, 0.3);
}

.S_SVGElement_BODY {
  position: relative;
  background-color: transparent;
}

.S_SVGElement_BODY > svg {
  position: relative;
}

.addressMenuNewMain > [id*=menuElement] > div {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  grid-template-areas: "salutation salutation fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.addressMenuNewMain > [id*=menuElement] > div > div {
  background-color: transparent;
  box-sizing: border-box;
}

.addressMenuNewMain > [id*=menuElement] > div > div.S_InputDiv {
  padding-bottom: -0.5em;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=title] {
  display: none;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=salutation] {
  grid-area: salutation;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=firstName] {
  grid-area: fN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=lastName] {
  grid-area: lN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=postcode] {
  grid-area: plz;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=city] {
  grid-area: ct;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=country] {
  grid-area: cy;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=street] {
  grid-area: st;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=housenumber] {
  grid-area: hn;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=email] {
  grid-area: ema;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=phone] {
  grid-area: ph;
}

/* Media Queries */
/* ------- */
/* Desktop */
/* ------- */
.CursorMain {
  display: all;
  backface-visibility: hidden;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
  width: 100px;
  height: 100px;
  background-color: red;
  z-index: 999;
}

.customCursor {
  position: absolute;
  box-sizing: content-box;
  will-change: transform;
  margin: 0;
  padding: 0;
  top: 0;
  left: 0;
  pointer-events: none;
  user-select: none;
  display: auto;
  z-index: 1000;
}
.customCursor.red {
  background-color: red;
}
.customCursor.orange {
  color: orange !important;
}

.button_Default {
  user-select: none;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 0px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  box-sizing: content-box;
  margin: 0.5em;
  overflow: hidden;
}
.button_Default > span {
  box-sizing: border-box;
}
.button_Default[state*=active] {
  background-color: #FFAD5B;
}
.button_Default[state*=passive] {
  background-color: #fff1de;
}
.button_Default:hover {
  background-color: #ffa228;
}

.button_General {
  user-select: none;
  background-color: transparent;
  border: none;
  color: #000000;
  display: inline-block;
  font-size: 1em;
  cursor: pointer;
  border-radius: 0px;
}
.button_General > span {
  display: block;
  position: relative;
  text-align: center;
}
.button_General > span:not(.material-symbols-outlined) {
  text-decoration: underline;
}
.button_General > .dropdown {
  position: absolute;
  left: 100%;
  margin-left: 10%;
  top: 0;
  width: fit-content;
  height: max-content;
  overflow: hidden;
}
.button_General:hover > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonAnimation;
}
.button_General:hover > span.material-symbols-outlined {
  color: #ffa228 !important;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonIconAnimation;
}
.button_General:hover > span.material-symbols-outlined.rotate90 {
  animation-name: buttonIconAnimation90;
}
.button_General:hover:after > span {
  color: white;
}
.button_General:hover:after > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-out;
  animation-fill-mode: backwards;
  animation-direction: reverse;
  animation-name: buttonAnimationB;
}
.button_General:hover:after > span.material-symbols-outlined {
  color: #ffa228 !important;
}
.button_General.simple {
  background-color: transparent;
  border: none;
  text-decoration: underline;
}

/* width */
::-webkit-scrollbar {
  margin-inline: 2px;
  width: 5px;
}

/* Track */
::-webkit-scrollbar-track {
  width: 2px;
  transform: scale(2);
  background: transparent;
}

/* Handle */
::-webkit-scrollbar-thumb {
  width: 5px;
  transform: scale(2);
  background: rgb(189, 189, 189);
  border-radius: 0px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: gray;
}

body {
  background-color: #fff8f1;
}
body * {
  font-family: "Arial";
  margin: 0;
  padding: 0;
}

.Slider_main > .Slider_inputBody input[type=range] {
  appearance: none;
  background: transparent;
  width: 100%;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-thumb {
  position: relative;
  appearance: none;
  width: 9px;
  height: 20px;
  background-color: #FFAD5B;
  transform: translateY(-40%);
  border-radius: 2px 2px;
  z-index: 20;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-runnable-track {
  position: relative;
  cursor: pointer;
  border-radius: 2px 2px;
  height: 20%;
  z-index: 19;
  /* Hides the slider so custom styles can be added */
  background-color: #000000;
}
.Slider_main > .Slider_inputBody > hr {
  position: absolute;
  margin-left: calc((100% - (2.1em + 6px)) / var(--size) * var(--index));
  z-index: 1;
  left: 5px;
  background-color: darkgray;
  width: 0.5px;
  top: 25%;
  height: 50%;
  margin-top: 0;
}
.Slider_main > .Slider_inputBody > hr:nth-child(even) {
  top: 12.5%;
  height: 75%;
}

body {
  position: relative;
  width: 100vw;
  overflow: hidden;
  box-sizing: content-box;
  top: 6vh;
  height: 94vh;
}
@media only screen and (max-width: 980px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 981px) and (max-width: 1199px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 1200px) {
  body {
    font-size: 1em;
  }
}

.Table {
  border: 1px solid black;
  position: relative;
  width: 50%;
}
.Table > div {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}
.Table > div > label {
  position: relative;
  overflow: hidden;
}
.Table > div > span {
  position: relative;
  overflow: hidden;
}

.bold {
  font-weight: bold;
}

.LoadBar {
  z-index: 3;
  border-radius: 0px;
  position: relative !important;
  background-color: red !important;
  width: 100% !important;
  height: 2em !important;
  overflow: hidden;
}
.LoadBar .LoadBar-progress {
  position: relative;
  height: 100%;
  background-color: green !important;
}

.LineDiv {
  position: relative;
  margin: 0;
  padding: 0;
  flex: auto;
  overflow: hidden;
  height: 100%;
  border: none;
}
.LineDiv hr {
  display: block;
  position: relative;
  color: orange;
  background-color: orange;
  opacity: 1;
  width: 0%;
  margin: 0;
  top: 50%;
  visibility: visible;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;
}

@keyframes NavBarLine {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}
.Text-primary {
  color: #000000;
}

.Text-secondary {
  color: #BCBCBC;
}

.Text-small {
  font-size: 0.75em;
}

.SliderDivMain {
  border: 1px solid black;
}

.TextInputDiv {
  position: relative;
  background-color: #fff8f1;
  border-radius: 0px;
  margin: 0.5em;
  margin-bottom: 1.5em;
  font-size: inherit;
  height: 10em;
}
.TextInputDiv textarea {
  position: relative;
  outline: 0;
  resize: none;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 0px !important;
}
.TextInputDiv textarea.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 1.1em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.TextInputDiv textarea::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.TextInputDiv label {
  user-select: none;
  position: absolute;
  z-index: 1;
  width: 100%;
  background-color: #fff8f1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.11em;
  padding-top: 0.39em;
  padding-bottom: 0.13em;
  border-top-right-radius: 5px 5px;
}
.TextInputDiv .horizontalLine {
  position: absolute;
  z-index: 2;
  width: 100%;
  top: 0.89em;
  height: 0px;
  left: 0;
  margin-block: 0px;
  margin-inline: 0.5em;
}

.InputDivMain {
  position: relative;
  background-color: #fff8f1;
  margin: 0.5em;
  height: min-content;
  display: inline-flex;
}
.InputDivMain button {
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}
.InputDivMain button > span {
  position: relative;
  font-size: 1.3em;
}
.InputDivMain button[state*=active] {
  background-color: #ffa228;
}
.InputDivMain button[state*=passive] {
  background-color: transparent;
}
.InputDivMain button[state*=passive]:hover {
  background-color: #FFAD5B;
}
.InputDivMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}
.InputDivMain input {
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 0px !important;
  outline: none;
}
.InputDivMain input.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.InputDivMain input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}
.InputDivMain input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.InputDivMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

@keyframes buttonAnimation {
  from {
    transform: translateY(0em);
    text-underline-offset: 0em;
  }
  to {
    transform: translateY(-0.1em);
    text-underline-offset: 0.2em;
  }
}
@keyframes buttonAnimationB {
  to {
    transform: translateY(0em);
    text-underline-offset: 0em;
  }
  from {
    transform: translateY(-0.1em);
    text-underline-offset: 0.2em;
  }
}
@keyframes buttonIconAnimation {}
@keyframes buttonIconAnimation90 {
  from {
    transform: translateY(0em) rotate(90deg);
  }
  to {
    transform: translateY(-0.1em) rotate(90deg);
  }
}
.RadioButton {
  border: 1px solid black;
  position: relative;
}
.RadioButton > div {
  width: 100%;
  height: 100%;
  position: relative;
  align-items: center;
  display: flex;
  flex-direction: row;
  cursor: pointer;
}
.RadioButton > div > input {
  position: relative;
  margin-inline: 2%;
  cursor: pointer;
}
.RadioButton > div > div {
  position: relative;
  height: 100%;
}
.RadioButton > div > div[id*=Price] {
  font-size: 1em;
  margin-left: auto;
  margin-right: 5%;
}

:root {
  --main-font: "Montserrat";
  --primary: "";
  --primary-text: #333;
}

* {
  margin: 0;
  padding: 0;
  font-family: var(--main-font);
}

.tooltip_S[state*=active]:after, .tooltip_S[state*=active]:before {
  display: none;
}

.tooltip_S[data-tooltip-direction=right] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=right]:after {
  pointer-events: none;
  content: attr(data-tooltip-value);
  position: absolute;
  z-index: 10;
  top: 50%;
  transform: translateY(-50%);
  left: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=right]:before {
  pointer-events: none;
  content: "";
  position: absolute;
  z-index: 10;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-right: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=right]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  left: 110%;
}

.tooltip_S[data-tooltip-direction=right]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  left: 103%;
}

.tooltip_S[data-tooltip-direction=right]:hover:after, .tooltip_S[data-tooltip-direction=right]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=top] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=top]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  bottom: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=top]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  bottom: 130%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after {
  bottom: 120%;
}

.tooltip_S[data-tooltip-direction=top]:hover:before {
  bottom: 103%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after, .tooltip_S[data-tooltip-direction=top]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=left] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=left]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=left]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-left: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  right: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=left]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  right: 110%;
}

.tooltip_S[data-tooltip-direction=left]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  right: 103%;
}

.tooltip_S[data-tooltip-direction=left]:hover:after, .tooltip_S[data-tooltip-direction=left]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=bottom] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=bottom]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=bottom]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-bottom: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  top: 130%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after {
  top: 120%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:before {
  top: 103%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after, .tooltip_S[data-tooltip-direction=bottom]:hover:before {
  opacity: 1;
}

.AdaptiveTableMain {
  position: relative;
  display: block;
  width: 98%;
  height: 100%;
  overflow: hidden;
  overflow-y: auto;
}

.AdaptiveTableMain > .ListMain {
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

.AdaptiveTableMain > .ListMain > .column {
  position: relative;
  width: 90%;
  height: fit-content;
  flex-direction: column;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement {
  user-select: none;
  padding: 0.5em;
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: inline-block;
  height: fit-content;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > img {
  user-select: none;
  box-sizing: border-box;
  overflow: hidden;
  display: block;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  position: relative;
  width: 100%;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv {
  user-select: none;
  border-radius: 5px 5px;
  position: absolute;
  top: 0;
  margin: 0.5em;
  left: 0;
  width: calc(100% - 1em);
  height: calc(100% - 1em);
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
  background-color: rgba(94, 94, 94, 0.471);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv:hover {
  opacity: 1;
  box-shadow: rgba(0, 0, 0, 0.55) 0px 0px 3px, rgba(0, 0, 0, 0.51) 0px 0px 3px;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .informationDiv {
  display: none;
  position: relative;
  top: 0;
  margin: 0.5em;
  border-radius: 5px 5px;
  left: 0;
  background-color: rgba(255, 0, 0, 0.299);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv {
  user-select: none;
  position: absolute;
  bottom: 0;
  left: 0;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv > button {
  user-select: none;
}

.AmountDiv {
  display: flex;
  position: relative;
  border: 1px solid black;
  box-sizing: border-box;
  width: fit-content;
  padding: 0.2em;
}

.AmountDiv > button {
  width: 33%;
  position: relative;
  box-sizing: border-box;
  border-radius: 0px 0px;
}

.AmountDiv > button > span {
  font-size: 1em;
}

.AmountDiv > div {
  position: relative;
  width: 2em;
  margin: 0;
  background-color: transparent;
  padding: 0;
  overflow: hidden;
}

.AmountDiv > div > input {
  font-size: 1em;
  background-color: transparent;
  position: relative;
  border: none;
  outline: none;
  width: 100%;
  height: 100%;
  text-align: center;
}

.button_Default {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.button_Default > span {
  display: block;
}

.button_Default:hover {
  background-color: red;
}

.s-button_basic {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_basic > span {
  display: block;
}

.s-button_link {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_link > span {
  text-decoration: underline;
  color: blue;
  display: block;
}

.s-button_link:hover > span {
  color: rgb(34, 34, 255);
}

.DropDownInputMain {
  position: relative;
  background-color: #ffd7af;
  border-radius: 5px;
  margin: 0.5em;
  font-size: inherit;
}

.DropDownInputMain select {
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.25em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 5px 5px !important;
}

.DropDownInputMain select.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.25em;
}

.DropDownInputMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.DropDownInputMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

.header {
  position: fixed;
  width: 100%;
  height: 4rem;
  display: flex;
  flex-direction: row;
  alignItems: center;
  justifyContent: space-between !important;
  background-color: var(--bg-color);
  box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.2);
}

.header > .logoLinkBox {
  position: relative;
  margin-left: 3rem;
  min-width: 3rem;
  width: auto;
  max-width: 15rem;
  height: 4rem;
  display: flex;
  align-items: center;
  justify-content: start;
  text-decoration: none;
  cursor: pointer;
  user-select: none;
}

.header > .logoLinkBox > .logoIcon {
  position: relative;
  width: 2.5rem;
}

.header > .logoLinkBox > .logoText {
  position: relative;
  margin-left: 0.5rem;
  font-size: 1.3rem;
  font-weight: 600;
  color: #333 !important;
}

.header > .headerNavigation {
  position: absolute;
  right: 3rem;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: end;
}

.header > .headerNavigation > button {
  font-size: 1.1rem;
  margin-left: 1.5rem;
}

.header > .headerNavigation > button > span {
  position: relative;
  text-decoration: none;
  color: #a8a8a8;
}

.S_InputDiv {
  position: relative;
  background-color: #ffd7af;
  margin: 0.5em;
  height: min-content;
  display: flex;
  flex-wrap: wrap;
}

.S_InputDiv > button {
  flex: 0 1;
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}

.S_InputDiv > button > span {
  position: relative;
  font-size: 1.3em;
}

.S_InputDiv > button[state*=active] {
  background-color: #ffa228;
}

.S_InputDiv > button[state*=passive] {
  background-color: transparent;
}

.S_InputDiv > button[state*=passive]:hover {
  background-color: #FFAD5B;
}

.S_InputDiv label.switchLabel {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.S_InputDiv input {
  flex: 2 1;
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 5px 5px !important;
  outline: none;
}

.S_InputDiv input.filled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}

.S_InputDiv input[state*=passive] {
  color: red;
  background-color: #fff1de;
}

.S_InputDiv input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}

.S_InputDiv input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}

.S_InputDiv > .response {
  align-self: flex-end;
  text-align: justify;
  width: 100%;
  color: red;
}

.S_InputDiv .invalidInput {
  color: red;
  background-color: #fff1de;
}

.progressBar_Splint {
  position: absolute;
  width: 10em;
  background-color: blue;
  display: flex;
}

.progressBar_Splint > .S_progressBar_Body {
  width: 100%;
  border: 1px solid black;
}

.progressBar_Splint > .S_progressBar_Body > .S_progressBar_Inner {
  width: 100%;
  height: 100%;
  background-color: red;
}

.S-SliderMain {
  margin-top: 0.4em;
  margin-bottom: 0.4em;
}

.S-SliderMain[drawDivider=true]::after {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-bottom: 1px solid #BDBDBD;
  left: 0;
  margin-top: 0.25em;
  position: relative;
}

.S-SliderMain[drawDivider=true]::before {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-top: 1px solid #BDBDBD;
  left: 0;
  margin-bottom: 0.2em;
  position: relative;
}

.S-SliderMain > .label {
  position: relative;
  width: 100%;
  display: inline-block;
  box-sizing: border-box;
  text-align: left;
}

.S-SliderMain > .contentBody {
  height: 1em;
  display: flex;
}

.S-SliderMain > .contentBody > .sliderBody {
  order: 1;
  height: 100%;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range] {
  width: 100%;
  position: relative;
  font-size: 1em;
  height: 100%;
  display: inline-block;
  outline: none;
  -webkit-appearance: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-runnable-track {
  box-sizing: border-box;
  width: 100%;
  height: 0.5em;
  background: #ffa228;
  border: none;
  border-radius: 10px;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  border: none;
  vertical-align: baseline;
  height: 1em;
  width: 1em;
  border-radius: 10%;
  margin-top: -0.25em;
  background: white;
  box-sizing: border-box;
  border: 1px solid black;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus {
  outline: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus::-webkit-slider-runnable-track {
  background: #ffa228;
}

.S-SliderMain > .contentBody > .sliderBody > datalist {
  display: none;
  height: 20rem;
  margin-top: -23px;
  background-color: red;
  color: red;
}

.S-SliderMain > .contentBody > .sliderBody > datalist > option {
  background-color: red;
  color: red;
  height: 50px;
}

.S-SliderMain > .contentBody > .valueOutput {
  order: 2;
  height: 1em;
  width: 1.5em;
  display: inline-block;
  box-sizing: border-box;
  text-align: center;
}

.S-SliderMain > .contentBody > .valueOutput[hidden=true] {
  display: none;
}

.SlideShow_S {
  position: relative;
  height: 100%;
  overflow-y: visible !important;
  overflow-x: auto;
  box-sizing: border-box;
  white-space: nowrap;
  background-color: transparent;
}

.SlideShow_S > .inner {
  display: inline-block;
  position: relative;
  height: 100%;
  width: max-content;
  margin-left: auto;
  margin-right: auto;
  background-color: transparent;
}

.SlideShow_S > .inner > .listElement {
  position: relative;
  height: calc(100% - 0.4em);
  box-sizing: border-box;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  margin: 0.2em;
  margin-inline: 0.5em;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: end;
  align-items: end;
}

.SlideShow_S > .inner > .listElement > div {
  bottom: 0;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  aspect-ratio: 2/1;
}

.SlideShow_S > .inner > .listElement > div > span {
  font-size: 2em;
}

.subWindow_MAIN {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: all;
  user-select: none;
}

.subWindow_MAIN > .background {
  position: absolute;
  z-index: 1;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: rgba(255, 255, 255, 0.8509803922);
}

.subWindow_MAIN .content {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  position: absolute;
  z-index: 2;
  width: fit-content;
  max-height: 90vh;
  max-width: 90vw;
  overflow: hidden;
  margin: auto;
  left: 50%;
  height: max-content;
  top: 50%;
  user-select: none;
  pointer-events: all;
  transform: translate(-50%, -50%);
}

.subWindow_MAIN .content > button.button_close {
  position: absolute;
  right: 0.5em;
  z-index: 3;
}

.TableMain {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
}

.TableMain > .ListMain {
  position: relative;
  width: 100%;
  height: 100%;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;
}

.TableMain > .ListMain > .ListElement {
  margin: 0.5em;
  position: relative;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement > .ListElementHover {
  position: absolute;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 1;
  margin: 0;
  padding: 0;
  border: inherit;
  box-shadow: inherit;
  border-radius: inherit;
  background-color: rgba(64, 64, 64, 0.63);
  display: flex;
  flex-direction: column;
  transition: opacity 0.2s;
}

.horizontalLine {
  position: relative;
  margin: 0.1rem;
  left: 1%;
  width: 98%;
  opacity: 1;
  color: #BDBDBD;
  border: none;
  border-top: 0.5px solid #BDBDBD;
  background-color: #BDBDBD;
}

.PriceDiv {
  width: max-content;
  height: max-content !important;
  display: inline-block;
  overflow-wrap: anywhere;
  white-space: nowrap;
}

.s-ObjectEditor {
  width: 25rem;
  box-shadow: inset 1px 0px 0px 0px black, 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white;
}

.s-ObjectEditor > .Table2D {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table > tr {
  width: 0rem;
  box-sizing: border-box;
  border-bottom: 1px solid black;
  overflow: visible;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] {
  display: flex;
  flex-direction: column;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] > td[col*="1"] {
  margin-left: 1rem;
}

.s-ObjectEditor > .Table2D > table > tr > td {
  box-sizing: border-box;
  width: 100%;
  overflow: visible;
  padding-left: 0.25rem;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="0"] {
  width: 33%;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="2"] {
  width: min-content;
}

.s-ObjectEditor > .Table2D > table > tr > td > div {
  position: relative;
}

.s-sideBarMobile {
  position: absolute;
  height: 100%;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  width: 200px;
  transform: translateX(-100%);
  transition: transform 1s ease-in;
}

.s-sideBarMobile[s-state*=active] {
  transform: translateX(0);
}

.s-sideBarMobile > .headContainer {
  display: flex;
  padding: 0.25em;
  height: max-content;
  justify-content: center;
  align-items: center;
  box-shadow: 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white, inset 0px -1px 0px 0px gray;
}

.s-sideBarMobile > .headContainer > .headline {
  width: 100%;
  font-size: 2em;
}

.s-sideBarMobile > .headContainer > .buttonClose {
  position: relative;
  height: 100%;
}

.s-sideBarMobile > .content {
  width: 100%;
  height: 100%;
}

.Spinner1 {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}

.Spinner1[state*=passive] {
  visibility: hidden;
}

.Spinner1 > div {
  box-sizing: border-box;
  display: block;
  position: absolute;
  width: 80%;
  height: 80%;
  margin: 10%;
  border: 8px solid #fff;
  border-radius: 50%;
  animation: Spinner1 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
  border-color: #fff transparent transparent transparent;
}

.Spinner1 > div:nth-child(1) {
  animation-delay: -0.45s;
}

.Spinner1 > div:nth-child(2) {
  animation-delay: -0.3s;
}

.Spinner1 > div:nth-child(3) {
  animation-delay: -0.15s;
}

@keyframes Spinner1 {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.DropDownInputMain_S {
  position: relative;
  overflow: visible !important;
}

.DropDownInputMain_S > .S_InputDiv {
  width: 100%;
  margin: 0;
  margin-bottom: 0;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px;
}

.DropDownInputMain_S > .S_InputDiv > input {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > button {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > .response {
  display: none;
}

.DropDownInputMain_S > .DropDown_expander {
  z-index: 120;
  background-color: transparent;
  position: absolute;
  padding: 0;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.DropDownInputMain_S > .DropDown_expander[state*=active] {
  height: 10em;
}

.DropDownInputMain_S > .DropDown_expander[state*=passive] {
  height: 0em;
}

.DropDownInputMain_S > .DropDown_expander > div {
  z-index: 122;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-top: 0.2em;
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div > span {
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain {
  position: relative;
  overflow: visible !important;
}

.n_SelectInputMain > .Select_expander {
  z-index: 1;
  background-color: transparent;
  position: absolute;
  padding: 1%;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.n_SelectInputMain > .Select_expander[state*=active] {
  height: max-content;
  max-height: 10em;
}

.n_SelectInputMain > .Select_expander[state*=passive] {
  height: 0em;
  display: none;
}

.n_SelectInputMain > .Select_expander > div {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-bottom: 0.5em;
  text-align: center;
  cursor: pointer;
  transition: box-shadow 0.2s;
  transition-timing-function: ease-in;
}

.n_SelectInputMain > .Select_expander > div > span {
  text-align: center;
}

.n_SelectInputMain > .Select_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain > .Select_expander > div:hover {
  box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 3px, rgba(0, 0, 0, 0.21) 0px 0px 3px;
}

.n_inputDiv {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

.n_inputDiv > .inputBody {
  display: flex;
  flex-direction: row;
}

.n_inputDiv > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

.n_inputDiv > .inputBody > input:valid, .n_inputDiv > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

.n_inputDiv > .inputBody > input:valid + label span, .n_inputDiv > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

.n_inputDiv > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

.n_inputDiv > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.n_inputDiv > .inputBody > button {
  background-color: transparent;
}

.n_inputDiv > .response > span {
  color: red;
}

s-input {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

s-input > .inputBody {
  display: flex;
  flex-direction: row;
}

s-input > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

s-input > .inputBody > input:valid, s-input > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

s-input > .inputBody > input:valid + label span, s-input > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

s-input > .inputBody > input[state=passive] {
  border-bottom: 2px red solid;
}

s-input > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

s-input > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

s-input > .inputBody > button {
  background-color: transparent;
}

s-input > .response > span {
  color: red;
}

.S-AddressInput {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  column-gap: 0.5em;
  grid-template-areas: "fN fN fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.S-AddressInput > div, .S-AddressInput s-input {
  background-color: transparent;
  box-sizing: border-box;
}

.S-AddressInput > div > .inputBody, .S-AddressInput s-input > .inputBody {
  padding-top: 0.5em;
}

.S-AddressInput > div[identifier*=title], .S-AddressInput s-input[identifier*=title] {
  display: none;
}

.S-AddressInput > div[id*=salutation], .S-AddressInput s-input[id*=salutation] {
  display: none;
  grid-area: none;
}

.S-AddressInput > div[identifier*=firstName], .S-AddressInput s-input[identifier*=firstName] {
  grid-area: fN;
}

.S-AddressInput > div[identifier*=lastName], .S-AddressInput s-input[identifier*=lastName] {
  grid-area: lN;
}

.S-AddressInput > div[identifier*=postcode], .S-AddressInput s-input[identifier*=postcode] {
  grid-area: plz;
}

.S-AddressInput > div[identifier*=city], .S-AddressInput s-input[identifier*=city] {
  grid-area: ct;
}

.S-AddressInput > div[id*=country], .S-AddressInput s-input[id*=country] {
  grid-area: cy;
}

.S-AddressInput > div[identifier*=street], .S-AddressInput s-input[identifier*=street] {
  grid-area: st;
}

.S-AddressInput > div[identifier*=housenumber], .S-AddressInput s-input[identifier*=housenumber] {
  grid-area: hn;
}

.S-AddressInput > div[identifier*=email], .S-AddressInput s-input[identifier*=email] {
  grid-area: ema;
}

.S-AddressInput > div[identifier*=phone], .S-AddressInput s-input[identifier*=phone] {
  grid-area: ph;
}

.S-AddressInput > s-input {
  padding-bottom: -0.5em;
}

.n_RadioButton {
  position: relative;
}

.n_RadioButton > .radio_headline {
  position: relative;
}

.n_RadioButton > .inner {
  position: relative;
}

.n_RadioButton > .inner > div {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
  justify-content: start;
  align-items: center;
}

.n_RadioButton > .inner > div > .inputBody {
  position: relative;
  box-sizing: border-box;
  width: 1em;
  margin: 0.5em;
  height: 1em;
  min-width: 1em;
}

.n_RadioButton > .inner > div > .inputBody > input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span {
  box-sizing: border-box;
  background-color: #2196F3;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span:after {
  box-sizing: border-box;
  display: block;
}

.n_RadioButton > .inner > div > .inputBody > span {
  box-sizing: content-box;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background-color: #eee;
  border-radius: 50%;
}

.n_RadioButton > .inner > div > .inputBody > span:after {
  box-sizing: border-box;
  content: "";
  left: 0;
  top: 0;
  position: absolute;
  display: none;
  margin: 25%;
  width: 50%;
  height: 50%;
  border-radius: 50%;
  background: white;
}

.n_RadioButton > .inner > div > .inputBody:hover input ~ span {
  background-color: #ccc;
}

.toggleButton {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  display: flex;
  justify-content: space-around;
  width: max-content;
  overflow: hidden;
}

.toggleButton > button {
  width: 100%;
  padding: 0.5rem;
  background-color: transparent;
  border: none;
  cursor: pointer;
}

.toggleButton > button:hover {
  background-color: #FFAD5B;
}

.toggleButton > button[state*=active] {
  background-color: #ffa228;
}

.s-ToggleButton_2 {
  width: max-content;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
}

.s-ToggleButton_2 > button {
  border: none;
  border-radius: 0;
  outline: none;
  padding: 0em;
  min-height: 1rem;
  height: 100%;
  width: 100%;
  margin: 0.25em;
}

.s-ToggleButton_2 > button.btFALSE {
  background-color: red;
}

.s-ToggleButton_2 > button.btFALSE[state*=passive] {
  background-color: rgba(255, 0, 0, 0.3);
}

.s-ToggleButton_2 > button.btTRUE {
  background-color: green;
}

.s-ToggleButton_2 > button.btTRUE[state*=passive] {
  background-color: rgba(0, 128, 0, 0.3);
}

.S_SVGElement_BODY {
  position: relative;
  background-color: transparent;
}

.S_SVGElement_BODY > svg {
  position: relative;
}

.addressMenuNewMain > [id*=menuElement] > div {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  grid-template-areas: "salutation salutation fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.addressMenuNewMain > [id*=menuElement] > div > div {
  background-color: transparent;
  box-sizing: border-box;
}

.addressMenuNewMain > [id*=menuElement] > div > div.S_InputDiv {
  padding-bottom: -0.5em;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=title] {
  display: none;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=salutation] {
  grid-area: salutation;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=firstName] {
  grid-area: fN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=lastName] {
  grid-area: lN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=postcode] {
  grid-area: plz;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=city] {
  grid-area: ct;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=country] {
  grid-area: cy;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=street] {
  grid-area: st;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=housenumber] {
  grid-area: hn;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=email] {
  grid-area: ema;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=phone] {
  grid-area: ph;
}

/* Media Queries */
/* ------- */
/* Desktop */
/* ------- */
.CursorMain {
  display: all;
  backface-visibility: hidden;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
  width: 100px;
  height: 100px;
  background-color: red;
  z-index: 999;
}

.customCursor {
  position: absolute;
  box-sizing: content-box;
  will-change: transform;
  margin: 0;
  padding: 0;
  top: 0;
  left: 0;
  pointer-events: none;
  user-select: none;
  display: auto;
  z-index: 1000;
}
.customCursor.red {
  background-color: red;
}
.customCursor.orange {
  color: orange !important;
}

.button_Default {
  user-select: none;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 0px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  box-sizing: content-box;
  margin: 0.5em;
  overflow: hidden;
}
.button_Default > span {
  box-sizing: border-box;
}
.button_Default[state*=active] {
  background-color: #FFAD5B;
}
.button_Default[state*=passive] {
  background-color: #fff1de;
}
.button_Default:hover {
  background-color: #ffa228;
}

.button_General {
  user-select: none;
  background-color: transparent;
  border: none;
  color: #000000;
  display: inline-block;
  font-size: 1em;
  cursor: pointer;
  border-radius: 0px;
}
.button_General > span {
  display: block;
  position: relative;
  text-align: center;
}
.button_General > span:not(.material-symbols-outlined) {
  text-decoration: underline;
}
.button_General > .dropdown {
  position: absolute;
  left: 100%;
  margin-left: 10%;
  top: 0;
  width: fit-content;
  height: max-content;
  overflow: hidden;
}
.button_General:hover > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonAnimation;
}
.button_General:hover > span.material-symbols-outlined {
  color: #ffa228 !important;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonIconAnimation;
}
.button_General:hover > span.material-symbols-outlined.rotate90 {
  animation-name: buttonIconAnimation90;
}
.button_General:hover:after > span {
  color: white;
}
.button_General:hover:after > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-out;
  animation-fill-mode: backwards;
  animation-direction: reverse;
  animation-name: buttonAnimationB;
}
.button_General:hover:after > span.material-symbols-outlined {
  color: #ffa228 !important;
}
.button_General.simple {
  background-color: transparent;
  border: none;
  text-decoration: underline;
}

/* width */
::-webkit-scrollbar {
  margin-inline: 2px;
  width: 5px;
}

/* Track */
::-webkit-scrollbar-track {
  width: 2px;
  transform: scale(2);
  background: transparent;
}

/* Handle */
::-webkit-scrollbar-thumb {
  width: 5px;
  transform: scale(2);
  background: rgb(189, 189, 189);
  border-radius: 0px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: gray;
}

body {
  background-color: #fff8f1;
}
body * {
  font-family: "Arial";
  margin: 0;
  padding: 0;
}

.Slider_main > .Slider_inputBody input[type=range] {
  appearance: none;
  background: transparent;
  width: 100%;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-thumb {
  position: relative;
  appearance: none;
  width: 9px;
  height: 20px;
  background-color: #FFAD5B;
  transform: translateY(-40%);
  border-radius: 2px 2px;
  z-index: 20;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-runnable-track {
  position: relative;
  cursor: pointer;
  border-radius: 2px 2px;
  height: 20%;
  z-index: 19;
  /* Hides the slider so custom styles can be added */
  background-color: #000000;
}
.Slider_main > .Slider_inputBody > hr {
  position: absolute;
  margin-left: calc((100% - (2.1em + 6px)) / var(--size) * var(--index));
  z-index: 1;
  left: 5px;
  background-color: darkgray;
  width: 0.5px;
  top: 25%;
  height: 50%;
  margin-top: 0;
}
.Slider_main > .Slider_inputBody > hr:nth-child(even) {
  top: 12.5%;
  height: 75%;
}

body {
  position: relative;
  width: 100vw;
  overflow: hidden;
  box-sizing: content-box;
  top: 6vh;
  height: 94vh;
}
@media only screen and (max-width: 980px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 981px) and (max-width: 1199px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 1200px) {
  body {
    font-size: 1em;
  }
}

.Table {
  border: 1px solid black;
  position: relative;
  width: 50%;
}
.Table > div {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}
.Table > div > label {
  position: relative;
  overflow: hidden;
}
.Table > div > span {
  position: relative;
  overflow: hidden;
}

.bold {
  font-weight: bold;
}

.LoadBar {
  z-index: 3;
  border-radius: 0px;
  position: relative !important;
  background-color: red !important;
  width: 100% !important;
  height: 2em !important;
  overflow: hidden;
}
.LoadBar .LoadBar-progress {
  position: relative;
  height: 100%;
  background-color: green !important;
}

.LineDiv {
  position: relative;
  margin: 0;
  padding: 0;
  flex: auto;
  overflow: hidden;
  height: 100%;
  border: none;
}
.LineDiv hr {
  display: block;
  position: relative;
  color: orange;
  background-color: orange;
  opacity: 1;
  width: 0%;
  margin: 0;
  top: 50%;
  visibility: visible;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;
}

@keyframes NavBarLine {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}
.Text-primary {
  color: #000000;
}

.Text-secondary {
  color: #BCBCBC;
}

.Text-small {
  font-size: 0.75em;
}

.SliderDivMain {
  border: 1px solid black;
}

.TextInputDiv {
  position: relative;
  background-color: #fff8f1;
  border-radius: 0px;
  margin: 0.5em;
  margin-bottom: 1.5em;
  font-size: inherit;
  height: 10em;
}
.TextInputDiv textarea {
  position: relative;
  outline: 0;
  resize: none;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 0px !important;
}
.TextInputDiv textarea.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 1.1em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.TextInputDiv textarea::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.TextInputDiv label {
  user-select: none;
  position: absolute;
  z-index: 1;
  width: 100%;
  background-color: #fff8f1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.11em;
  padding-top: 0.39em;
  padding-bottom: 0.13em;
  border-top-right-radius: 5px 5px;
}
.TextInputDiv .horizontalLine {
  position: absolute;
  z-index: 2;
  width: 100%;
  top: 0.89em;
  height: 0px;
  left: 0;
  margin-block: 0px;
  margin-inline: 0.5em;
}

.InputDivMain {
  position: relative;
  background-color: #fff8f1;
  margin: 0.5em;
  height: min-content;
  display: inline-flex;
}
.InputDivMain button {
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}
.InputDivMain button > span {
  position: relative;
  font-size: 1.3em;
}
.InputDivMain button[state*=active] {
  background-color: #ffa228;
}
.InputDivMain button[state*=passive] {
  background-color: transparent;
}
.InputDivMain button[state*=passive]:hover {
  background-color: #FFAD5B;
}
.InputDivMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}
.InputDivMain input {
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 0px !important;
  outline: none;
}
.InputDivMain input.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.InputDivMain input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}
.InputDivMain input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.InputDivMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

:root {
  --main-font: "Montserrat";
  --primary: "";
  --primary-text: #333;
}

* {
  margin: 0;
  padding: 0;
  font-family: var(--main-font);
}

.tooltip_S[state*=active]:after, .tooltip_S[state*=active]:before {
  display: none;
}

.tooltip_S[data-tooltip-direction=right] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=right]:after {
  pointer-events: none;
  content: attr(data-tooltip-value);
  position: absolute;
  z-index: 10;
  top: 50%;
  transform: translateY(-50%);
  left: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=right]:before {
  pointer-events: none;
  content: "";
  position: absolute;
  z-index: 10;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-right: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=right]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  left: 110%;
}

.tooltip_S[data-tooltip-direction=right]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  left: 103%;
}

.tooltip_S[data-tooltip-direction=right]:hover:after, .tooltip_S[data-tooltip-direction=right]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=top] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=top]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  bottom: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=top]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  bottom: 130%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after {
  bottom: 120%;
}

.tooltip_S[data-tooltip-direction=top]:hover:before {
  bottom: 103%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after, .tooltip_S[data-tooltip-direction=top]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=left] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=left]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=left]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-left: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  right: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=left]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  right: 110%;
}

.tooltip_S[data-tooltip-direction=left]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  right: 103%;
}

.tooltip_S[data-tooltip-direction=left]:hover:after, .tooltip_S[data-tooltip-direction=left]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=bottom] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=bottom]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=bottom]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-bottom: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  top: 130%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after {
  top: 120%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:before {
  top: 103%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after, .tooltip_S[data-tooltip-direction=bottom]:hover:before {
  opacity: 1;
}

.AdaptiveTableMain {
  position: relative;
  display: block;
  width: 98%;
  height: 100%;
  overflow: hidden;
  overflow-y: auto;
}

.AdaptiveTableMain > .ListMain {
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

.AdaptiveTableMain > .ListMain > .column {
  position: relative;
  width: 90%;
  height: fit-content;
  flex-direction: column;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement {
  user-select: none;
  padding: 0.5em;
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: inline-block;
  height: fit-content;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > img {
  user-select: none;
  box-sizing: border-box;
  overflow: hidden;
  display: block;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  position: relative;
  width: 100%;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv {
  user-select: none;
  border-radius: 5px 5px;
  position: absolute;
  top: 0;
  margin: 0.5em;
  left: 0;
  width: calc(100% - 1em);
  height: calc(100% - 1em);
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
  background-color: rgba(94, 94, 94, 0.471);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv:hover {
  opacity: 1;
  box-shadow: rgba(0, 0, 0, 0.55) 0px 0px 3px, rgba(0, 0, 0, 0.51) 0px 0px 3px;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .informationDiv {
  display: none;
  position: relative;
  top: 0;
  margin: 0.5em;
  border-radius: 5px 5px;
  left: 0;
  background-color: rgba(255, 0, 0, 0.299);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv {
  user-select: none;
  position: absolute;
  bottom: 0;
  left: 0;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv > button {
  user-select: none;
}

.AmountDiv {
  display: flex;
  position: relative;
  border: 1px solid black;
  box-sizing: border-box;
  width: fit-content;
  padding: 0.2em;
}

.AmountDiv > button {
  width: 33%;
  position: relative;
  box-sizing: border-box;
  border-radius: 0px 0px;
}

.AmountDiv > button > span {
  font-size: 1em;
}

.AmountDiv > div {
  position: relative;
  width: 2em;
  margin: 0;
  background-color: transparent;
  padding: 0;
  overflow: hidden;
}

.AmountDiv > div > input {
  font-size: 1em;
  background-color: transparent;
  position: relative;
  border: none;
  outline: none;
  width: 100%;
  height: 100%;
  text-align: center;
}

.button_Default {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.button_Default > span {
  display: block;
}

.button_Default:hover {
  background-color: red;
}

.s-button_basic {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_basic > span {
  display: block;
}

.s-button_link {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_link > span {
  text-decoration: underline;
  color: blue;
  display: block;
}

.s-button_link:hover > span {
  color: rgb(34, 34, 255);
}

.DropDownInputMain {
  position: relative;
  background-color: #ffd7af;
  border-radius: 5px;
  margin: 0.5em;
  font-size: inherit;
}

.DropDownInputMain select {
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.25em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 5px 5px !important;
}

.DropDownInputMain select.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.25em;
}

.DropDownInputMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.DropDownInputMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

.header {
  position: fixed;
  width: 100%;
  height: 4rem;
  display: flex;
  flex-direction: row;
  alignItems: center;
  justifyContent: space-between !important;
  background-color: var(--bg-color);
  box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.2);
}

.header > .logoLinkBox {
  position: relative;
  margin-left: 3rem;
  min-width: 3rem;
  width: auto;
  max-width: 15rem;
  height: 4rem;
  display: flex;
  align-items: center;
  justify-content: start;
  text-decoration: none;
  cursor: pointer;
  user-select: none;
}

.header > .logoLinkBox > .logoIcon {
  position: relative;
  width: 2.5rem;
}

.header > .logoLinkBox > .logoText {
  position: relative;
  margin-left: 0.5rem;
  font-size: 1.3rem;
  font-weight: 600;
  color: #333 !important;
}

.header > .headerNavigation {
  position: absolute;
  right: 3rem;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: end;
}

.header > .headerNavigation > button {
  font-size: 1.1rem;
  margin-left: 1.5rem;
}

.header > .headerNavigation > button > span {
  position: relative;
  text-decoration: none;
  color: #a8a8a8;
}

.S_InputDiv {
  position: relative;
  background-color: #ffd7af;
  margin: 0.5em;
  height: min-content;
  display: flex;
  flex-wrap: wrap;
}

.S_InputDiv > button {
  flex: 0 1;
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}

.S_InputDiv > button > span {
  position: relative;
  font-size: 1.3em;
}

.S_InputDiv > button[state*=active] {
  background-color: #ffa228;
}

.S_InputDiv > button[state*=passive] {
  background-color: transparent;
}

.S_InputDiv > button[state*=passive]:hover {
  background-color: #FFAD5B;
}

.S_InputDiv label.switchLabel {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.S_InputDiv input {
  flex: 2 1;
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 5px 5px !important;
  outline: none;
}

.S_InputDiv input.filled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}

.S_InputDiv input[state*=passive] {
  color: red;
  background-color: #fff1de;
}

.S_InputDiv input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}

.S_InputDiv input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}

.S_InputDiv > .response {
  align-self: flex-end;
  text-align: justify;
  width: 100%;
  color: red;
}

.S_InputDiv .invalidInput {
  color: red;
  background-color: #fff1de;
}

.progressBar_Splint {
  position: absolute;
  width: 10em;
  background-color: blue;
  display: flex;
}

.progressBar_Splint > .S_progressBar_Body {
  width: 100%;
  border: 1px solid black;
}

.progressBar_Splint > .S_progressBar_Body > .S_progressBar_Inner {
  width: 100%;
  height: 100%;
  background-color: red;
}

.S-SliderMain {
  margin-top: 0.4em;
  margin-bottom: 0.4em;
}

.S-SliderMain[drawDivider=true]::after {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-bottom: 1px solid #BDBDBD;
  left: 0;
  margin-top: 0.25em;
  position: relative;
}

.S-SliderMain[drawDivider=true]::before {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-top: 1px solid #BDBDBD;
  left: 0;
  margin-bottom: 0.2em;
  position: relative;
}

.S-SliderMain > .label {
  position: relative;
  width: 100%;
  display: inline-block;
  box-sizing: border-box;
  text-align: left;
}

.S-SliderMain > .contentBody {
  height: 1em;
  display: flex;
}

.S-SliderMain > .contentBody > .sliderBody {
  order: 1;
  height: 100%;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range] {
  width: 100%;
  position: relative;
  font-size: 1em;
  height: 100%;
  display: inline-block;
  outline: none;
  -webkit-appearance: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-runnable-track {
  box-sizing: border-box;
  width: 100%;
  height: 0.5em;
  background: #ffa228;
  border: none;
  border-radius: 10px;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  border: none;
  vertical-align: baseline;
  height: 1em;
  width: 1em;
  border-radius: 10%;
  margin-top: -0.25em;
  background: white;
  box-sizing: border-box;
  border: 1px solid black;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus {
  outline: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus::-webkit-slider-runnable-track {
  background: #ffa228;
}

.S-SliderMain > .contentBody > .sliderBody > datalist {
  display: none;
  height: 20rem;
  margin-top: -23px;
  background-color: red;
  color: red;
}

.S-SliderMain > .contentBody > .sliderBody > datalist > option {
  background-color: red;
  color: red;
  height: 50px;
}

.S-SliderMain > .contentBody > .valueOutput {
  order: 2;
  height: 1em;
  width: 1.5em;
  display: inline-block;
  box-sizing: border-box;
  text-align: center;
}

.S-SliderMain > .contentBody > .valueOutput[hidden=true] {
  display: none;
}

.SlideShow_S {
  position: relative;
  height: 100%;
  overflow-y: visible !important;
  overflow-x: auto;
  box-sizing: border-box;
  white-space: nowrap;
  background-color: transparent;
}

.SlideShow_S > .inner {
  display: inline-block;
  position: relative;
  height: 100%;
  width: max-content;
  margin-left: auto;
  margin-right: auto;
  background-color: transparent;
}

.SlideShow_S > .inner > .listElement {
  position: relative;
  height: calc(100% - 0.4em);
  box-sizing: border-box;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  margin: 0.2em;
  margin-inline: 0.5em;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: end;
  align-items: end;
}

.SlideShow_S > .inner > .listElement > div {
  bottom: 0;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  aspect-ratio: 2/1;
}

.SlideShow_S > .inner > .listElement > div > span {
  font-size: 2em;
}

.subWindow_MAIN {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: all;
  user-select: none;
}

.subWindow_MAIN > .background {
  position: absolute;
  z-index: 1;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: rgba(255, 255, 255, 0.8509803922);
}

.subWindow_MAIN .content {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  position: absolute;
  z-index: 2;
  width: fit-content;
  max-height: 90vh;
  max-width: 90vw;
  overflow: hidden;
  margin: auto;
  left: 50%;
  height: max-content;
  top: 50%;
  user-select: none;
  pointer-events: all;
  transform: translate(-50%, -50%);
}

.subWindow_MAIN .content > button.button_close {
  position: absolute;
  right: 0.5em;
  z-index: 3;
}

.TableMain {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
}

.TableMain > .ListMain {
  position: relative;
  width: 100%;
  height: 100%;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;
}

.TableMain > .ListMain > .ListElement {
  margin: 0.5em;
  position: relative;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement > .ListElementHover {
  position: absolute;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 1;
  margin: 0;
  padding: 0;
  border: inherit;
  box-shadow: inherit;
  border-radius: inherit;
  background-color: rgba(64, 64, 64, 0.63);
  display: flex;
  flex-direction: column;
  transition: opacity 0.2s;
}

.horizontalLine {
  position: relative;
  margin: 0.1rem;
  left: 1%;
  width: 98%;
  opacity: 1;
  color: #BDBDBD;
  border: none;
  border-top: 0.5px solid #BDBDBD;
  background-color: #BDBDBD;
}

.PriceDiv {
  width: max-content;
  height: max-content !important;
  display: inline-block;
  overflow-wrap: anywhere;
  white-space: nowrap;
}

.s-ObjectEditor {
  width: 25rem;
  box-shadow: inset 1px 0px 0px 0px black, 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white;
}

.s-ObjectEditor > .Table2D {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table > tr {
  width: 0rem;
  box-sizing: border-box;
  border-bottom: 1px solid black;
  overflow: visible;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] {
  display: flex;
  flex-direction: column;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] > td[col*="1"] {
  margin-left: 1rem;
}

.s-ObjectEditor > .Table2D > table > tr > td {
  box-sizing: border-box;
  width: 100%;
  overflow: visible;
  padding-left: 0.25rem;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="0"] {
  width: 33%;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="2"] {
  width: min-content;
}

.s-ObjectEditor > .Table2D > table > tr > td > div {
  position: relative;
}

.s-sideBarMobile {
  position: absolute;
  height: 100%;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  width: 200px;
  transform: translateX(-100%);
  transition: transform 1s ease-in;
}

.s-sideBarMobile[s-state*=active] {
  transform: translateX(0);
}

.s-sideBarMobile > .headContainer {
  display: flex;
  padding: 0.25em;
  height: max-content;
  justify-content: center;
  align-items: center;
  box-shadow: 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white, inset 0px -1px 0px 0px gray;
}

.s-sideBarMobile > .headContainer > .headline {
  width: 100%;
  font-size: 2em;
}

.s-sideBarMobile > .headContainer > .buttonClose {
  position: relative;
  height: 100%;
}

.s-sideBarMobile > .content {
  width: 100%;
  height: 100%;
}

.Spinner1 {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}

.Spinner1[state*=passive] {
  visibility: hidden;
}

.Spinner1 > div {
  box-sizing: border-box;
  display: block;
  position: absolute;
  width: 80%;
  height: 80%;
  margin: 10%;
  border: 8px solid #fff;
  border-radius: 50%;
  animation: Spinner1 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
  border-color: #fff transparent transparent transparent;
}

.Spinner1 > div:nth-child(1) {
  animation-delay: -0.45s;
}

.Spinner1 > div:nth-child(2) {
  animation-delay: -0.3s;
}

.Spinner1 > div:nth-child(3) {
  animation-delay: -0.15s;
}

@keyframes Spinner1 {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.DropDownInputMain_S {
  position: relative;
  overflow: visible !important;
}

.DropDownInputMain_S > .S_InputDiv {
  width: 100%;
  margin: 0;
  margin-bottom: 0;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px;
}

.DropDownInputMain_S > .S_InputDiv > input {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > button {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > .response {
  display: none;
}

.DropDownInputMain_S > .DropDown_expander {
  z-index: 120;
  background-color: transparent;
  position: absolute;
  padding: 0;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.DropDownInputMain_S > .DropDown_expander[state*=active] {
  height: 10em;
}

.DropDownInputMain_S > .DropDown_expander[state*=passive] {
  height: 0em;
}

.DropDownInputMain_S > .DropDown_expander > div {
  z-index: 122;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-top: 0.2em;
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div > span {
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain {
  position: relative;
  overflow: visible !important;
}

.n_SelectInputMain > .Select_expander {
  z-index: 1;
  background-color: transparent;
  position: absolute;
  padding: 1%;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.n_SelectInputMain > .Select_expander[state*=active] {
  height: max-content;
  max-height: 10em;
}

.n_SelectInputMain > .Select_expander[state*=passive] {
  height: 0em;
  display: none;
}

.n_SelectInputMain > .Select_expander > div {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-bottom: 0.5em;
  text-align: center;
  cursor: pointer;
  transition: box-shadow 0.2s;
  transition-timing-function: ease-in;
}

.n_SelectInputMain > .Select_expander > div > span {
  text-align: center;
}

.n_SelectInputMain > .Select_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain > .Select_expander > div:hover {
  box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 3px, rgba(0, 0, 0, 0.21) 0px 0px 3px;
}

.n_inputDiv {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

.n_inputDiv > .inputBody {
  display: flex;
  flex-direction: row;
}

.n_inputDiv > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

.n_inputDiv > .inputBody > input:valid, .n_inputDiv > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

.n_inputDiv > .inputBody > input:valid + label span, .n_inputDiv > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

.n_inputDiv > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

.n_inputDiv > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.n_inputDiv > .inputBody > button {
  background-color: transparent;
}

.n_inputDiv > .response > span {
  color: red;
}

s-input {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

s-input > .inputBody {
  display: flex;
  flex-direction: row;
}

s-input > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

s-input > .inputBody > input:valid, s-input > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

s-input > .inputBody > input:valid + label span, s-input > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

s-input > .inputBody > input[state=passive] {
  border-bottom: 2px red solid;
}

s-input > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

s-input > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

s-input > .inputBody > button {
  background-color: transparent;
}

s-input > .response > span {
  color: red;
}

.S-AddressInput {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  column-gap: 0.5em;
  grid-template-areas: "fN fN fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.S-AddressInput > div, .S-AddressInput s-input {
  background-color: transparent;
  box-sizing: border-box;
}

.S-AddressInput > div > .inputBody, .S-AddressInput s-input > .inputBody {
  padding-top: 0.5em;
}

.S-AddressInput > div[identifier*=title], .S-AddressInput s-input[identifier*=title] {
  display: none;
}

.S-AddressInput > div[id*=salutation], .S-AddressInput s-input[id*=salutation] {
  display: none;
  grid-area: none;
}

.S-AddressInput > div[identifier*=firstName], .S-AddressInput s-input[identifier*=firstName] {
  grid-area: fN;
}

.S-AddressInput > div[identifier*=lastName], .S-AddressInput s-input[identifier*=lastName] {
  grid-area: lN;
}

.S-AddressInput > div[identifier*=postcode], .S-AddressInput s-input[identifier*=postcode] {
  grid-area: plz;
}

.S-AddressInput > div[identifier*=city], .S-AddressInput s-input[identifier*=city] {
  grid-area: ct;
}

.S-AddressInput > div[id*=country], .S-AddressInput s-input[id*=country] {
  grid-area: cy;
}

.S-AddressInput > div[identifier*=street], .S-AddressInput s-input[identifier*=street] {
  grid-area: st;
}

.S-AddressInput > div[identifier*=housenumber], .S-AddressInput s-input[identifier*=housenumber] {
  grid-area: hn;
}

.S-AddressInput > div[identifier*=email], .S-AddressInput s-input[identifier*=email] {
  grid-area: ema;
}

.S-AddressInput > div[identifier*=phone], .S-AddressInput s-input[identifier*=phone] {
  grid-area: ph;
}

.S-AddressInput > s-input {
  padding-bottom: -0.5em;
}

.n_RadioButton {
  position: relative;
}

.n_RadioButton > .radio_headline {
  position: relative;
}

.n_RadioButton > .inner {
  position: relative;
}

.n_RadioButton > .inner > div {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
  justify-content: start;
  align-items: center;
}

.n_RadioButton > .inner > div > .inputBody {
  position: relative;
  box-sizing: border-box;
  width: 1em;
  margin: 0.5em;
  height: 1em;
  min-width: 1em;
}

.n_RadioButton > .inner > div > .inputBody > input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span {
  box-sizing: border-box;
  background-color: #2196F3;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span:after {
  box-sizing: border-box;
  display: block;
}

.n_RadioButton > .inner > div > .inputBody > span {
  box-sizing: content-box;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background-color: #eee;
  border-radius: 50%;
}

.n_RadioButton > .inner > div > .inputBody > span:after {
  box-sizing: border-box;
  content: "";
  left: 0;
  top: 0;
  position: absolute;
  display: none;
  margin: 25%;
  width: 50%;
  height: 50%;
  border-radius: 50%;
  background: white;
}

.n_RadioButton > .inner > div > .inputBody:hover input ~ span {
  background-color: #ccc;
}

.toggleButton {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  display: flex;
  justify-content: space-around;
  width: max-content;
  overflow: hidden;
}

.toggleButton > button {
  width: 100%;
  padding: 0.5rem;
  background-color: transparent;
  border: none;
  cursor: pointer;
}

.toggleButton > button:hover {
  background-color: #FFAD5B;
}

.toggleButton > button[state*=active] {
  background-color: #ffa228;
}

.s-ToggleButton_2 {
  width: max-content;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
}

.s-ToggleButton_2 > button {
  border: none;
  border-radius: 0;
  outline: none;
  padding: 0em;
  min-height: 1rem;
  height: 100%;
  width: 100%;
  margin: 0.25em;
}

.s-ToggleButton_2 > button.btFALSE {
  background-color: red;
}

.s-ToggleButton_2 > button.btFALSE[state*=passive] {
  background-color: rgba(255, 0, 0, 0.3);
}

.s-ToggleButton_2 > button.btTRUE {
  background-color: green;
}

.s-ToggleButton_2 > button.btTRUE[state*=passive] {
  background-color: rgba(0, 128, 0, 0.3);
}

.S_SVGElement_BODY {
  position: relative;
  background-color: transparent;
}

.S_SVGElement_BODY > svg {
  position: relative;
}

.addressMenuNewMain > [id*=menuElement] > div {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  grid-template-areas: "salutation salutation fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.addressMenuNewMain > [id*=menuElement] > div > div {
  background-color: transparent;
  box-sizing: border-box;
}

.addressMenuNewMain > [id*=menuElement] > div > div.S_InputDiv {
  padding-bottom: -0.5em;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=title] {
  display: none;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=salutation] {
  grid-area: salutation;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=firstName] {
  grid-area: fN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=lastName] {
  grid-area: lN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=postcode] {
  grid-area: plz;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=city] {
  grid-area: ct;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=country] {
  grid-area: cy;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=street] {
  grid-area: st;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=housenumber] {
  grid-area: hn;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=email] {
  grid-area: ema;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=phone] {
  grid-area: ph;
}

/* Media Queries */
/* ------- */
/* Desktop */
/* ------- */
.CursorMain {
  display: all;
  backface-visibility: hidden;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
  width: 100px;
  height: 100px;
  background-color: red;
  z-index: 999;
}

.customCursor {
  position: absolute;
  box-sizing: content-box;
  will-change: transform;
  margin: 0;
  padding: 0;
  top: 0;
  left: 0;
  pointer-events: none;
  user-select: none;
  display: auto;
  z-index: 1000;
}
.customCursor.red {
  background-color: red;
}
.customCursor.orange {
  color: orange !important;
}

.button_Default {
  user-select: none;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 0px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  box-sizing: content-box;
  margin: 0.5em;
  overflow: hidden;
}
.button_Default > span {
  box-sizing: border-box;
}
.button_Default[state*=active] {
  background-color: #FFAD5B;
}
.button_Default[state*=passive] {
  background-color: #fff1de;
}
.button_Default:hover {
  background-color: #ffa228;
}

.button_General {
  user-select: none;
  background-color: transparent;
  border: none;
  color: #000000;
  display: inline-block;
  font-size: 1em;
  cursor: pointer;
  border-radius: 0px;
}
.button_General > span {
  display: block;
  position: relative;
  text-align: center;
}
.button_General > span:not(.material-symbols-outlined) {
  text-decoration: underline;
}
.button_General > .dropdown {
  position: absolute;
  left: 100%;
  margin-left: 10%;
  top: 0;
  width: fit-content;
  height: max-content;
  overflow: hidden;
}
.button_General:hover > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonAnimation;
}
.button_General:hover > span.material-symbols-outlined {
  color: #ffa228 !important;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonIconAnimation;
}
.button_General:hover > span.material-symbols-outlined.rotate90 {
  animation-name: buttonIconAnimation90;
}
.button_General:hover:after > span {
  color: white;
}
.button_General:hover:after > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-out;
  animation-fill-mode: backwards;
  animation-direction: reverse;
  animation-name: buttonAnimationB;
}
.button_General:hover:after > span.material-symbols-outlined {
  color: #ffa228 !important;
}
.button_General.simple {
  background-color: transparent;
  border: none;
  text-decoration: underline;
}

/* width */
::-webkit-scrollbar {
  margin-inline: 2px;
  width: 5px;
}

/* Track */
::-webkit-scrollbar-track {
  width: 2px;
  transform: scale(2);
  background: transparent;
}

/* Handle */
::-webkit-scrollbar-thumb {
  width: 5px;
  transform: scale(2);
  background: rgb(189, 189, 189);
  border-radius: 0px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: gray;
}

body {
  background-color: #fff8f1;
}
body * {
  font-family: "Arial";
  margin: 0;
  padding: 0;
}

.Slider_main > .Slider_inputBody input[type=range] {
  appearance: none;
  background: transparent;
  width: 100%;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-thumb {
  position: relative;
  appearance: none;
  width: 9px;
  height: 20px;
  background-color: #FFAD5B;
  transform: translateY(-40%);
  border-radius: 2px 2px;
  z-index: 20;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-runnable-track {
  position: relative;
  cursor: pointer;
  border-radius: 2px 2px;
  height: 20%;
  z-index: 19;
  /* Hides the slider so custom styles can be added */
  background-color: #000000;
}
.Slider_main > .Slider_inputBody > hr {
  position: absolute;
  margin-left: calc((100% - (2.1em + 6px)) / var(--size) * var(--index));
  z-index: 1;
  left: 5px;
  background-color: darkgray;
  width: 0.5px;
  top: 25%;
  height: 50%;
  margin-top: 0;
}
.Slider_main > .Slider_inputBody > hr:nth-child(even) {
  top: 12.5%;
  height: 75%;
}

body {
  position: relative;
  width: 100vw;
  overflow: hidden;
  box-sizing: content-box;
  top: 6vh;
  height: 94vh;
}
@media only screen and (max-width: 980px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 981px) and (max-width: 1199px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 1200px) {
  body {
    font-size: 1em;
  }
}

.Table {
  border: 1px solid black;
  position: relative;
  width: 50%;
}
.Table > div {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}
.Table > div > label {
  position: relative;
  overflow: hidden;
}
.Table > div > span {
  position: relative;
  overflow: hidden;
}

.bold {
  font-weight: bold;
}

.LoadBar {
  z-index: 3;
  border-radius: 0px;
  position: relative !important;
  background-color: red !important;
  width: 100% !important;
  height: 2em !important;
  overflow: hidden;
}
.LoadBar .LoadBar-progress {
  position: relative;
  height: 100%;
  background-color: green !important;
}

.LineDiv {
  position: relative;
  margin: 0;
  padding: 0;
  flex: auto;
  overflow: hidden;
  height: 100%;
  border: none;
}
.LineDiv hr {
  display: block;
  position: relative;
  color: orange;
  background-color: orange;
  opacity: 1;
  width: 0%;
  margin: 0;
  top: 50%;
  visibility: visible;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;
}

@keyframes NavBarLine {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}
.Text-primary {
  color: #000000;
}

.Text-secondary {
  color: #BCBCBC;
}

.Text-small {
  font-size: 0.75em;
}

.SliderDivMain {
  border: 1px solid black;
}

.TextInputDiv {
  position: relative;
  background-color: #fff8f1;
  border-radius: 0px;
  margin: 0.5em;
  margin-bottom: 1.5em;
  font-size: inherit;
  height: 10em;
}
.TextInputDiv textarea {
  position: relative;
  outline: 0;
  resize: none;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 0px !important;
}
.TextInputDiv textarea.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 1.1em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.TextInputDiv textarea::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.TextInputDiv label {
  user-select: none;
  position: absolute;
  z-index: 1;
  width: 100%;
  background-color: #fff8f1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.11em;
  padding-top: 0.39em;
  padding-bottom: 0.13em;
  border-top-right-radius: 5px 5px;
}
.TextInputDiv .horizontalLine {
  position: absolute;
  z-index: 2;
  width: 100%;
  top: 0.89em;
  height: 0px;
  left: 0;
  margin-block: 0px;
  margin-inline: 0.5em;
}

.InputDivMain {
  position: relative;
  background-color: #fff8f1;
  margin: 0.5em;
  height: min-content;
  display: inline-flex;
}
.InputDivMain button {
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}
.InputDivMain button > span {
  position: relative;
  font-size: 1.3em;
}
.InputDivMain button[state*=active] {
  background-color: #ffa228;
}
.InputDivMain button[state*=passive] {
  background-color: transparent;
}
.InputDivMain button[state*=passive]:hover {
  background-color: #FFAD5B;
}
.InputDivMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}
.InputDivMain input {
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 0px !important;
  outline: none;
}
.InputDivMain input.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.InputDivMain input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}
.InputDivMain input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.InputDivMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

@keyframes buttonAnimation {
  from {
    transform: translateY(0em);
    text-underline-offset: 0em;
  }
  to {
    transform: translateY(-0.1em);
    text-underline-offset: 0.2em;
  }
}
@keyframes buttonAnimationB {
  to {
    transform: translateY(0em);
    text-underline-offset: 0em;
  }
  from {
    transform: translateY(-0.1em);
    text-underline-offset: 0.2em;
  }
}
@keyframes buttonIconAnimation {}
@keyframes buttonIconAnimation90 {
  from {
    transform: translateY(0em) rotate(90deg);
  }
  to {
    transform: translateY(-0.1em) rotate(90deg);
  }
}
.RadioButton {
  border: 1px solid black;
  position: relative;
}
.RadioButton > div {
  width: 100%;
  height: 100%;
  position: relative;
  align-items: center;
  display: flex;
  flex-direction: row;
  cursor: pointer;
}
.RadioButton > div > input {
  position: relative;
  margin-inline: 2%;
  cursor: pointer;
}
.RadioButton > div > div {
  position: relative;
  height: 100%;
}
.RadioButton > div > div[id*=Price] {
  font-size: 1em;
  margin-left: auto;
  margin-right: 5%;
}

:root {
  --main-font: "Montserrat";
  --primary: "";
  --primary-text: #333;
}

* {
  margin: 0;
  padding: 0;
  font-family: var(--main-font);
}

.tooltip_S[state*=active]:after, .tooltip_S[state*=active]:before {
  display: none;
}

.tooltip_S[data-tooltip-direction=right] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=right]:after {
  pointer-events: none;
  content: attr(data-tooltip-value);
  position: absolute;
  z-index: 10;
  top: 50%;
  transform: translateY(-50%);
  left: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=right]:before {
  pointer-events: none;
  content: "";
  position: absolute;
  z-index: 10;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-right: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=right]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  left: 110%;
}

.tooltip_S[data-tooltip-direction=right]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  left: 103%;
}

.tooltip_S[data-tooltip-direction=right]:hover:after, .tooltip_S[data-tooltip-direction=right]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=top] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=top]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  bottom: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=top]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  bottom: 130%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after {
  bottom: 120%;
}

.tooltip_S[data-tooltip-direction=top]:hover:before {
  bottom: 103%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after, .tooltip_S[data-tooltip-direction=top]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=left] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=left]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=left]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-left: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  right: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=left]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  right: 110%;
}

.tooltip_S[data-tooltip-direction=left]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  right: 103%;
}

.tooltip_S[data-tooltip-direction=left]:hover:after, .tooltip_S[data-tooltip-direction=left]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=bottom] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=bottom]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=bottom]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-bottom: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  top: 130%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after {
  top: 120%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:before {
  top: 103%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after, .tooltip_S[data-tooltip-direction=bottom]:hover:before {
  opacity: 1;
}

.AdaptiveTableMain {
  position: relative;
  display: block;
  width: 98%;
  height: 100%;
  overflow: hidden;
  overflow-y: auto;
}

.AdaptiveTableMain > .ListMain {
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

.AdaptiveTableMain > .ListMain > .column {
  position: relative;
  width: 90%;
  height: fit-content;
  flex-direction: column;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement {
  user-select: none;
  padding: 0.5em;
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: inline-block;
  height: fit-content;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > img {
  user-select: none;
  box-sizing: border-box;
  overflow: hidden;
  display: block;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  position: relative;
  width: 100%;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv {
  user-select: none;
  border-radius: 5px 5px;
  position: absolute;
  top: 0;
  margin: 0.5em;
  left: 0;
  width: calc(100% - 1em);
  height: calc(100% - 1em);
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
  background-color: rgba(94, 94, 94, 0.471);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv:hover {
  opacity: 1;
  box-shadow: rgba(0, 0, 0, 0.55) 0px 0px 3px, rgba(0, 0, 0, 0.51) 0px 0px 3px;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .informationDiv {
  display: none;
  position: relative;
  top: 0;
  margin: 0.5em;
  border-radius: 5px 5px;
  left: 0;
  background-color: rgba(255, 0, 0, 0.299);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv {
  user-select: none;
  position: absolute;
  bottom: 0;
  left: 0;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv > button {
  user-select: none;
}

.AmountDiv {
  display: flex;
  position: relative;
  border: 1px solid black;
  box-sizing: border-box;
  width: fit-content;
  padding: 0.2em;
}

.AmountDiv > button {
  width: 33%;
  position: relative;
  box-sizing: border-box;
  border-radius: 0px 0px;
}

.AmountDiv > button > span {
  font-size: 1em;
}

.AmountDiv > div {
  position: relative;
  width: 2em;
  margin: 0;
  background-color: transparent;
  padding: 0;
  overflow: hidden;
}

.AmountDiv > div > input {
  font-size: 1em;
  background-color: transparent;
  position: relative;
  border: none;
  outline: none;
  width: 100%;
  height: 100%;
  text-align: center;
}

.button_Default {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.button_Default > span {
  display: block;
}

.button_Default:hover {
  background-color: red;
}

.s-button_basic {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_basic > span {
  display: block;
}

.s-button_link {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_link > span {
  text-decoration: underline;
  color: blue;
  display: block;
}

.s-button_link:hover > span {
  color: rgb(34, 34, 255);
}

.DropDownInputMain {
  position: relative;
  background-color: #ffd7af;
  border-radius: 5px;
  margin: 0.5em;
  font-size: inherit;
}

.DropDownInputMain select {
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.25em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 5px 5px !important;
}

.DropDownInputMain select.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.25em;
}

.DropDownInputMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.DropDownInputMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

.header {
  position: fixed;
  width: 100%;
  height: 4rem;
  display: flex;
  flex-direction: row;
  alignItems: center;
  justifyContent: space-between !important;
  background-color: var(--bg-color);
  box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.2);
}

.header > .logoLinkBox {
  position: relative;
  margin-left: 3rem;
  min-width: 3rem;
  width: auto;
  max-width: 15rem;
  height: 4rem;
  display: flex;
  align-items: center;
  justify-content: start;
  text-decoration: none;
  cursor: pointer;
  user-select: none;
}

.header > .logoLinkBox > .logoIcon {
  position: relative;
  width: 2.5rem;
}

.header > .logoLinkBox > .logoText {
  position: relative;
  margin-left: 0.5rem;
  font-size: 1.3rem;
  font-weight: 600;
  color: #333 !important;
}

.header > .headerNavigation {
  position: absolute;
  right: 3rem;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: end;
}

.header > .headerNavigation > button {
  font-size: 1.1rem;
  margin-left: 1.5rem;
}

.header > .headerNavigation > button > span {
  position: relative;
  text-decoration: none;
  color: #a8a8a8;
}

.S_InputDiv {
  position: relative;
  background-color: #ffd7af;
  margin: 0.5em;
  height: min-content;
  display: flex;
  flex-wrap: wrap;
}

.S_InputDiv > button {
  flex: 0 1;
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}

.S_InputDiv > button > span {
  position: relative;
  font-size: 1.3em;
}

.S_InputDiv > button[state*=active] {
  background-color: #ffa228;
}

.S_InputDiv > button[state*=passive] {
  background-color: transparent;
}

.S_InputDiv > button[state*=passive]:hover {
  background-color: #FFAD5B;
}

.S_InputDiv label.switchLabel {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.S_InputDiv input {
  flex: 2 1;
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 5px 5px !important;
  outline: none;
}

.S_InputDiv input.filled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}

.S_InputDiv input[state*=passive] {
  color: red;
  background-color: #fff1de;
}

.S_InputDiv input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}

.S_InputDiv input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}

.S_InputDiv > .response {
  align-self: flex-end;
  text-align: justify;
  width: 100%;
  color: red;
}

.S_InputDiv .invalidInput {
  color: red;
  background-color: #fff1de;
}

.progressBar_Splint {
  position: absolute;
  width: 10em;
  background-color: blue;
  display: flex;
}

.progressBar_Splint > .S_progressBar_Body {
  width: 100%;
  border: 1px solid black;
}

.progressBar_Splint > .S_progressBar_Body > .S_progressBar_Inner {
  width: 100%;
  height: 100%;
  background-color: red;
}

.S-SliderMain {
  margin-top: 0.4em;
  margin-bottom: 0.4em;
}

.S-SliderMain[drawDivider=true]::after {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-bottom: 1px solid #BDBDBD;
  left: 0;
  margin-top: 0.25em;
  position: relative;
}

.S-SliderMain[drawDivider=true]::before {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-top: 1px solid #BDBDBD;
  left: 0;
  margin-bottom: 0.2em;
  position: relative;
}

.S-SliderMain > .label {
  position: relative;
  width: 100%;
  display: inline-block;
  box-sizing: border-box;
  text-align: left;
}

.S-SliderMain > .contentBody {
  height: 1em;
  display: flex;
}

.S-SliderMain > .contentBody > .sliderBody {
  order: 1;
  height: 100%;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range] {
  width: 100%;
  position: relative;
  font-size: 1em;
  height: 100%;
  display: inline-block;
  outline: none;
  -webkit-appearance: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-runnable-track {
  box-sizing: border-box;
  width: 100%;
  height: 0.5em;
  background: #ffa228;
  border: none;
  border-radius: 10px;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  border: none;
  vertical-align: baseline;
  height: 1em;
  width: 1em;
  border-radius: 10%;
  margin-top: -0.25em;
  background: white;
  box-sizing: border-box;
  border: 1px solid black;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus {
  outline: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus::-webkit-slider-runnable-track {
  background: #ffa228;
}

.S-SliderMain > .contentBody > .sliderBody > datalist {
  display: none;
  height: 20rem;
  margin-top: -23px;
  background-color: red;
  color: red;
}

.S-SliderMain > .contentBody > .sliderBody > datalist > option {
  background-color: red;
  color: red;
  height: 50px;
}

.S-SliderMain > .contentBody > .valueOutput {
  order: 2;
  height: 1em;
  width: 1.5em;
  display: inline-block;
  box-sizing: border-box;
  text-align: center;
}

.S-SliderMain > .contentBody > .valueOutput[hidden=true] {
  display: none;
}

.SlideShow_S {
  position: relative;
  height: 100%;
  overflow-y: visible !important;
  overflow-x: auto;
  box-sizing: border-box;
  white-space: nowrap;
  background-color: transparent;
}

.SlideShow_S > .inner {
  display: inline-block;
  position: relative;
  height: 100%;
  width: max-content;
  margin-left: auto;
  margin-right: auto;
  background-color: transparent;
}

.SlideShow_S > .inner > .listElement {
  position: relative;
  height: calc(100% - 0.4em);
  box-sizing: border-box;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  margin: 0.2em;
  margin-inline: 0.5em;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: end;
  align-items: end;
}

.SlideShow_S > .inner > .listElement > div {
  bottom: 0;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  aspect-ratio: 2/1;
}

.SlideShow_S > .inner > .listElement > div > span {
  font-size: 2em;
}

.subWindow_MAIN {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: all;
  user-select: none;
}

.subWindow_MAIN > .background {
  position: absolute;
  z-index: 1;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: rgba(255, 255, 255, 0.8509803922);
}

.subWindow_MAIN .content {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  position: absolute;
  z-index: 2;
  width: fit-content;
  max-height: 90vh;
  max-width: 90vw;
  overflow: hidden;
  margin: auto;
  left: 50%;
  height: max-content;
  top: 50%;
  user-select: none;
  pointer-events: all;
  transform: translate(-50%, -50%);
}

.subWindow_MAIN .content > button.button_close {
  position: absolute;
  right: 0.5em;
  z-index: 3;
}

.TableMain {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
}

.TableMain > .ListMain {
  position: relative;
  width: 100%;
  height: 100%;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;
}

.TableMain > .ListMain > .ListElement {
  margin: 0.5em;
  position: relative;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement > .ListElementHover {
  position: absolute;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 1;
  margin: 0;
  padding: 0;
  border: inherit;
  box-shadow: inherit;
  border-radius: inherit;
  background-color: rgba(64, 64, 64, 0.63);
  display: flex;
  flex-direction: column;
  transition: opacity 0.2s;
}

.horizontalLine {
  position: relative;
  margin: 0.1rem;
  left: 1%;
  width: 98%;
  opacity: 1;
  color: #BDBDBD;
  border: none;
  border-top: 0.5px solid #BDBDBD;
  background-color: #BDBDBD;
}

.PriceDiv {
  width: max-content;
  height: max-content !important;
  display: inline-block;
  overflow-wrap: anywhere;
  white-space: nowrap;
}

.s-ObjectEditor {
  width: 25rem;
  box-shadow: inset 1px 0px 0px 0px black, 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white;
}

.s-ObjectEditor > .Table2D {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table > tr {
  width: 0rem;
  box-sizing: border-box;
  border-bottom: 1px solid black;
  overflow: visible;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] {
  display: flex;
  flex-direction: column;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] > td[col*="1"] {
  margin-left: 1rem;
}

.s-ObjectEditor > .Table2D > table > tr > td {
  box-sizing: border-box;
  width: 100%;
  overflow: visible;
  padding-left: 0.25rem;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="0"] {
  width: 33%;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="2"] {
  width: min-content;
}

.s-ObjectEditor > .Table2D > table > tr > td > div {
  position: relative;
}

.s-sideBarMobile {
  position: absolute;
  height: 100%;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  width: 200px;
  transform: translateX(-100%);
  transition: transform 1s ease-in;
}

.s-sideBarMobile[s-state*=active] {
  transform: translateX(0);
}

.s-sideBarMobile > .headContainer {
  display: flex;
  padding: 0.25em;
  height: max-content;
  justify-content: center;
  align-items: center;
  box-shadow: 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white, inset 0px -1px 0px 0px gray;
}

.s-sideBarMobile > .headContainer > .headline {
  width: 100%;
  font-size: 2em;
}

.s-sideBarMobile > .headContainer > .buttonClose {
  position: relative;
  height: 100%;
}

.s-sideBarMobile > .content {
  width: 100%;
  height: 100%;
}

.Spinner1 {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}

.Spinner1[state*=passive] {
  visibility: hidden;
}

.Spinner1 > div {
  box-sizing: border-box;
  display: block;
  position: absolute;
  width: 80%;
  height: 80%;
  margin: 10%;
  border: 8px solid #fff;
  border-radius: 50%;
  animation: Spinner1 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
  border-color: #fff transparent transparent transparent;
}

.Spinner1 > div:nth-child(1) {
  animation-delay: -0.45s;
}

.Spinner1 > div:nth-child(2) {
  animation-delay: -0.3s;
}

.Spinner1 > div:nth-child(3) {
  animation-delay: -0.15s;
}

@keyframes Spinner1 {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.DropDownInputMain_S {
  position: relative;
  overflow: visible !important;
}

.DropDownInputMain_S > .S_InputDiv {
  width: 100%;
  margin: 0;
  margin-bottom: 0;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px;
}

.DropDownInputMain_S > .S_InputDiv > input {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > button {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > .response {
  display: none;
}

.DropDownInputMain_S > .DropDown_expander {
  z-index: 120;
  background-color: transparent;
  position: absolute;
  padding: 0;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.DropDownInputMain_S > .DropDown_expander[state*=active] {
  height: 10em;
}

.DropDownInputMain_S > .DropDown_expander[state*=passive] {
  height: 0em;
}

.DropDownInputMain_S > .DropDown_expander > div {
  z-index: 122;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-top: 0.2em;
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div > span {
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain {
  position: relative;
  overflow: visible !important;
}

.n_SelectInputMain > .Select_expander {
  z-index: 1;
  background-color: transparent;
  position: absolute;
  padding: 1%;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.n_SelectInputMain > .Select_expander[state*=active] {
  height: max-content;
  max-height: 10em;
}

.n_SelectInputMain > .Select_expander[state*=passive] {
  height: 0em;
  display: none;
}

.n_SelectInputMain > .Select_expander > div {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-bottom: 0.5em;
  text-align: center;
  cursor: pointer;
  transition: box-shadow 0.2s;
  transition-timing-function: ease-in;
}

.n_SelectInputMain > .Select_expander > div > span {
  text-align: center;
}

.n_SelectInputMain > .Select_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain > .Select_expander > div:hover {
  box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 3px, rgba(0, 0, 0, 0.21) 0px 0px 3px;
}

.n_inputDiv {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

.n_inputDiv > .inputBody {
  display: flex;
  flex-direction: row;
}

.n_inputDiv > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

.n_inputDiv > .inputBody > input:valid, .n_inputDiv > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

.n_inputDiv > .inputBody > input:valid + label span, .n_inputDiv > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

.n_inputDiv > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

.n_inputDiv > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.n_inputDiv > .inputBody > button {
  background-color: transparent;
}

.n_inputDiv > .response > span {
  color: red;
}

s-input {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

s-input > .inputBody {
  display: flex;
  flex-direction: row;
}

s-input > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

s-input > .inputBody > input:valid, s-input > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

s-input > .inputBody > input:valid + label span, s-input > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

s-input > .inputBody > input[state=passive] {
  border-bottom: 2px red solid;
}

s-input > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

s-input > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

s-input > .inputBody > button {
  background-color: transparent;
}

s-input > .response > span {
  color: red;
}

.S-AddressInput {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  column-gap: 0.5em;
  grid-template-areas: "fN fN fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.S-AddressInput > div, .S-AddressInput s-input {
  background-color: transparent;
  box-sizing: border-box;
}

.S-AddressInput > div > .inputBody, .S-AddressInput s-input > .inputBody {
  padding-top: 0.5em;
}

.S-AddressInput > div[identifier*=title], .S-AddressInput s-input[identifier*=title] {
  display: none;
}

.S-AddressInput > div[id*=salutation], .S-AddressInput s-input[id*=salutation] {
  display: none;
  grid-area: none;
}

.S-AddressInput > div[identifier*=firstName], .S-AddressInput s-input[identifier*=firstName] {
  grid-area: fN;
}

.S-AddressInput > div[identifier*=lastName], .S-AddressInput s-input[identifier*=lastName] {
  grid-area: lN;
}

.S-AddressInput > div[identifier*=postcode], .S-AddressInput s-input[identifier*=postcode] {
  grid-area: plz;
}

.S-AddressInput > div[identifier*=city], .S-AddressInput s-input[identifier*=city] {
  grid-area: ct;
}

.S-AddressInput > div[id*=country], .S-AddressInput s-input[id*=country] {
  grid-area: cy;
}

.S-AddressInput > div[identifier*=street], .S-AddressInput s-input[identifier*=street] {
  grid-area: st;
}

.S-AddressInput > div[identifier*=housenumber], .S-AddressInput s-input[identifier*=housenumber] {
  grid-area: hn;
}

.S-AddressInput > div[identifier*=email], .S-AddressInput s-input[identifier*=email] {
  grid-area: ema;
}

.S-AddressInput > div[identifier*=phone], .S-AddressInput s-input[identifier*=phone] {
  grid-area: ph;
}

.S-AddressInput > s-input {
  padding-bottom: -0.5em;
}

.n_RadioButton {
  position: relative;
}

.n_RadioButton > .radio_headline {
  position: relative;
}

.n_RadioButton > .inner {
  position: relative;
}

.n_RadioButton > .inner > div {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
  justify-content: start;
  align-items: center;
}

.n_RadioButton > .inner > div > .inputBody {
  position: relative;
  box-sizing: border-box;
  width: 1em;
  margin: 0.5em;
  height: 1em;
  min-width: 1em;
}

.n_RadioButton > .inner > div > .inputBody > input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span {
  box-sizing: border-box;
  background-color: #2196F3;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span:after {
  box-sizing: border-box;
  display: block;
}

.n_RadioButton > .inner > div > .inputBody > span {
  box-sizing: content-box;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background-color: #eee;
  border-radius: 50%;
}

.n_RadioButton > .inner > div > .inputBody > span:after {
  box-sizing: border-box;
  content: "";
  left: 0;
  top: 0;
  position: absolute;
  display: none;
  margin: 25%;
  width: 50%;
  height: 50%;
  border-radius: 50%;
  background: white;
}

.n_RadioButton > .inner > div > .inputBody:hover input ~ span {
  background-color: #ccc;
}

.toggleButton {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  display: flex;
  justify-content: space-around;
  width: max-content;
  overflow: hidden;
}

.toggleButton > button {
  width: 100%;
  padding: 0.5rem;
  background-color: transparent;
  border: none;
  cursor: pointer;
}

.toggleButton > button:hover {
  background-color: #FFAD5B;
}

.toggleButton > button[state*=active] {
  background-color: #ffa228;
}

.s-ToggleButton_2 {
  width: max-content;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
}

.s-ToggleButton_2 > button {
  border: none;
  border-radius: 0;
  outline: none;
  padding: 0em;
  min-height: 1rem;
  height: 100%;
  width: 100%;
  margin: 0.25em;
}

.s-ToggleButton_2 > button.btFALSE {
  background-color: red;
}

.s-ToggleButton_2 > button.btFALSE[state*=passive] {
  background-color: rgba(255, 0, 0, 0.3);
}

.s-ToggleButton_2 > button.btTRUE {
  background-color: green;
}

.s-ToggleButton_2 > button.btTRUE[state*=passive] {
  background-color: rgba(0, 128, 0, 0.3);
}

.S_SVGElement_BODY {
  position: relative;
  background-color: transparent;
}

.S_SVGElement_BODY > svg {
  position: relative;
}

.addressMenuNewMain > [id*=menuElement] > div {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  grid-template-areas: "salutation salutation fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.addressMenuNewMain > [id*=menuElement] > div > div {
  background-color: transparent;
  box-sizing: border-box;
}

.addressMenuNewMain > [id*=menuElement] > div > div.S_InputDiv {
  padding-bottom: -0.5em;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=title] {
  display: none;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=salutation] {
  grid-area: salutation;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=firstName] {
  grid-area: fN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=lastName] {
  grid-area: lN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=postcode] {
  grid-area: plz;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=city] {
  grid-area: ct;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=country] {
  grid-area: cy;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=street] {
  grid-area: st;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=housenumber] {
  grid-area: hn;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=email] {
  grid-area: ema;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=phone] {
  grid-area: ph;
}

/* Media Queries */
/* ------- */
/* Desktop */
/* ------- */
.CursorMain {
  display: all;
  backface-visibility: hidden;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
  width: 100px;
  height: 100px;
  background-color: red;
  z-index: 999;
}

.customCursor {
  position: absolute;
  box-sizing: content-box;
  will-change: transform;
  margin: 0;
  padding: 0;
  top: 0;
  left: 0;
  pointer-events: none;
  user-select: none;
  display: auto;
  z-index: 1000;
}
.customCursor.red {
  background-color: red;
}
.customCursor.orange {
  color: orange !important;
}

.button_Default {
  user-select: none;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 0px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  box-sizing: content-box;
  margin: 0.5em;
  overflow: hidden;
}
.button_Default > span {
  box-sizing: border-box;
}
.button_Default[state*=active] {
  background-color: #FFAD5B;
}
.button_Default[state*=passive] {
  background-color: #fff1de;
}
.button_Default:hover {
  background-color: #ffa228;
}

.button_General {
  user-select: none;
  background-color: transparent;
  border: none;
  color: #000000;
  display: inline-block;
  font-size: 1em;
  cursor: pointer;
  border-radius: 0px;
}
.button_General > span {
  display: block;
  position: relative;
  text-align: center;
}
.button_General > span:not(.material-symbols-outlined) {
  text-decoration: underline;
}
.button_General > .dropdown {
  position: absolute;
  left: 100%;
  margin-left: 10%;
  top: 0;
  width: fit-content;
  height: max-content;
  overflow: hidden;
}
.button_General:hover > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonAnimation;
}
.button_General:hover > span.material-symbols-outlined {
  color: #ffa228 !important;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonIconAnimation;
}
.button_General:hover > span.material-symbols-outlined.rotate90 {
  animation-name: buttonIconAnimation90;
}
.button_General:hover:after > span {
  color: white;
}
.button_General:hover:after > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-out;
  animation-fill-mode: backwards;
  animation-direction: reverse;
  animation-name: buttonAnimationB;
}
.button_General:hover:after > span.material-symbols-outlined {
  color: #ffa228 !important;
}
.button_General.simple {
  background-color: transparent;
  border: none;
  text-decoration: underline;
}

/* width */
::-webkit-scrollbar {
  margin-inline: 2px;
  width: 5px;
}

/* Track */
::-webkit-scrollbar-track {
  width: 2px;
  transform: scale(2);
  background: transparent;
}

/* Handle */
::-webkit-scrollbar-thumb {
  width: 5px;
  transform: scale(2);
  background: rgb(189, 189, 189);
  border-radius: 0px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: gray;
}

body {
  background-color: #fff8f1;
}
body * {
  font-family: "Arial";
  margin: 0;
  padding: 0;
}

.Slider_main > .Slider_inputBody input[type=range] {
  appearance: none;
  background: transparent;
  width: 100%;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-thumb {
  position: relative;
  appearance: none;
  width: 9px;
  height: 20px;
  background-color: #FFAD5B;
  transform: translateY(-40%);
  border-radius: 2px 2px;
  z-index: 20;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-runnable-track {
  position: relative;
  cursor: pointer;
  border-radius: 2px 2px;
  height: 20%;
  z-index: 19;
  /* Hides the slider so custom styles can be added */
  background-color: #000000;
}
.Slider_main > .Slider_inputBody > hr {
  position: absolute;
  margin-left: calc((100% - (2.1em + 6px)) / var(--size) * var(--index));
  z-index: 1;
  left: 5px;
  background-color: darkgray;
  width: 0.5px;
  top: 25%;
  height: 50%;
  margin-top: 0;
}
.Slider_main > .Slider_inputBody > hr:nth-child(even) {
  top: 12.5%;
  height: 75%;
}

body {
  position: relative;
  width: 100vw;
  overflow: hidden;
  box-sizing: content-box;
  top: 6vh;
  height: 94vh;
}
@media only screen and (max-width: 980px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 981px) and (max-width: 1199px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 1200px) {
  body {
    font-size: 1em;
  }
}

.Table {
  border: 1px solid black;
  position: relative;
  width: 50%;
}
.Table > div {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}
.Table > div > label {
  position: relative;
  overflow: hidden;
}
.Table > div > span {
  position: relative;
  overflow: hidden;
}

.bold {
  font-weight: bold;
}

.LoadBar {
  z-index: 3;
  border-radius: 0px;
  position: relative !important;
  background-color: red !important;
  width: 100% !important;
  height: 2em !important;
  overflow: hidden;
}
.LoadBar .LoadBar-progress {
  position: relative;
  height: 100%;
  background-color: green !important;
}

.LineDiv {
  position: relative;
  margin: 0;
  padding: 0;
  flex: auto;
  overflow: hidden;
  height: 100%;
  border: none;
}
.LineDiv hr {
  display: block;
  position: relative;
  color: orange;
  background-color: orange;
  opacity: 1;
  width: 0%;
  margin: 0;
  top: 50%;
  visibility: visible;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;
}

@keyframes NavBarLine {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}
.Text-primary {
  color: #000000;
}

.Text-secondary {
  color: #BCBCBC;
}

.Text-small {
  font-size: 0.75em;
}

.SliderDivMain {
  border: 1px solid black;
}

.TextInputDiv {
  position: relative;
  background-color: #fff8f1;
  border-radius: 0px;
  margin: 0.5em;
  margin-bottom: 1.5em;
  font-size: inherit;
  height: 10em;
}
.TextInputDiv textarea {
  position: relative;
  outline: 0;
  resize: none;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 0px !important;
}
.TextInputDiv textarea.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 1.1em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.TextInputDiv textarea::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.TextInputDiv label {
  user-select: none;
  position: absolute;
  z-index: 1;
  width: 100%;
  background-color: #fff8f1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.11em;
  padding-top: 0.39em;
  padding-bottom: 0.13em;
  border-top-right-radius: 5px 5px;
}
.TextInputDiv .horizontalLine {
  position: absolute;
  z-index: 2;
  width: 100%;
  top: 0.89em;
  height: 0px;
  left: 0;
  margin-block: 0px;
  margin-inline: 0.5em;
}

.InputDivMain {
  position: relative;
  background-color: #fff8f1;
  margin: 0.5em;
  height: min-content;
  display: inline-flex;
}
.InputDivMain button {
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}
.InputDivMain button > span {
  position: relative;
  font-size: 1.3em;
}
.InputDivMain button[state*=active] {
  background-color: #ffa228;
}
.InputDivMain button[state*=passive] {
  background-color: transparent;
}
.InputDivMain button[state*=passive]:hover {
  background-color: #FFAD5B;
}
.InputDivMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}
.InputDivMain input {
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 0px !important;
  outline: none;
}
.InputDivMain input.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.InputDivMain input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}
.InputDivMain input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.InputDivMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

:root {
  --main-font: "Montserrat";
  --primary: "";
  --primary-text: #333;
}

* {
  margin: 0;
  padding: 0;
  font-family: var(--main-font);
}

.tooltip_S[state*=active]:after, .tooltip_S[state*=active]:before {
  display: none;
}

.tooltip_S[data-tooltip-direction=right] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=right]:after {
  pointer-events: none;
  content: attr(data-tooltip-value);
  position: absolute;
  z-index: 10;
  top: 50%;
  transform: translateY(-50%);
  left: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=right]:before {
  pointer-events: none;
  content: "";
  position: absolute;
  z-index: 10;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-right: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=right]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  left: 110%;
}

.tooltip_S[data-tooltip-direction=right]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  left: 103%;
}

.tooltip_S[data-tooltip-direction=right]:hover:after, .tooltip_S[data-tooltip-direction=right]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=top] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=top]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  bottom: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=top]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  bottom: 130%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after {
  bottom: 120%;
}

.tooltip_S[data-tooltip-direction=top]:hover:before {
  bottom: 103%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after, .tooltip_S[data-tooltip-direction=top]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=left] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=left]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=left]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-left: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  right: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=left]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  right: 110%;
}

.tooltip_S[data-tooltip-direction=left]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  right: 103%;
}

.tooltip_S[data-tooltip-direction=left]:hover:after, .tooltip_S[data-tooltip-direction=left]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=bottom] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=bottom]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=bottom]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-bottom: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  top: 130%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after {
  top: 120%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:before {
  top: 103%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after, .tooltip_S[data-tooltip-direction=bottom]:hover:before {
  opacity: 1;
}

.AdaptiveTableMain {
  position: relative;
  display: block;
  width: 98%;
  height: 100%;
  overflow: hidden;
  overflow-y: auto;
}

.AdaptiveTableMain > .ListMain {
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

.AdaptiveTableMain > .ListMain > .column {
  position: relative;
  width: 90%;
  height: fit-content;
  flex-direction: column;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement {
  user-select: none;
  padding: 0.5em;
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: inline-block;
  height: fit-content;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > img {
  user-select: none;
  box-sizing: border-box;
  overflow: hidden;
  display: block;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  position: relative;
  width: 100%;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv {
  user-select: none;
  border-radius: 5px 5px;
  position: absolute;
  top: 0;
  margin: 0.5em;
  left: 0;
  width: calc(100% - 1em);
  height: calc(100% - 1em);
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
  background-color: rgba(94, 94, 94, 0.471);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv:hover {
  opacity: 1;
  box-shadow: rgba(0, 0, 0, 0.55) 0px 0px 3px, rgba(0, 0, 0, 0.51) 0px 0px 3px;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .informationDiv {
  display: none;
  position: relative;
  top: 0;
  margin: 0.5em;
  border-radius: 5px 5px;
  left: 0;
  background-color: rgba(255, 0, 0, 0.299);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv {
  user-select: none;
  position: absolute;
  bottom: 0;
  left: 0;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv > button {
  user-select: none;
}

.AmountDiv {
  display: flex;
  position: relative;
  border: 1px solid black;
  box-sizing: border-box;
  width: fit-content;
  padding: 0.2em;
}

.AmountDiv > button {
  width: 33%;
  position: relative;
  box-sizing: border-box;
  border-radius: 0px 0px;
}

.AmountDiv > button > span {
  font-size: 1em;
}

.AmountDiv > div {
  position: relative;
  width: 2em;
  margin: 0;
  background-color: transparent;
  padding: 0;
  overflow: hidden;
}

.AmountDiv > div > input {
  font-size: 1em;
  background-color: transparent;
  position: relative;
  border: none;
  outline: none;
  width: 100%;
  height: 100%;
  text-align: center;
}

.button_Default {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.button_Default > span {
  display: block;
}

.button_Default:hover {
  background-color: red;
}

.s-button_basic {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_basic > span {
  display: block;
}

.s-button_link {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_link > span {
  text-decoration: underline;
  color: blue;
  display: block;
}

.s-button_link:hover > span {
  color: rgb(34, 34, 255);
}

.DropDownInputMain {
  position: relative;
  background-color: #ffd7af;
  border-radius: 5px;
  margin: 0.5em;
  font-size: inherit;
}

.DropDownInputMain select {
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.25em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 5px 5px !important;
}

.DropDownInputMain select.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.25em;
}

.DropDownInputMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.DropDownInputMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

.header {
  position: fixed;
  width: 100%;
  height: 4rem;
  display: flex;
  flex-direction: row;
  alignItems: center;
  justifyContent: space-between !important;
  background-color: var(--bg-color);
  box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.2);
}

.header > .logoLinkBox {
  position: relative;
  margin-left: 3rem;
  min-width: 3rem;
  width: auto;
  max-width: 15rem;
  height: 4rem;
  display: flex;
  align-items: center;
  justify-content: start;
  text-decoration: none;
  cursor: pointer;
  user-select: none;
}

.header > .logoLinkBox > .logoIcon {
  position: relative;
  width: 2.5rem;
}

.header > .logoLinkBox > .logoText {
  position: relative;
  margin-left: 0.5rem;
  font-size: 1.3rem;
  font-weight: 600;
  color: #333 !important;
}

.header > .headerNavigation {
  position: absolute;
  right: 3rem;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: end;
}

.header > .headerNavigation > button {
  font-size: 1.1rem;
  margin-left: 1.5rem;
}

.header > .headerNavigation > button > span {
  position: relative;
  text-decoration: none;
  color: #a8a8a8;
}

.S_InputDiv {
  position: relative;
  background-color: #ffd7af;
  margin: 0.5em;
  height: min-content;
  display: flex;
  flex-wrap: wrap;
}

.S_InputDiv > button {
  flex: 0 1;
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}

.S_InputDiv > button > span {
  position: relative;
  font-size: 1.3em;
}

.S_InputDiv > button[state*=active] {
  background-color: #ffa228;
}

.S_InputDiv > button[state*=passive] {
  background-color: transparent;
}

.S_InputDiv > button[state*=passive]:hover {
  background-color: #FFAD5B;
}

.S_InputDiv label.switchLabel {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.S_InputDiv input {
  flex: 2 1;
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 5px 5px !important;
  outline: none;
}

.S_InputDiv input.filled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}

.S_InputDiv input[state*=passive] {
  color: red;
  background-color: #fff1de;
}

.S_InputDiv input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}

.S_InputDiv input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}

.S_InputDiv > .response {
  align-self: flex-end;
  text-align: justify;
  width: 100%;
  color: red;
}

.S_InputDiv .invalidInput {
  color: red;
  background-color: #fff1de;
}

.progressBar_Splint {
  position: absolute;
  width: 10em;
  background-color: blue;
  display: flex;
}

.progressBar_Splint > .S_progressBar_Body {
  width: 100%;
  border: 1px solid black;
}

.progressBar_Splint > .S_progressBar_Body > .S_progressBar_Inner {
  width: 100%;
  height: 100%;
  background-color: red;
}

.S-SliderMain {
  margin-top: 0.4em;
  margin-bottom: 0.4em;
}

.S-SliderMain[drawDivider=true]::after {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-bottom: 1px solid #BDBDBD;
  left: 0;
  margin-top: 0.25em;
  position: relative;
}

.S-SliderMain[drawDivider=true]::before {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-top: 1px solid #BDBDBD;
  left: 0;
  margin-bottom: 0.2em;
  position: relative;
}

.S-SliderMain > .label {
  position: relative;
  width: 100%;
  display: inline-block;
  box-sizing: border-box;
  text-align: left;
}

.S-SliderMain > .contentBody {
  height: 1em;
  display: flex;
}

.S-SliderMain > .contentBody > .sliderBody {
  order: 1;
  height: 100%;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range] {
  width: 100%;
  position: relative;
  font-size: 1em;
  height: 100%;
  display: inline-block;
  outline: none;
  -webkit-appearance: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-runnable-track {
  box-sizing: border-box;
  width: 100%;
  height: 0.5em;
  background: #ffa228;
  border: none;
  border-radius: 10px;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  border: none;
  vertical-align: baseline;
  height: 1em;
  width: 1em;
  border-radius: 10%;
  margin-top: -0.25em;
  background: white;
  box-sizing: border-box;
  border: 1px solid black;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus {
  outline: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus::-webkit-slider-runnable-track {
  background: #ffa228;
}

.S-SliderMain > .contentBody > .sliderBody > datalist {
  display: none;
  height: 20rem;
  margin-top: -23px;
  background-color: red;
  color: red;
}

.S-SliderMain > .contentBody > .sliderBody > datalist > option {
  background-color: red;
  color: red;
  height: 50px;
}

.S-SliderMain > .contentBody > .valueOutput {
  order: 2;
  height: 1em;
  width: 1.5em;
  display: inline-block;
  box-sizing: border-box;
  text-align: center;
}

.S-SliderMain > .contentBody > .valueOutput[hidden=true] {
  display: none;
}

.SlideShow_S {
  position: relative;
  height: 100%;
  overflow-y: visible !important;
  overflow-x: auto;
  box-sizing: border-box;
  white-space: nowrap;
  background-color: transparent;
}

.SlideShow_S > .inner {
  display: inline-block;
  position: relative;
  height: 100%;
  width: max-content;
  margin-left: auto;
  margin-right: auto;
  background-color: transparent;
}

.SlideShow_S > .inner > .listElement {
  position: relative;
  height: calc(100% - 0.4em);
  box-sizing: border-box;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  margin: 0.2em;
  margin-inline: 0.5em;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: end;
  align-items: end;
}

.SlideShow_S > .inner > .listElement > div {
  bottom: 0;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  aspect-ratio: 2/1;
}

.SlideShow_S > .inner > .listElement > div > span {
  font-size: 2em;
}

.subWindow_MAIN {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: all;
  user-select: none;
}

.subWindow_MAIN > .background {
  position: absolute;
  z-index: 1;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: rgba(255, 255, 255, 0.8509803922);
}

.subWindow_MAIN .content {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  position: absolute;
  z-index: 2;
  width: fit-content;
  max-height: 90vh;
  max-width: 90vw;
  overflow: hidden;
  margin: auto;
  left: 50%;
  height: max-content;
  top: 50%;
  user-select: none;
  pointer-events: all;
  transform: translate(-50%, -50%);
}

.subWindow_MAIN .content > button.button_close {
  position: absolute;
  right: 0.5em;
  z-index: 3;
}

.TableMain {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
}

.TableMain > .ListMain {
  position: relative;
  width: 100%;
  height: 100%;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;
}

.TableMain > .ListMain > .ListElement {
  margin: 0.5em;
  position: relative;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement > .ListElementHover {
  position: absolute;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 1;
  margin: 0;
  padding: 0;
  border: inherit;
  box-shadow: inherit;
  border-radius: inherit;
  background-color: rgba(64, 64, 64, 0.63);
  display: flex;
  flex-direction: column;
  transition: opacity 0.2s;
}

.horizontalLine {
  position: relative;
  margin: 0.1rem;
  left: 1%;
  width: 98%;
  opacity: 1;
  color: #BDBDBD;
  border: none;
  border-top: 0.5px solid #BDBDBD;
  background-color: #BDBDBD;
}

.PriceDiv {
  width: max-content;
  height: max-content !important;
  display: inline-block;
  overflow-wrap: anywhere;
  white-space: nowrap;
}

.s-ObjectEditor {
  width: 25rem;
  box-shadow: inset 1px 0px 0px 0px black, 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white;
}

.s-ObjectEditor > .Table2D {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table > tr {
  width: 0rem;
  box-sizing: border-box;
  border-bottom: 1px solid black;
  overflow: visible;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] {
  display: flex;
  flex-direction: column;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] > td[col*="1"] {
  margin-left: 1rem;
}

.s-ObjectEditor > .Table2D > table > tr > td {
  box-sizing: border-box;
  width: 100%;
  overflow: visible;
  padding-left: 0.25rem;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="0"] {
  width: 33%;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="2"] {
  width: min-content;
}

.s-ObjectEditor > .Table2D > table > tr > td > div {
  position: relative;
}

.s-sideBarMobile {
  position: absolute;
  height: 100%;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  width: 200px;
  transform: translateX(-100%);
  transition: transform 1s ease-in;
}

.s-sideBarMobile[s-state*=active] {
  transform: translateX(0);
}

.s-sideBarMobile > .headContainer {
  display: flex;
  padding: 0.25em;
  height: max-content;
  justify-content: center;
  align-items: center;
  box-shadow: 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white, inset 0px -1px 0px 0px gray;
}

.s-sideBarMobile > .headContainer > .headline {
  width: 100%;
  font-size: 2em;
}

.s-sideBarMobile > .headContainer > .buttonClose {
  position: relative;
  height: 100%;
}

.s-sideBarMobile > .content {
  width: 100%;
  height: 100%;
}

.Spinner1 {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}

.Spinner1[state*=passive] {
  visibility: hidden;
}

.Spinner1 > div {
  box-sizing: border-box;
  display: block;
  position: absolute;
  width: 80%;
  height: 80%;
  margin: 10%;
  border: 8px solid #fff;
  border-radius: 50%;
  animation: Spinner1 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
  border-color: #fff transparent transparent transparent;
}

.Spinner1 > div:nth-child(1) {
  animation-delay: -0.45s;
}

.Spinner1 > div:nth-child(2) {
  animation-delay: -0.3s;
}

.Spinner1 > div:nth-child(3) {
  animation-delay: -0.15s;
}

@keyframes Spinner1 {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.DropDownInputMain_S {
  position: relative;
  overflow: visible !important;
}

.DropDownInputMain_S > .S_InputDiv {
  width: 100%;
  margin: 0;
  margin-bottom: 0;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px;
}

.DropDownInputMain_S > .S_InputDiv > input {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > button {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > .response {
  display: none;
}

.DropDownInputMain_S > .DropDown_expander {
  z-index: 120;
  background-color: transparent;
  position: absolute;
  padding: 0;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.DropDownInputMain_S > .DropDown_expander[state*=active] {
  height: 10em;
}

.DropDownInputMain_S > .DropDown_expander[state*=passive] {
  height: 0em;
}

.DropDownInputMain_S > .DropDown_expander > div {
  z-index: 122;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-top: 0.2em;
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div > span {
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain {
  position: relative;
  overflow: visible !important;
}

.n_SelectInputMain > .Select_expander {
  z-index: 1;
  background-color: transparent;
  position: absolute;
  padding: 1%;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.n_SelectInputMain > .Select_expander[state*=active] {
  height: max-content;
  max-height: 10em;
}

.n_SelectInputMain > .Select_expander[state*=passive] {
  height: 0em;
  display: none;
}

.n_SelectInputMain > .Select_expander > div {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-bottom: 0.5em;
  text-align: center;
  cursor: pointer;
  transition: box-shadow 0.2s;
  transition-timing-function: ease-in;
}

.n_SelectInputMain > .Select_expander > div > span {
  text-align: center;
}

.n_SelectInputMain > .Select_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain > .Select_expander > div:hover {
  box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 3px, rgba(0, 0, 0, 0.21) 0px 0px 3px;
}

.n_inputDiv {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

.n_inputDiv > .inputBody {
  display: flex;
  flex-direction: row;
}

.n_inputDiv > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

.n_inputDiv > .inputBody > input:valid, .n_inputDiv > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

.n_inputDiv > .inputBody > input:valid + label span, .n_inputDiv > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

.n_inputDiv > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

.n_inputDiv > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.n_inputDiv > .inputBody > button {
  background-color: transparent;
}

.n_inputDiv > .response > span {
  color: red;
}

s-input {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

s-input > .inputBody {
  display: flex;
  flex-direction: row;
}

s-input > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

s-input > .inputBody > input:valid, s-input > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

s-input > .inputBody > input:valid + label span, s-input > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

s-input > .inputBody > input[state=passive] {
  border-bottom: 2px red solid;
}

s-input > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

s-input > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

s-input > .inputBody > button {
  background-color: transparent;
}

s-input > .response > span {
  color: red;
}

.S-AddressInput {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  column-gap: 0.5em;
  grid-template-areas: "fN fN fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.S-AddressInput > div, .S-AddressInput s-input {
  background-color: transparent;
  box-sizing: border-box;
}

.S-AddressInput > div > .inputBody, .S-AddressInput s-input > .inputBody {
  padding-top: 0.5em;
}

.S-AddressInput > div[identifier*=title], .S-AddressInput s-input[identifier*=title] {
  display: none;
}

.S-AddressInput > div[id*=salutation], .S-AddressInput s-input[id*=salutation] {
  display: none;
  grid-area: none;
}

.S-AddressInput > div[identifier*=firstName], .S-AddressInput s-input[identifier*=firstName] {
  grid-area: fN;
}

.S-AddressInput > div[identifier*=lastName], .S-AddressInput s-input[identifier*=lastName] {
  grid-area: lN;
}

.S-AddressInput > div[identifier*=postcode], .S-AddressInput s-input[identifier*=postcode] {
  grid-area: plz;
}

.S-AddressInput > div[identifier*=city], .S-AddressInput s-input[identifier*=city] {
  grid-area: ct;
}

.S-AddressInput > div[id*=country], .S-AddressInput s-input[id*=country] {
  grid-area: cy;
}

.S-AddressInput > div[identifier*=street], .S-AddressInput s-input[identifier*=street] {
  grid-area: st;
}

.S-AddressInput > div[identifier*=housenumber], .S-AddressInput s-input[identifier*=housenumber] {
  grid-area: hn;
}

.S-AddressInput > div[identifier*=email], .S-AddressInput s-input[identifier*=email] {
  grid-area: ema;
}

.S-AddressInput > div[identifier*=phone], .S-AddressInput s-input[identifier*=phone] {
  grid-area: ph;
}

.S-AddressInput > s-input {
  padding-bottom: -0.5em;
}

.n_RadioButton {
  position: relative;
}

.n_RadioButton > .radio_headline {
  position: relative;
}

.n_RadioButton > .inner {
  position: relative;
}

.n_RadioButton > .inner > div {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
  justify-content: start;
  align-items: center;
}

.n_RadioButton > .inner > div > .inputBody {
  position: relative;
  box-sizing: border-box;
  width: 1em;
  margin: 0.5em;
  height: 1em;
  min-width: 1em;
}

.n_RadioButton > .inner > div > .inputBody > input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span {
  box-sizing: border-box;
  background-color: #2196F3;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span:after {
  box-sizing: border-box;
  display: block;
}

.n_RadioButton > .inner > div > .inputBody > span {
  box-sizing: content-box;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background-color: #eee;
  border-radius: 50%;
}

.n_RadioButton > .inner > div > .inputBody > span:after {
  box-sizing: border-box;
  content: "";
  left: 0;
  top: 0;
  position: absolute;
  display: none;
  margin: 25%;
  width: 50%;
  height: 50%;
  border-radius: 50%;
  background: white;
}

.n_RadioButton > .inner > div > .inputBody:hover input ~ span {
  background-color: #ccc;
}

.toggleButton {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  display: flex;
  justify-content: space-around;
  width: max-content;
  overflow: hidden;
}

.toggleButton > button {
  width: 100%;
  padding: 0.5rem;
  background-color: transparent;
  border: none;
  cursor: pointer;
}

.toggleButton > button:hover {
  background-color: #FFAD5B;
}

.toggleButton > button[state*=active] {
  background-color: #ffa228;
}

.s-ToggleButton_2 {
  width: max-content;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
}

.s-ToggleButton_2 > button {
  border: none;
  border-radius: 0;
  outline: none;
  padding: 0em;
  min-height: 1rem;
  height: 100%;
  width: 100%;
  margin: 0.25em;
}

.s-ToggleButton_2 > button.btFALSE {
  background-color: red;
}

.s-ToggleButton_2 > button.btFALSE[state*=passive] {
  background-color: rgba(255, 0, 0, 0.3);
}

.s-ToggleButton_2 > button.btTRUE {
  background-color: green;
}

.s-ToggleButton_2 > button.btTRUE[state*=passive] {
  background-color: rgba(0, 128, 0, 0.3);
}

.S_SVGElement_BODY {
  position: relative;
  background-color: transparent;
}

.S_SVGElement_BODY > svg {
  position: relative;
}

.addressMenuNewMain > [id*=menuElement] > div {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  grid-template-areas: "salutation salutation fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.addressMenuNewMain > [id*=menuElement] > div > div {
  background-color: transparent;
  box-sizing: border-box;
}

.addressMenuNewMain > [id*=menuElement] > div > div.S_InputDiv {
  padding-bottom: -0.5em;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=title] {
  display: none;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=salutation] {
  grid-area: salutation;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=firstName] {
  grid-area: fN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=lastName] {
  grid-area: lN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=postcode] {
  grid-area: plz;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=city] {
  grid-area: ct;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=country] {
  grid-area: cy;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=street] {
  grid-area: st;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=housenumber] {
  grid-area: hn;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=email] {
  grid-area: ema;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=phone] {
  grid-area: ph;
}

/* Media Queries */
/* ------- */
/* Desktop */
/* ------- */
.CursorMain {
  display: all;
  backface-visibility: hidden;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
  width: 100px;
  height: 100px;
  background-color: red;
  z-index: 999;
}

.customCursor {
  position: absolute;
  box-sizing: content-box;
  will-change: transform;
  margin: 0;
  padding: 0;
  top: 0;
  left: 0;
  pointer-events: none;
  user-select: none;
  display: auto;
  z-index: 1000;
}
.customCursor.red {
  background-color: red;
}
.customCursor.orange {
  color: orange !important;
}

.button_Default {
  user-select: none;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 0px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  box-sizing: content-box;
  margin: 0.5em;
  overflow: hidden;
}
.button_Default > span {
  box-sizing: border-box;
}
.button_Default[state*=active] {
  background-color: #FFAD5B;
}
.button_Default[state*=passive] {
  background-color: #fff1de;
}
.button_Default:hover {
  background-color: #ffa228;
}

.button_General {
  user-select: none;
  background-color: transparent;
  border: none;
  color: #000000;
  display: inline-block;
  font-size: 1em;
  cursor: pointer;
  border-radius: 0px;
}
.button_General > span {
  display: block;
  position: relative;
  text-align: center;
}
.button_General > span:not(.material-symbols-outlined) {
  text-decoration: underline;
}
.button_General > .dropdown {
  position: absolute;
  left: 100%;
  margin-left: 10%;
  top: 0;
  width: fit-content;
  height: max-content;
  overflow: hidden;
}
.button_General:hover > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonAnimation;
}
.button_General:hover > span.material-symbols-outlined {
  color: #ffa228 !important;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonIconAnimation;
}
.button_General:hover > span.material-symbols-outlined.rotate90 {
  animation-name: buttonIconAnimation90;
}
.button_General:hover:after > span {
  color: white;
}
.button_General:hover:after > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-out;
  animation-fill-mode: backwards;
  animation-direction: reverse;
  animation-name: buttonAnimationB;
}
.button_General:hover:after > span.material-symbols-outlined {
  color: #ffa228 !important;
}
.button_General.simple {
  background-color: transparent;
  border: none;
  text-decoration: underline;
}

/* width */
::-webkit-scrollbar {
  margin-inline: 2px;
  width: 5px;
}

/* Track */
::-webkit-scrollbar-track {
  width: 2px;
  transform: scale(2);
  background: transparent;
}

/* Handle */
::-webkit-scrollbar-thumb {
  width: 5px;
  transform: scale(2);
  background: rgb(189, 189, 189);
  border-radius: 0px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: gray;
}

body {
  background-color: #fff8f1;
}
body * {
  font-family: "Arial";
  margin: 0;
  padding: 0;
}

.Slider_main > .Slider_inputBody input[type=range] {
  appearance: none;
  background: transparent;
  width: 100%;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-thumb {
  position: relative;
  appearance: none;
  width: 9px;
  height: 20px;
  background-color: #FFAD5B;
  transform: translateY(-40%);
  border-radius: 2px 2px;
  z-index: 20;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-runnable-track {
  position: relative;
  cursor: pointer;
  border-radius: 2px 2px;
  height: 20%;
  z-index: 19;
  /* Hides the slider so custom styles can be added */
  background-color: #000000;
}
.Slider_main > .Slider_inputBody > hr {
  position: absolute;
  margin-left: calc((100% - (2.1em + 6px)) / var(--size) * var(--index));
  z-index: 1;
  left: 5px;
  background-color: darkgray;
  width: 0.5px;
  top: 25%;
  height: 50%;
  margin-top: 0;
}
.Slider_main > .Slider_inputBody > hr:nth-child(even) {
  top: 12.5%;
  height: 75%;
}

body {
  position: relative;
  width: 100vw;
  overflow: hidden;
  box-sizing: content-box;
  top: 6vh;
  height: 94vh;
}
@media only screen and (max-width: 980px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 981px) and (max-width: 1199px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 1200px) {
  body {
    font-size: 1em;
  }
}

.Table {
  border: 1px solid black;
  position: relative;
  width: 50%;
}
.Table > div {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}
.Table > div > label {
  position: relative;
  overflow: hidden;
}
.Table > div > span {
  position: relative;
  overflow: hidden;
}

.bold {
  font-weight: bold;
}

.LoadBar {
  z-index: 3;
  border-radius: 0px;
  position: relative !important;
  background-color: red !important;
  width: 100% !important;
  height: 2em !important;
  overflow: hidden;
}
.LoadBar .LoadBar-progress {
  position: relative;
  height: 100%;
  background-color: green !important;
}

.LineDiv {
  position: relative;
  margin: 0;
  padding: 0;
  flex: auto;
  overflow: hidden;
  height: 100%;
  border: none;
}
.LineDiv hr {
  display: block;
  position: relative;
  color: orange;
  background-color: orange;
  opacity: 1;
  width: 0%;
  margin: 0;
  top: 50%;
  visibility: visible;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;
}

@keyframes NavBarLine {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}
.Text-primary {
  color: #000000;
}

.Text-secondary {
  color: #BCBCBC;
}

.Text-small {
  font-size: 0.75em;
}

.SliderDivMain {
  border: 1px solid black;
}

.TextInputDiv {
  position: relative;
  background-color: #fff8f1;
  border-radius: 0px;
  margin: 0.5em;
  margin-bottom: 1.5em;
  font-size: inherit;
  height: 10em;
}
.TextInputDiv textarea {
  position: relative;
  outline: 0;
  resize: none;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 0px !important;
}
.TextInputDiv textarea.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 1.1em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.TextInputDiv textarea::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.TextInputDiv label {
  user-select: none;
  position: absolute;
  z-index: 1;
  width: 100%;
  background-color: #fff8f1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.11em;
  padding-top: 0.39em;
  padding-bottom: 0.13em;
  border-top-right-radius: 5px 5px;
}
.TextInputDiv .horizontalLine {
  position: absolute;
  z-index: 2;
  width: 100%;
  top: 0.89em;
  height: 0px;
  left: 0;
  margin-block: 0px;
  margin-inline: 0.5em;
}

.InputDivMain {
  position: relative;
  background-color: #fff8f1;
  margin: 0.5em;
  height: min-content;
  display: inline-flex;
}
.InputDivMain button {
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}
.InputDivMain button > span {
  position: relative;
  font-size: 1.3em;
}
.InputDivMain button[state*=active] {
  background-color: #ffa228;
}
.InputDivMain button[state*=passive] {
  background-color: transparent;
}
.InputDivMain button[state*=passive]:hover {
  background-color: #FFAD5B;
}
.InputDivMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}
.InputDivMain input {
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 0px !important;
  outline: none;
}
.InputDivMain input.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.InputDivMain input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}
.InputDivMain input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.InputDivMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

@keyframes buttonAnimation {
  from {
    transform: translateY(0em);
    text-underline-offset: 0em;
  }
  to {
    transform: translateY(-0.1em);
    text-underline-offset: 0.2em;
  }
}
@keyframes buttonAnimationB {
  to {
    transform: translateY(0em);
    text-underline-offset: 0em;
  }
  from {
    transform: translateY(-0.1em);
    text-underline-offset: 0.2em;
  }
}
@keyframes buttonIconAnimation {}
@keyframes buttonIconAnimation90 {
  from {
    transform: translateY(0em) rotate(90deg);
  }
  to {
    transform: translateY(-0.1em) rotate(90deg);
  }
}
.RadioButton {
  border: 1px solid black;
  position: relative;
}
.RadioButton > div {
  width: 100%;
  height: 100%;
  position: relative;
  align-items: center;
  display: flex;
  flex-direction: row;
  cursor: pointer;
}
.RadioButton > div > input {
  position: relative;
  margin-inline: 2%;
  cursor: pointer;
}
.RadioButton > div > div {
  position: relative;
  height: 100%;
}
.RadioButton > div > div[id*=Price] {
  font-size: 1em;
  margin-left: auto;
  margin-right: 5%;
}

:root {
  --main-font: "Montserrat";
  --primary: "";
  --primary-text: #333;
}

* {
  margin: 0;
  padding: 0;
  font-family: var(--main-font);
}

.tooltip_S[state*=active]:after, .tooltip_S[state*=active]:before {
  display: none;
}

.tooltip_S[data-tooltip-direction=right] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=right]:after {
  pointer-events: none;
  content: attr(data-tooltip-value);
  position: absolute;
  z-index: 10;
  top: 50%;
  transform: translateY(-50%);
  left: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=right]:before {
  pointer-events: none;
  content: "";
  position: absolute;
  z-index: 10;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-right: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=right]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  left: 110%;
}

.tooltip_S[data-tooltip-direction=right]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  left: 103%;
}

.tooltip_S[data-tooltip-direction=right]:hover:after, .tooltip_S[data-tooltip-direction=right]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=top] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=top]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  bottom: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=top]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  bottom: 130%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after {
  bottom: 120%;
}

.tooltip_S[data-tooltip-direction=top]:hover:before {
  bottom: 103%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after, .tooltip_S[data-tooltip-direction=top]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=left] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=left]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=left]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-left: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  right: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=left]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  right: 110%;
}

.tooltip_S[data-tooltip-direction=left]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  right: 103%;
}

.tooltip_S[data-tooltip-direction=left]:hover:after, .tooltip_S[data-tooltip-direction=left]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=bottom] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=bottom]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=bottom]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-bottom: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  top: 130%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after {
  top: 120%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:before {
  top: 103%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after, .tooltip_S[data-tooltip-direction=bottom]:hover:before {
  opacity: 1;
}

.AdaptiveTableMain {
  position: relative;
  display: block;
  width: 98%;
  height: 100%;
  overflow: hidden;
  overflow-y: auto;
}

.AdaptiveTableMain > .ListMain {
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

.AdaptiveTableMain > .ListMain > .column {
  position: relative;
  width: 90%;
  height: fit-content;
  flex-direction: column;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement {
  user-select: none;
  padding: 0.5em;
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: inline-block;
  height: fit-content;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > img {
  user-select: none;
  box-sizing: border-box;
  overflow: hidden;
  display: block;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  position: relative;
  width: 100%;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv {
  user-select: none;
  border-radius: 5px 5px;
  position: absolute;
  top: 0;
  margin: 0.5em;
  left: 0;
  width: calc(100% - 1em);
  height: calc(100% - 1em);
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
  background-color: rgba(94, 94, 94, 0.471);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv:hover {
  opacity: 1;
  box-shadow: rgba(0, 0, 0, 0.55) 0px 0px 3px, rgba(0, 0, 0, 0.51) 0px 0px 3px;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .informationDiv {
  display: none;
  position: relative;
  top: 0;
  margin: 0.5em;
  border-radius: 5px 5px;
  left: 0;
  background-color: rgba(255, 0, 0, 0.299);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv {
  user-select: none;
  position: absolute;
  bottom: 0;
  left: 0;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv > button {
  user-select: none;
}

.AmountDiv {
  display: flex;
  position: relative;
  border: 1px solid black;
  box-sizing: border-box;
  width: fit-content;
  padding: 0.2em;
}

.AmountDiv > button {
  width: 33%;
  position: relative;
  box-sizing: border-box;
  border-radius: 0px 0px;
}

.AmountDiv > button > span {
  font-size: 1em;
}

.AmountDiv > div {
  position: relative;
  width: 2em;
  margin: 0;
  background-color: transparent;
  padding: 0;
  overflow: hidden;
}

.AmountDiv > div > input {
  font-size: 1em;
  background-color: transparent;
  position: relative;
  border: none;
  outline: none;
  width: 100%;
  height: 100%;
  text-align: center;
}

.button_Default {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.button_Default > span {
  display: block;
}

.button_Default:hover {
  background-color: red;
}

.s-button_basic {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_basic > span {
  display: block;
}

.s-button_link {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_link > span {
  text-decoration: underline;
  color: blue;
  display: block;
}

.s-button_link:hover > span {
  color: rgb(34, 34, 255);
}

.DropDownInputMain {
  position: relative;
  background-color: #ffd7af;
  border-radius: 5px;
  margin: 0.5em;
  font-size: inherit;
}

.DropDownInputMain select {
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.25em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 5px 5px !important;
}

.DropDownInputMain select.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.25em;
}

.DropDownInputMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.DropDownInputMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

.header {
  position: fixed;
  width: 100%;
  height: 4rem;
  display: flex;
  flex-direction: row;
  alignItems: center;
  justifyContent: space-between !important;
  background-color: var(--bg-color);
  box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.2);
}

.header > .logoLinkBox {
  position: relative;
  margin-left: 3rem;
  min-width: 3rem;
  width: auto;
  max-width: 15rem;
  height: 4rem;
  display: flex;
  align-items: center;
  justify-content: start;
  text-decoration: none;
  cursor: pointer;
  user-select: none;
}

.header > .logoLinkBox > .logoIcon {
  position: relative;
  width: 2.5rem;
}

.header > .logoLinkBox > .logoText {
  position: relative;
  margin-left: 0.5rem;
  font-size: 1.3rem;
  font-weight: 600;
  color: #333 !important;
}

.header > .headerNavigation {
  position: absolute;
  right: 3rem;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: end;
}

.header > .headerNavigation > button {
  font-size: 1.1rem;
  margin-left: 1.5rem;
}

.header > .headerNavigation > button > span {
  position: relative;
  text-decoration: none;
  color: #a8a8a8;
}

.S_InputDiv {
  position: relative;
  background-color: #ffd7af;
  margin: 0.5em;
  height: min-content;
  display: flex;
  flex-wrap: wrap;
}

.S_InputDiv > button {
  flex: 0 1;
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}

.S_InputDiv > button > span {
  position: relative;
  font-size: 1.3em;
}

.S_InputDiv > button[state*=active] {
  background-color: #ffa228;
}

.S_InputDiv > button[state*=passive] {
  background-color: transparent;
}

.S_InputDiv > button[state*=passive]:hover {
  background-color: #FFAD5B;
}

.S_InputDiv label.switchLabel {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.S_InputDiv input {
  flex: 2 1;
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 5px 5px !important;
  outline: none;
}

.S_InputDiv input.filled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}

.S_InputDiv input[state*=passive] {
  color: red;
  background-color: #fff1de;
}

.S_InputDiv input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}

.S_InputDiv input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}

.S_InputDiv > .response {
  align-self: flex-end;
  text-align: justify;
  width: 100%;
  color: red;
}

.S_InputDiv .invalidInput {
  color: red;
  background-color: #fff1de;
}

.progressBar_Splint {
  position: absolute;
  width: 10em;
  background-color: blue;
  display: flex;
}

.progressBar_Splint > .S_progressBar_Body {
  width: 100%;
  border: 1px solid black;
}

.progressBar_Splint > .S_progressBar_Body > .S_progressBar_Inner {
  width: 100%;
  height: 100%;
  background-color: red;
}

.S-SliderMain {
  margin-top: 0.4em;
  margin-bottom: 0.4em;
}

.S-SliderMain[drawDivider=true]::after {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-bottom: 1px solid #BDBDBD;
  left: 0;
  margin-top: 0.25em;
  position: relative;
}

.S-SliderMain[drawDivider=true]::before {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-top: 1px solid #BDBDBD;
  left: 0;
  margin-bottom: 0.2em;
  position: relative;
}

.S-SliderMain > .label {
  position: relative;
  width: 100%;
  display: inline-block;
  box-sizing: border-box;
  text-align: left;
}

.S-SliderMain > .contentBody {
  height: 1em;
  display: flex;
}

.S-SliderMain > .contentBody > .sliderBody {
  order: 1;
  height: 100%;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range] {
  width: 100%;
  position: relative;
  font-size: 1em;
  height: 100%;
  display: inline-block;
  outline: none;
  -webkit-appearance: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-runnable-track {
  box-sizing: border-box;
  width: 100%;
  height: 0.5em;
  background: #ffa228;
  border: none;
  border-radius: 10px;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  border: none;
  vertical-align: baseline;
  height: 1em;
  width: 1em;
  border-radius: 10%;
  margin-top: -0.25em;
  background: white;
  box-sizing: border-box;
  border: 1px solid black;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus {
  outline: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus::-webkit-slider-runnable-track {
  background: #ffa228;
}

.S-SliderMain > .contentBody > .sliderBody > datalist {
  display: none;
  height: 20rem;
  margin-top: -23px;
  background-color: red;
  color: red;
}

.S-SliderMain > .contentBody > .sliderBody > datalist > option {
  background-color: red;
  color: red;
  height: 50px;
}

.S-SliderMain > .contentBody > .valueOutput {
  order: 2;
  height: 1em;
  width: 1.5em;
  display: inline-block;
  box-sizing: border-box;
  text-align: center;
}

.S-SliderMain > .contentBody > .valueOutput[hidden=true] {
  display: none;
}

.SlideShow_S {
  position: relative;
  height: 100%;
  overflow-y: visible !important;
  overflow-x: auto;
  box-sizing: border-box;
  white-space: nowrap;
  background-color: transparent;
}

.SlideShow_S > .inner {
  display: inline-block;
  position: relative;
  height: 100%;
  width: max-content;
  margin-left: auto;
  margin-right: auto;
  background-color: transparent;
}

.SlideShow_S > .inner > .listElement {
  position: relative;
  height: calc(100% - 0.4em);
  box-sizing: border-box;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  margin: 0.2em;
  margin-inline: 0.5em;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: end;
  align-items: end;
}

.SlideShow_S > .inner > .listElement > div {
  bottom: 0;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  aspect-ratio: 2/1;
}

.SlideShow_S > .inner > .listElement > div > span {
  font-size: 2em;
}

.subWindow_MAIN {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: all;
  user-select: none;
}

.subWindow_MAIN > .background {
  position: absolute;
  z-index: 1;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: rgba(255, 255, 255, 0.8509803922);
}

.subWindow_MAIN .content {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  position: absolute;
  z-index: 2;
  width: fit-content;
  max-height: 90vh;
  max-width: 90vw;
  overflow: hidden;
  margin: auto;
  left: 50%;
  height: max-content;
  top: 50%;
  user-select: none;
  pointer-events: all;
  transform: translate(-50%, -50%);
}

.subWindow_MAIN .content > button.button_close {
  position: absolute;
  right: 0.5em;
  z-index: 3;
}

.TableMain {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
}

.TableMain > .ListMain {
  position: relative;
  width: 100%;
  height: 100%;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;
}

.TableMain > .ListMain > .ListElement {
  margin: 0.5em;
  position: relative;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement > .ListElementHover {
  position: absolute;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 1;
  margin: 0;
  padding: 0;
  border: inherit;
  box-shadow: inherit;
  border-radius: inherit;
  background-color: rgba(64, 64, 64, 0.63);
  display: flex;
  flex-direction: column;
  transition: opacity 0.2s;
}

.horizontalLine {
  position: relative;
  margin: 0.1rem;
  left: 1%;
  width: 98%;
  opacity: 1;
  color: #BDBDBD;
  border: none;
  border-top: 0.5px solid #BDBDBD;
  background-color: #BDBDBD;
}

.PriceDiv {
  width: max-content;
  height: max-content !important;
  display: inline-block;
  overflow-wrap: anywhere;
  white-space: nowrap;
}

.s-ObjectEditor {
  width: 25rem;
  box-shadow: inset 1px 0px 0px 0px black, 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white;
}

.s-ObjectEditor > .Table2D {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table > tr {
  width: 0rem;
  box-sizing: border-box;
  border-bottom: 1px solid black;
  overflow: visible;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] {
  display: flex;
  flex-direction: column;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] > td[col*="1"] {
  margin-left: 1rem;
}

.s-ObjectEditor > .Table2D > table > tr > td {
  box-sizing: border-box;
  width: 100%;
  overflow: visible;
  padding-left: 0.25rem;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="0"] {
  width: 33%;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="2"] {
  width: min-content;
}

.s-ObjectEditor > .Table2D > table > tr > td > div {
  position: relative;
}

.s-sideBarMobile {
  position: absolute;
  height: 100%;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  width: 200px;
  transform: translateX(-100%);
  transition: transform 1s ease-in;
}

.s-sideBarMobile[s-state*=active] {
  transform: translateX(0);
}

.s-sideBarMobile > .headContainer {
  display: flex;
  padding: 0.25em;
  height: max-content;
  justify-content: center;
  align-items: center;
  box-shadow: 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white, inset 0px -1px 0px 0px gray;
}

.s-sideBarMobile > .headContainer > .headline {
  width: 100%;
  font-size: 2em;
}

.s-sideBarMobile > .headContainer > .buttonClose {
  position: relative;
  height: 100%;
}

.s-sideBarMobile > .content {
  width: 100%;
  height: 100%;
}

.Spinner1 {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}

.Spinner1[state*=passive] {
  visibility: hidden;
}

.Spinner1 > div {
  box-sizing: border-box;
  display: block;
  position: absolute;
  width: 80%;
  height: 80%;
  margin: 10%;
  border: 8px solid #fff;
  border-radius: 50%;
  animation: Spinner1 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
  border-color: #fff transparent transparent transparent;
}

.Spinner1 > div:nth-child(1) {
  animation-delay: -0.45s;
}

.Spinner1 > div:nth-child(2) {
  animation-delay: -0.3s;
}

.Spinner1 > div:nth-child(3) {
  animation-delay: -0.15s;
}

@keyframes Spinner1 {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.DropDownInputMain_S {
  position: relative;
  overflow: visible !important;
}

.DropDownInputMain_S > .S_InputDiv {
  width: 100%;
  margin: 0;
  margin-bottom: 0;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px;
}

.DropDownInputMain_S > .S_InputDiv > input {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > button {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > .response {
  display: none;
}

.DropDownInputMain_S > .DropDown_expander {
  z-index: 120;
  background-color: transparent;
  position: absolute;
  padding: 0;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.DropDownInputMain_S > .DropDown_expander[state*=active] {
  height: 10em;
}

.DropDownInputMain_S > .DropDown_expander[state*=passive] {
  height: 0em;
}

.DropDownInputMain_S > .DropDown_expander > div {
  z-index: 122;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-top: 0.2em;
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div > span {
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain {
  position: relative;
  overflow: visible !important;
}

.n_SelectInputMain > .Select_expander {
  z-index: 1;
  background-color: transparent;
  position: absolute;
  padding: 1%;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.n_SelectInputMain > .Select_expander[state*=active] {
  height: max-content;
  max-height: 10em;
}

.n_SelectInputMain > .Select_expander[state*=passive] {
  height: 0em;
  display: none;
}

.n_SelectInputMain > .Select_expander > div {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-bottom: 0.5em;
  text-align: center;
  cursor: pointer;
  transition: box-shadow 0.2s;
  transition-timing-function: ease-in;
}

.n_SelectInputMain > .Select_expander > div > span {
  text-align: center;
}

.n_SelectInputMain > .Select_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain > .Select_expander > div:hover {
  box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 3px, rgba(0, 0, 0, 0.21) 0px 0px 3px;
}

.n_inputDiv {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

.n_inputDiv > .inputBody {
  display: flex;
  flex-direction: row;
}

.n_inputDiv > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

.n_inputDiv > .inputBody > input:valid, .n_inputDiv > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

.n_inputDiv > .inputBody > input:valid + label span, .n_inputDiv > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

.n_inputDiv > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

.n_inputDiv > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.n_inputDiv > .inputBody > button {
  background-color: transparent;
}

.n_inputDiv > .response > span {
  color: red;
}

s-input {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

s-input > .inputBody {
  display: flex;
  flex-direction: row;
}

s-input > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

s-input > .inputBody > input:valid, s-input > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

s-input > .inputBody > input:valid + label span, s-input > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

s-input > .inputBody > input[state=passive] {
  border-bottom: 2px red solid;
}

s-input > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

s-input > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

s-input > .inputBody > button {
  background-color: transparent;
}

s-input > .response > span {
  color: red;
}

.S-AddressInput {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  column-gap: 0.5em;
  grid-template-areas: "fN fN fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.S-AddressInput > div, .S-AddressInput s-input {
  background-color: transparent;
  box-sizing: border-box;
}

.S-AddressInput > div > .inputBody, .S-AddressInput s-input > .inputBody {
  padding-top: 0.5em;
}

.S-AddressInput > div[identifier*=title], .S-AddressInput s-input[identifier*=title] {
  display: none;
}

.S-AddressInput > div[id*=salutation], .S-AddressInput s-input[id*=salutation] {
  display: none;
  grid-area: none;
}

.S-AddressInput > div[identifier*=firstName], .S-AddressInput s-input[identifier*=firstName] {
  grid-area: fN;
}

.S-AddressInput > div[identifier*=lastName], .S-AddressInput s-input[identifier*=lastName] {
  grid-area: lN;
}

.S-AddressInput > div[identifier*=postcode], .S-AddressInput s-input[identifier*=postcode] {
  grid-area: plz;
}

.S-AddressInput > div[identifier*=city], .S-AddressInput s-input[identifier*=city] {
  grid-area: ct;
}

.S-AddressInput > div[id*=country], .S-AddressInput s-input[id*=country] {
  grid-area: cy;
}

.S-AddressInput > div[identifier*=street], .S-AddressInput s-input[identifier*=street] {
  grid-area: st;
}

.S-AddressInput > div[identifier*=housenumber], .S-AddressInput s-input[identifier*=housenumber] {
  grid-area: hn;
}

.S-AddressInput > div[identifier*=email], .S-AddressInput s-input[identifier*=email] {
  grid-area: ema;
}

.S-AddressInput > div[identifier*=phone], .S-AddressInput s-input[identifier*=phone] {
  grid-area: ph;
}

.S-AddressInput > s-input {
  padding-bottom: -0.5em;
}

.n_RadioButton {
  position: relative;
}

.n_RadioButton > .radio_headline {
  position: relative;
}

.n_RadioButton > .inner {
  position: relative;
}

.n_RadioButton > .inner > div {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
  justify-content: start;
  align-items: center;
}

.n_RadioButton > .inner > div > .inputBody {
  position: relative;
  box-sizing: border-box;
  width: 1em;
  margin: 0.5em;
  height: 1em;
  min-width: 1em;
}

.n_RadioButton > .inner > div > .inputBody > input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span {
  box-sizing: border-box;
  background-color: #2196F3;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span:after {
  box-sizing: border-box;
  display: block;
}

.n_RadioButton > .inner > div > .inputBody > span {
  box-sizing: content-box;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background-color: #eee;
  border-radius: 50%;
}

.n_RadioButton > .inner > div > .inputBody > span:after {
  box-sizing: border-box;
  content: "";
  left: 0;
  top: 0;
  position: absolute;
  display: none;
  margin: 25%;
  width: 50%;
  height: 50%;
  border-radius: 50%;
  background: white;
}

.n_RadioButton > .inner > div > .inputBody:hover input ~ span {
  background-color: #ccc;
}

.toggleButton {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  display: flex;
  justify-content: space-around;
  width: max-content;
  overflow: hidden;
}

.toggleButton > button {
  width: 100%;
  padding: 0.5rem;
  background-color: transparent;
  border: none;
  cursor: pointer;
}

.toggleButton > button:hover {
  background-color: #FFAD5B;
}

.toggleButton > button[state*=active] {
  background-color: #ffa228;
}

.s-ToggleButton_2 {
  width: max-content;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
}

.s-ToggleButton_2 > button {
  border: none;
  border-radius: 0;
  outline: none;
  padding: 0em;
  min-height: 1rem;
  height: 100%;
  width: 100%;
  margin: 0.25em;
}

.s-ToggleButton_2 > button.btFALSE {
  background-color: red;
}

.s-ToggleButton_2 > button.btFALSE[state*=passive] {
  background-color: rgba(255, 0, 0, 0.3);
}

.s-ToggleButton_2 > button.btTRUE {
  background-color: green;
}

.s-ToggleButton_2 > button.btTRUE[state*=passive] {
  background-color: rgba(0, 128, 0, 0.3);
}

.S_SVGElement_BODY {
  position: relative;
  background-color: transparent;
}

.S_SVGElement_BODY > svg {
  position: relative;
}

.addressMenuNewMain > [id*=menuElement] > div {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  grid-template-areas: "salutation salutation fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.addressMenuNewMain > [id*=menuElement] > div > div {
  background-color: transparent;
  box-sizing: border-box;
}

.addressMenuNewMain > [id*=menuElement] > div > div.S_InputDiv {
  padding-bottom: -0.5em;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=title] {
  display: none;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=salutation] {
  grid-area: salutation;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=firstName] {
  grid-area: fN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=lastName] {
  grid-area: lN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=postcode] {
  grid-area: plz;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=city] {
  grid-area: ct;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=country] {
  grid-area: cy;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=street] {
  grid-area: st;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=housenumber] {
  grid-area: hn;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=email] {
  grid-area: ema;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=phone] {
  grid-area: ph;
}

/* Media Queries */
/* ------- */
/* Desktop */
/* ------- */
.CursorMain {
  display: all;
  backface-visibility: hidden;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
  width: 100px;
  height: 100px;
  background-color: red;
  z-index: 999;
}

.customCursor {
  position: absolute;
  box-sizing: content-box;
  will-change: transform;
  margin: 0;
  padding: 0;
  top: 0;
  left: 0;
  pointer-events: none;
  user-select: none;
  display: auto;
  z-index: 1000;
}
.customCursor.red {
  background-color: red;
}
.customCursor.orange {
  color: orange !important;
}

.button_Default {
  user-select: none;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 0px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  box-sizing: content-box;
  margin: 0.5em;
  overflow: hidden;
}
.button_Default > span {
  box-sizing: border-box;
}
.button_Default[state*=active] {
  background-color: #FFAD5B;
}
.button_Default[state*=passive] {
  background-color: #fff1de;
}
.button_Default:hover {
  background-color: #ffa228;
}

.button_General {
  user-select: none;
  background-color: transparent;
  border: none;
  color: #000000;
  display: inline-block;
  font-size: 1em;
  cursor: pointer;
  border-radius: 0px;
}
.button_General > span {
  display: block;
  position: relative;
  text-align: center;
}
.button_General > span:not(.material-symbols-outlined) {
  text-decoration: underline;
}
.button_General > .dropdown {
  position: absolute;
  left: 100%;
  margin-left: 10%;
  top: 0;
  width: fit-content;
  height: max-content;
  overflow: hidden;
}
.button_General:hover > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonAnimation;
}
.button_General:hover > span.material-symbols-outlined {
  color: #ffa228 !important;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonIconAnimation;
}
.button_General:hover > span.material-symbols-outlined.rotate90 {
  animation-name: buttonIconAnimation90;
}
.button_General:hover:after > span {
  color: white;
}
.button_General:hover:after > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-out;
  animation-fill-mode: backwards;
  animation-direction: reverse;
  animation-name: buttonAnimationB;
}
.button_General:hover:after > span.material-symbols-outlined {
  color: #ffa228 !important;
}
.button_General.simple {
  background-color: transparent;
  border: none;
  text-decoration: underline;
}

/* width */
::-webkit-scrollbar {
  margin-inline: 2px;
  width: 5px;
}

/* Track */
::-webkit-scrollbar-track {
  width: 2px;
  transform: scale(2);
  background: transparent;
}

/* Handle */
::-webkit-scrollbar-thumb {
  width: 5px;
  transform: scale(2);
  background: rgb(189, 189, 189);
  border-radius: 0px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: gray;
}

body {
  background-color: #fff8f1;
}
body * {
  font-family: "Arial";
  margin: 0;
  padding: 0;
}

.Slider_main > .Slider_inputBody input[type=range] {
  appearance: none;
  background: transparent;
  width: 100%;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-thumb {
  position: relative;
  appearance: none;
  width: 9px;
  height: 20px;
  background-color: #FFAD5B;
  transform: translateY(-40%);
  border-radius: 2px 2px;
  z-index: 20;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-runnable-track {
  position: relative;
  cursor: pointer;
  border-radius: 2px 2px;
  height: 20%;
  z-index: 19;
  /* Hides the slider so custom styles can be added */
  background-color: #000000;
}
.Slider_main > .Slider_inputBody > hr {
  position: absolute;
  margin-left: calc((100% - (2.1em + 6px)) / var(--size) * var(--index));
  z-index: 1;
  left: 5px;
  background-color: darkgray;
  width: 0.5px;
  top: 25%;
  height: 50%;
  margin-top: 0;
}
.Slider_main > .Slider_inputBody > hr:nth-child(even) {
  top: 12.5%;
  height: 75%;
}

body {
  position: relative;
  width: 100vw;
  overflow: hidden;
  box-sizing: content-box;
  top: 6vh;
  height: 94vh;
}
@media only screen and (max-width: 980px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 981px) and (max-width: 1199px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 1200px) {
  body {
    font-size: 1em;
  }
}

.Table {
  border: 1px solid black;
  position: relative;
  width: 50%;
}
.Table > div {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}
.Table > div > label {
  position: relative;
  overflow: hidden;
}
.Table > div > span {
  position: relative;
  overflow: hidden;
}

.bold {
  font-weight: bold;
}

.LoadBar {
  z-index: 3;
  border-radius: 0px;
  position: relative !important;
  background-color: red !important;
  width: 100% !important;
  height: 2em !important;
  overflow: hidden;
}
.LoadBar .LoadBar-progress {
  position: relative;
  height: 100%;
  background-color: green !important;
}

.LineDiv {
  position: relative;
  margin: 0;
  padding: 0;
  flex: auto;
  overflow: hidden;
  height: 100%;
  border: none;
}
.LineDiv hr {
  display: block;
  position: relative;
  color: orange;
  background-color: orange;
  opacity: 1;
  width: 0%;
  margin: 0;
  top: 50%;
  visibility: visible;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;
}

@keyframes NavBarLine {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}
.Text-primary {
  color: #000000;
}

.Text-secondary {
  color: #BCBCBC;
}

.Text-small {
  font-size: 0.75em;
}

.SliderDivMain {
  border: 1px solid black;
}

.TextInputDiv {
  position: relative;
  background-color: #fff8f1;
  border-radius: 0px;
  margin: 0.5em;
  margin-bottom: 1.5em;
  font-size: inherit;
  height: 10em;
}
.TextInputDiv textarea {
  position: relative;
  outline: 0;
  resize: none;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 0px !important;
}
.TextInputDiv textarea.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 1.1em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.TextInputDiv textarea::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.TextInputDiv label {
  user-select: none;
  position: absolute;
  z-index: 1;
  width: 100%;
  background-color: #fff8f1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.11em;
  padding-top: 0.39em;
  padding-bottom: 0.13em;
  border-top-right-radius: 5px 5px;
}
.TextInputDiv .horizontalLine {
  position: absolute;
  z-index: 2;
  width: 100%;
  top: 0.89em;
  height: 0px;
  left: 0;
  margin-block: 0px;
  margin-inline: 0.5em;
}

.InputDivMain {
  position: relative;
  background-color: #fff8f1;
  margin: 0.5em;
  height: min-content;
  display: inline-flex;
}
.InputDivMain button {
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}
.InputDivMain button > span {
  position: relative;
  font-size: 1.3em;
}
.InputDivMain button[state*=active] {
  background-color: #ffa228;
}
.InputDivMain button[state*=passive] {
  background-color: transparent;
}
.InputDivMain button[state*=passive]:hover {
  background-color: #FFAD5B;
}
.InputDivMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}
.InputDivMain input {
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 0px !important;
  outline: none;
}
.InputDivMain input.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.InputDivMain input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}
.InputDivMain input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.InputDivMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

:root {
  --main-font: "Montserrat";
  --primary: "";
  --primary-text: #333;
}

* {
  margin: 0;
  padding: 0;
  font-family: var(--main-font);
}

.tooltip_S[state*=active]:after, .tooltip_S[state*=active]:before {
  display: none;
}

.tooltip_S[data-tooltip-direction=right] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=right]:after {
  pointer-events: none;
  content: attr(data-tooltip-value);
  position: absolute;
  z-index: 10;
  top: 50%;
  transform: translateY(-50%);
  left: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=right]:before {
  pointer-events: none;
  content: "";
  position: absolute;
  z-index: 10;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-right: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=right]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  left: 110%;
}

.tooltip_S[data-tooltip-direction=right]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  left: 103%;
}

.tooltip_S[data-tooltip-direction=right]:hover:after, .tooltip_S[data-tooltip-direction=right]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=top] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=top]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  bottom: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=top]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  bottom: 130%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after {
  bottom: 120%;
}

.tooltip_S[data-tooltip-direction=top]:hover:before {
  bottom: 103%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after, .tooltip_S[data-tooltip-direction=top]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=left] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=left]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=left]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-left: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  right: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=left]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  right: 110%;
}

.tooltip_S[data-tooltip-direction=left]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  right: 103%;
}

.tooltip_S[data-tooltip-direction=left]:hover:after, .tooltip_S[data-tooltip-direction=left]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=bottom] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=bottom]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=bottom]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-bottom: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  top: 130%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after {
  top: 120%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:before {
  top: 103%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after, .tooltip_S[data-tooltip-direction=bottom]:hover:before {
  opacity: 1;
}

.AdaptiveTableMain {
  position: relative;
  display: block;
  width: 98%;
  height: 100%;
  overflow: hidden;
  overflow-y: auto;
}

.AdaptiveTableMain > .ListMain {
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

.AdaptiveTableMain > .ListMain > .column {
  position: relative;
  width: 90%;
  height: fit-content;
  flex-direction: column;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement {
  user-select: none;
  padding: 0.5em;
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: inline-block;
  height: fit-content;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > img {
  user-select: none;
  box-sizing: border-box;
  overflow: hidden;
  display: block;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  position: relative;
  width: 100%;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv {
  user-select: none;
  border-radius: 5px 5px;
  position: absolute;
  top: 0;
  margin: 0.5em;
  left: 0;
  width: calc(100% - 1em);
  height: calc(100% - 1em);
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
  background-color: rgba(94, 94, 94, 0.471);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv:hover {
  opacity: 1;
  box-shadow: rgba(0, 0, 0, 0.55) 0px 0px 3px, rgba(0, 0, 0, 0.51) 0px 0px 3px;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .informationDiv {
  display: none;
  position: relative;
  top: 0;
  margin: 0.5em;
  border-radius: 5px 5px;
  left: 0;
  background-color: rgba(255, 0, 0, 0.299);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv {
  user-select: none;
  position: absolute;
  bottom: 0;
  left: 0;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv > button {
  user-select: none;
}

.AmountDiv {
  display: flex;
  position: relative;
  border: 1px solid black;
  box-sizing: border-box;
  width: fit-content;
  padding: 0.2em;
}

.AmountDiv > button {
  width: 33%;
  position: relative;
  box-sizing: border-box;
  border-radius: 0px 0px;
}

.AmountDiv > button > span {
  font-size: 1em;
}

.AmountDiv > div {
  position: relative;
  width: 2em;
  margin: 0;
  background-color: transparent;
  padding: 0;
  overflow: hidden;
}

.AmountDiv > div > input {
  font-size: 1em;
  background-color: transparent;
  position: relative;
  border: none;
  outline: none;
  width: 100%;
  height: 100%;
  text-align: center;
}

.button_Default {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.button_Default > span {
  display: block;
}

.button_Default:hover {
  background-color: red;
}

.s-button_basic {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_basic > span {
  display: block;
}

.s-button_link {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_link > span {
  text-decoration: underline;
  color: blue;
  display: block;
}

.s-button_link:hover > span {
  color: rgb(34, 34, 255);
}

.DropDownInputMain {
  position: relative;
  background-color: #ffd7af;
  border-radius: 5px;
  margin: 0.5em;
  font-size: inherit;
}

.DropDownInputMain select {
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.25em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 5px 5px !important;
}

.DropDownInputMain select.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.25em;
}

.DropDownInputMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.DropDownInputMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

.header {
  position: fixed;
  width: 100%;
  height: 4rem;
  display: flex;
  flex-direction: row;
  alignItems: center;
  justifyContent: space-between !important;
  background-color: var(--bg-color);
  box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.2);
}

.header > .logoLinkBox {
  position: relative;
  margin-left: 3rem;
  min-width: 3rem;
  width: auto;
  max-width: 15rem;
  height: 4rem;
  display: flex;
  align-items: center;
  justify-content: start;
  text-decoration: none;
  cursor: pointer;
  user-select: none;
}

.header > .logoLinkBox > .logoIcon {
  position: relative;
  width: 2.5rem;
}

.header > .logoLinkBox > .logoText {
  position: relative;
  margin-left: 0.5rem;
  font-size: 1.3rem;
  font-weight: 600;
  color: #333 !important;
}

.header > .headerNavigation {
  position: absolute;
  right: 3rem;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: end;
}

.header > .headerNavigation > button {
  font-size: 1.1rem;
  margin-left: 1.5rem;
}

.header > .headerNavigation > button > span {
  position: relative;
  text-decoration: none;
  color: #a8a8a8;
}

.S_InputDiv {
  position: relative;
  background-color: #ffd7af;
  margin: 0.5em;
  height: min-content;
  display: flex;
  flex-wrap: wrap;
}

.S_InputDiv > button {
  flex: 0 1;
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}

.S_InputDiv > button > span {
  position: relative;
  font-size: 1.3em;
}

.S_InputDiv > button[state*=active] {
  background-color: #ffa228;
}

.S_InputDiv > button[state*=passive] {
  background-color: transparent;
}

.S_InputDiv > button[state*=passive]:hover {
  background-color: #FFAD5B;
}

.S_InputDiv label.switchLabel {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.S_InputDiv input {
  flex: 2 1;
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 5px 5px !important;
  outline: none;
}

.S_InputDiv input.filled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}

.S_InputDiv input[state*=passive] {
  color: red;
  background-color: #fff1de;
}

.S_InputDiv input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}

.S_InputDiv input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}

.S_InputDiv > .response {
  align-self: flex-end;
  text-align: justify;
  width: 100%;
  color: red;
}

.S_InputDiv .invalidInput {
  color: red;
  background-color: #fff1de;
}

.progressBar_Splint {
  position: absolute;
  width: 10em;
  background-color: blue;
  display: flex;
}

.progressBar_Splint > .S_progressBar_Body {
  width: 100%;
  border: 1px solid black;
}

.progressBar_Splint > .S_progressBar_Body > .S_progressBar_Inner {
  width: 100%;
  height: 100%;
  background-color: red;
}

.S-SliderMain {
  margin-top: 0.4em;
  margin-bottom: 0.4em;
}

.S-SliderMain[drawDivider=true]::after {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-bottom: 1px solid #BDBDBD;
  left: 0;
  margin-top: 0.25em;
  position: relative;
}

.S-SliderMain[drawDivider=true]::before {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-top: 1px solid #BDBDBD;
  left: 0;
  margin-bottom: 0.2em;
  position: relative;
}

.S-SliderMain > .label {
  position: relative;
  width: 100%;
  display: inline-block;
  box-sizing: border-box;
  text-align: left;
}

.S-SliderMain > .contentBody {
  height: 1em;
  display: flex;
}

.S-SliderMain > .contentBody > .sliderBody {
  order: 1;
  height: 100%;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range] {
  width: 100%;
  position: relative;
  font-size: 1em;
  height: 100%;
  display: inline-block;
  outline: none;
  -webkit-appearance: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-runnable-track {
  box-sizing: border-box;
  width: 100%;
  height: 0.5em;
  background: #ffa228;
  border: none;
  border-radius: 10px;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  border: none;
  vertical-align: baseline;
  height: 1em;
  width: 1em;
  border-radius: 10%;
  margin-top: -0.25em;
  background: white;
  box-sizing: border-box;
  border: 1px solid black;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus {
  outline: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus::-webkit-slider-runnable-track {
  background: #ffa228;
}

.S-SliderMain > .contentBody > .sliderBody > datalist {
  display: none;
  height: 20rem;
  margin-top: -23px;
  background-color: red;
  color: red;
}

.S-SliderMain > .contentBody > .sliderBody > datalist > option {
  background-color: red;
  color: red;
  height: 50px;
}

.S-SliderMain > .contentBody > .valueOutput {
  order: 2;
  height: 1em;
  width: 1.5em;
  display: inline-block;
  box-sizing: border-box;
  text-align: center;
}

.S-SliderMain > .contentBody > .valueOutput[hidden=true] {
  display: none;
}

.SlideShow_S {
  position: relative;
  height: 100%;
  overflow-y: visible !important;
  overflow-x: auto;
  box-sizing: border-box;
  white-space: nowrap;
  background-color: transparent;
}

.SlideShow_S > .inner {
  display: inline-block;
  position: relative;
  height: 100%;
  width: max-content;
  margin-left: auto;
  margin-right: auto;
  background-color: transparent;
}

.SlideShow_S > .inner > .listElement {
  position: relative;
  height: calc(100% - 0.4em);
  box-sizing: border-box;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  margin: 0.2em;
  margin-inline: 0.5em;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: end;
  align-items: end;
}

.SlideShow_S > .inner > .listElement > div {
  bottom: 0;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  aspect-ratio: 2/1;
}

.SlideShow_S > .inner > .listElement > div > span {
  font-size: 2em;
}

.subWindow_MAIN {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: all;
  user-select: none;
}

.subWindow_MAIN > .background {
  position: absolute;
  z-index: 1;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: rgba(255, 255, 255, 0.8509803922);
}

.subWindow_MAIN .content {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  position: absolute;
  z-index: 2;
  width: fit-content;
  max-height: 90vh;
  max-width: 90vw;
  overflow: hidden;
  margin: auto;
  left: 50%;
  height: max-content;
  top: 50%;
  user-select: none;
  pointer-events: all;
  transform: translate(-50%, -50%);
}

.subWindow_MAIN .content > button.button_close {
  position: absolute;
  right: 0.5em;
  z-index: 3;
}

.TableMain {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
}

.TableMain > .ListMain {
  position: relative;
  width: 100%;
  height: 100%;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;
}

.TableMain > .ListMain > .ListElement {
  margin: 0.5em;
  position: relative;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement > .ListElementHover {
  position: absolute;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 1;
  margin: 0;
  padding: 0;
  border: inherit;
  box-shadow: inherit;
  border-radius: inherit;
  background-color: rgba(64, 64, 64, 0.63);
  display: flex;
  flex-direction: column;
  transition: opacity 0.2s;
}

.horizontalLine {
  position: relative;
  margin: 0.1rem;
  left: 1%;
  width: 98%;
  opacity: 1;
  color: #BDBDBD;
  border: none;
  border-top: 0.5px solid #BDBDBD;
  background-color: #BDBDBD;
}

.PriceDiv {
  width: max-content;
  height: max-content !important;
  display: inline-block;
  overflow-wrap: anywhere;
  white-space: nowrap;
}

.s-ObjectEditor {
  width: 25rem;
  box-shadow: inset 1px 0px 0px 0px black, 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white;
}

.s-ObjectEditor > .Table2D {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table > tr {
  width: 0rem;
  box-sizing: border-box;
  border-bottom: 1px solid black;
  overflow: visible;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] {
  display: flex;
  flex-direction: column;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] > td[col*="1"] {
  margin-left: 1rem;
}

.s-ObjectEditor > .Table2D > table > tr > td {
  box-sizing: border-box;
  width: 100%;
  overflow: visible;
  padding-left: 0.25rem;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="0"] {
  width: 33%;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="2"] {
  width: min-content;
}

.s-ObjectEditor > .Table2D > table > tr > td > div {
  position: relative;
}

.s-sideBarMobile {
  position: absolute;
  height: 100%;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  width: 200px;
  transform: translateX(-100%);
  transition: transform 1s ease-in;
}

.s-sideBarMobile[s-state*=active] {
  transform: translateX(0);
}

.s-sideBarMobile > .headContainer {
  display: flex;
  padding: 0.25em;
  height: max-content;
  justify-content: center;
  align-items: center;
  box-shadow: 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white, inset 0px -1px 0px 0px gray;
}

.s-sideBarMobile > .headContainer > .headline {
  width: 100%;
  font-size: 2em;
}

.s-sideBarMobile > .headContainer > .buttonClose {
  position: relative;
  height: 100%;
}

.s-sideBarMobile > .content {
  width: 100%;
  height: 100%;
}

.Spinner1 {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}

.Spinner1[state*=passive] {
  visibility: hidden;
}

.Spinner1 > div {
  box-sizing: border-box;
  display: block;
  position: absolute;
  width: 80%;
  height: 80%;
  margin: 10%;
  border: 8px solid #fff;
  border-radius: 50%;
  animation: Spinner1 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
  border-color: #fff transparent transparent transparent;
}

.Spinner1 > div:nth-child(1) {
  animation-delay: -0.45s;
}

.Spinner1 > div:nth-child(2) {
  animation-delay: -0.3s;
}

.Spinner1 > div:nth-child(3) {
  animation-delay: -0.15s;
}

@keyframes Spinner1 {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.DropDownInputMain_S {
  position: relative;
  overflow: visible !important;
}

.DropDownInputMain_S > .S_InputDiv {
  width: 100%;
  margin: 0;
  margin-bottom: 0;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px;
}

.DropDownInputMain_S > .S_InputDiv > input {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > button {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > .response {
  display: none;
}

.DropDownInputMain_S > .DropDown_expander {
  z-index: 120;
  background-color: transparent;
  position: absolute;
  padding: 0;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.DropDownInputMain_S > .DropDown_expander[state*=active] {
  height: 10em;
}

.DropDownInputMain_S > .DropDown_expander[state*=passive] {
  height: 0em;
}

.DropDownInputMain_S > .DropDown_expander > div {
  z-index: 122;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-top: 0.2em;
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div > span {
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain {
  position: relative;
  overflow: visible !important;
}

.n_SelectInputMain > .Select_expander {
  z-index: 1;
  background-color: transparent;
  position: absolute;
  padding: 1%;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.n_SelectInputMain > .Select_expander[state*=active] {
  height: max-content;
  max-height: 10em;
}

.n_SelectInputMain > .Select_expander[state*=passive] {
  height: 0em;
  display: none;
}

.n_SelectInputMain > .Select_expander > div {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-bottom: 0.5em;
  text-align: center;
  cursor: pointer;
  transition: box-shadow 0.2s;
  transition-timing-function: ease-in;
}

.n_SelectInputMain > .Select_expander > div > span {
  text-align: center;
}

.n_SelectInputMain > .Select_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain > .Select_expander > div:hover {
  box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 3px, rgba(0, 0, 0, 0.21) 0px 0px 3px;
}

.n_inputDiv {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

.n_inputDiv > .inputBody {
  display: flex;
  flex-direction: row;
}

.n_inputDiv > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

.n_inputDiv > .inputBody > input:valid, .n_inputDiv > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

.n_inputDiv > .inputBody > input:valid + label span, .n_inputDiv > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

.n_inputDiv > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

.n_inputDiv > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.n_inputDiv > .inputBody > button {
  background-color: transparent;
}

.n_inputDiv > .response > span {
  color: red;
}

s-input {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

s-input > .inputBody {
  display: flex;
  flex-direction: row;
}

s-input > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

s-input > .inputBody > input:valid, s-input > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

s-input > .inputBody > input:valid + label span, s-input > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

s-input > .inputBody > input[state=passive] {
  border-bottom: 2px red solid;
}

s-input > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

s-input > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

s-input > .inputBody > button {
  background-color: transparent;
}

s-input > .response > span {
  color: red;
}

.S-AddressInput {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  column-gap: 0.5em;
  grid-template-areas: "fN fN fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.S-AddressInput > div, .S-AddressInput s-input {
  background-color: transparent;
  box-sizing: border-box;
}

.S-AddressInput > div > .inputBody, .S-AddressInput s-input > .inputBody {
  padding-top: 0.5em;
}

.S-AddressInput > div[identifier*=title], .S-AddressInput s-input[identifier*=title] {
  display: none;
}

.S-AddressInput > div[id*=salutation], .S-AddressInput s-input[id*=salutation] {
  display: none;
  grid-area: none;
}

.S-AddressInput > div[identifier*=firstName], .S-AddressInput s-input[identifier*=firstName] {
  grid-area: fN;
}

.S-AddressInput > div[identifier*=lastName], .S-AddressInput s-input[identifier*=lastName] {
  grid-area: lN;
}

.S-AddressInput > div[identifier*=postcode], .S-AddressInput s-input[identifier*=postcode] {
  grid-area: plz;
}

.S-AddressInput > div[identifier*=city], .S-AddressInput s-input[identifier*=city] {
  grid-area: ct;
}

.S-AddressInput > div[id*=country], .S-AddressInput s-input[id*=country] {
  grid-area: cy;
}

.S-AddressInput > div[identifier*=street], .S-AddressInput s-input[identifier*=street] {
  grid-area: st;
}

.S-AddressInput > div[identifier*=housenumber], .S-AddressInput s-input[identifier*=housenumber] {
  grid-area: hn;
}

.S-AddressInput > div[identifier*=email], .S-AddressInput s-input[identifier*=email] {
  grid-area: ema;
}

.S-AddressInput > div[identifier*=phone], .S-AddressInput s-input[identifier*=phone] {
  grid-area: ph;
}

.S-AddressInput > s-input {
  padding-bottom: -0.5em;
}

.n_RadioButton {
  position: relative;
}

.n_RadioButton > .radio_headline {
  position: relative;
}

.n_RadioButton > .inner {
  position: relative;
}

.n_RadioButton > .inner > div {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
  justify-content: start;
  align-items: center;
}

.n_RadioButton > .inner > div > .inputBody {
  position: relative;
  box-sizing: border-box;
  width: 1em;
  margin: 0.5em;
  height: 1em;
  min-width: 1em;
}

.n_RadioButton > .inner > div > .inputBody > input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span {
  box-sizing: border-box;
  background-color: #2196F3;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span:after {
  box-sizing: border-box;
  display: block;
}

.n_RadioButton > .inner > div > .inputBody > span {
  box-sizing: content-box;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background-color: #eee;
  border-radius: 50%;
}

.n_RadioButton > .inner > div > .inputBody > span:after {
  box-sizing: border-box;
  content: "";
  left: 0;
  top: 0;
  position: absolute;
  display: none;
  margin: 25%;
  width: 50%;
  height: 50%;
  border-radius: 50%;
  background: white;
}

.n_RadioButton > .inner > div > .inputBody:hover input ~ span {
  background-color: #ccc;
}

.toggleButton {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  display: flex;
  justify-content: space-around;
  width: max-content;
  overflow: hidden;
}

.toggleButton > button {
  width: 100%;
  padding: 0.5rem;
  background-color: transparent;
  border: none;
  cursor: pointer;
}

.toggleButton > button:hover {
  background-color: #FFAD5B;
}

.toggleButton > button[state*=active] {
  background-color: #ffa228;
}

.s-ToggleButton_2 {
  width: max-content;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
}

.s-ToggleButton_2 > button {
  border: none;
  border-radius: 0;
  outline: none;
  padding: 0em;
  min-height: 1rem;
  height: 100%;
  width: 100%;
  margin: 0.25em;
}

.s-ToggleButton_2 > button.btFALSE {
  background-color: red;
}

.s-ToggleButton_2 > button.btFALSE[state*=passive] {
  background-color: rgba(255, 0, 0, 0.3);
}

.s-ToggleButton_2 > button.btTRUE {
  background-color: green;
}

.s-ToggleButton_2 > button.btTRUE[state*=passive] {
  background-color: rgba(0, 128, 0, 0.3);
}

.S_SVGElement_BODY {
  position: relative;
  background-color: transparent;
}

.S_SVGElement_BODY > svg {
  position: relative;
}

.addressMenuNewMain > [id*=menuElement] > div {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  grid-template-areas: "salutation salutation fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.addressMenuNewMain > [id*=menuElement] > div > div {
  background-color: transparent;
  box-sizing: border-box;
}

.addressMenuNewMain > [id*=menuElement] > div > div.S_InputDiv {
  padding-bottom: -0.5em;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=title] {
  display: none;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=salutation] {
  grid-area: salutation;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=firstName] {
  grid-area: fN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=lastName] {
  grid-area: lN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=postcode] {
  grid-area: plz;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=city] {
  grid-area: ct;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=country] {
  grid-area: cy;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=street] {
  grid-area: st;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=housenumber] {
  grid-area: hn;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=email] {
  grid-area: ema;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=phone] {
  grid-area: ph;
}

/* Media Queries */
/* ------- */
/* Desktop */
/* ------- */
.CursorMain {
  display: all;
  backface-visibility: hidden;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
  width: 100px;
  height: 100px;
  background-color: red;
  z-index: 999;
}

.customCursor {
  position: absolute;
  box-sizing: content-box;
  will-change: transform;
  margin: 0;
  padding: 0;
  top: 0;
  left: 0;
  pointer-events: none;
  user-select: none;
  display: auto;
  z-index: 1000;
}
.customCursor.red {
  background-color: red;
}
.customCursor.orange {
  color: orange !important;
}

.button_Default {
  user-select: none;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 0px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  box-sizing: content-box;
  margin: 0.5em;
  overflow: hidden;
}
.button_Default > span {
  box-sizing: border-box;
}
.button_Default[state*=active] {
  background-color: #FFAD5B;
}
.button_Default[state*=passive] {
  background-color: #fff1de;
}
.button_Default:hover {
  background-color: #ffa228;
}

.button_General {
  user-select: none;
  background-color: transparent;
  border: none;
  color: #000000;
  display: inline-block;
  font-size: 1em;
  cursor: pointer;
  border-radius: 0px;
}
.button_General > span {
  display: block;
  position: relative;
  text-align: center;
}
.button_General > span:not(.material-symbols-outlined) {
  text-decoration: underline;
}
.button_General > .dropdown {
  position: absolute;
  left: 100%;
  margin-left: 10%;
  top: 0;
  width: fit-content;
  height: max-content;
  overflow: hidden;
}
.button_General:hover > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonAnimation;
}
.button_General:hover > span.material-symbols-outlined {
  color: #ffa228 !important;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonIconAnimation;
}
.button_General:hover > span.material-symbols-outlined.rotate90 {
  animation-name: buttonIconAnimation90;
}
.button_General:hover:after > span {
  color: white;
}
.button_General:hover:after > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-out;
  animation-fill-mode: backwards;
  animation-direction: reverse;
  animation-name: buttonAnimationB;
}
.button_General:hover:after > span.material-symbols-outlined {
  color: #ffa228 !important;
}
.button_General.simple {
  background-color: transparent;
  border: none;
  text-decoration: underline;
}

/* width */
::-webkit-scrollbar {
  margin-inline: 2px;
  width: 5px;
}

/* Track */
::-webkit-scrollbar-track {
  width: 2px;
  transform: scale(2);
  background: transparent;
}

/* Handle */
::-webkit-scrollbar-thumb {
  width: 5px;
  transform: scale(2);
  background: rgb(189, 189, 189);
  border-radius: 0px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: gray;
}

body {
  background-color: #fff8f1;
}
body * {
  font-family: "Arial";
  margin: 0;
  padding: 0;
}

.Slider_main > .Slider_inputBody input[type=range] {
  appearance: none;
  background: transparent;
  width: 100%;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-thumb {
  position: relative;
  appearance: none;
  width: 9px;
  height: 20px;
  background-color: #FFAD5B;
  transform: translateY(-40%);
  border-radius: 2px 2px;
  z-index: 20;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-runnable-track {
  position: relative;
  cursor: pointer;
  border-radius: 2px 2px;
  height: 20%;
  z-index: 19;
  /* Hides the slider so custom styles can be added */
  background-color: #000000;
}
.Slider_main > .Slider_inputBody > hr {
  position: absolute;
  margin-left: calc((100% - (2.1em + 6px)) / var(--size) * var(--index));
  z-index: 1;
  left: 5px;
  background-color: darkgray;
  width: 0.5px;
  top: 25%;
  height: 50%;
  margin-top: 0;
}
.Slider_main > .Slider_inputBody > hr:nth-child(even) {
  top: 12.5%;
  height: 75%;
}

body {
  position: relative;
  width: 100vw;
  overflow: hidden;
  box-sizing: content-box;
  top: 6vh;
  height: 94vh;
}
@media only screen and (max-width: 980px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 981px) and (max-width: 1199px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 1200px) {
  body {
    font-size: 1em;
  }
}

.Table {
  border: 1px solid black;
  position: relative;
  width: 50%;
}
.Table > div {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}
.Table > div > label {
  position: relative;
  overflow: hidden;
}
.Table > div > span {
  position: relative;
  overflow: hidden;
}

.bold {
  font-weight: bold;
}

.LoadBar {
  z-index: 3;
  border-radius: 0px;
  position: relative !important;
  background-color: red !important;
  width: 100% !important;
  height: 2em !important;
  overflow: hidden;
}
.LoadBar .LoadBar-progress {
  position: relative;
  height: 100%;
  background-color: green !important;
}

.LineDiv {
  position: relative;
  margin: 0;
  padding: 0;
  flex: auto;
  overflow: hidden;
  height: 100%;
  border: none;
}
.LineDiv hr {
  display: block;
  position: relative;
  color: orange;
  background-color: orange;
  opacity: 1;
  width: 0%;
  margin: 0;
  top: 50%;
  visibility: visible;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;
}

@keyframes NavBarLine {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}
.Text-primary {
  color: #000000;
}

.Text-secondary {
  color: #BCBCBC;
}

.Text-small {
  font-size: 0.75em;
}

.SliderDivMain {
  border: 1px solid black;
}

.TextInputDiv {
  position: relative;
  background-color: #fff8f1;
  border-radius: 0px;
  margin: 0.5em;
  margin-bottom: 1.5em;
  font-size: inherit;
  height: 10em;
}
.TextInputDiv textarea {
  position: relative;
  outline: 0;
  resize: none;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 0px !important;
}
.TextInputDiv textarea.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 1.1em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.TextInputDiv textarea::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.TextInputDiv label {
  user-select: none;
  position: absolute;
  z-index: 1;
  width: 100%;
  background-color: #fff8f1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.11em;
  padding-top: 0.39em;
  padding-bottom: 0.13em;
  border-top-right-radius: 5px 5px;
}
.TextInputDiv .horizontalLine {
  position: absolute;
  z-index: 2;
  width: 100%;
  top: 0.89em;
  height: 0px;
  left: 0;
  margin-block: 0px;
  margin-inline: 0.5em;
}

.InputDivMain {
  position: relative;
  background-color: #fff8f1;
  margin: 0.5em;
  height: min-content;
  display: inline-flex;
}
.InputDivMain button {
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}
.InputDivMain button > span {
  position: relative;
  font-size: 1.3em;
}
.InputDivMain button[state*=active] {
  background-color: #ffa228;
}
.InputDivMain button[state*=passive] {
  background-color: transparent;
}
.InputDivMain button[state*=passive]:hover {
  background-color: #FFAD5B;
}
.InputDivMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}
.InputDivMain input {
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 0px !important;
  outline: none;
}
.InputDivMain input.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.InputDivMain input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}
.InputDivMain input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.InputDivMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

@keyframes buttonAnimation {
  from {
    transform: translateY(0em);
    text-underline-offset: 0em;
  }
  to {
    transform: translateY(-0.1em);
    text-underline-offset: 0.2em;
  }
}
@keyframes buttonAnimationB {
  to {
    transform: translateY(0em);
    text-underline-offset: 0em;
  }
  from {
    transform: translateY(-0.1em);
    text-underline-offset: 0.2em;
  }
}
@keyframes buttonIconAnimation {}
@keyframes buttonIconAnimation90 {
  from {
    transform: translateY(0em) rotate(90deg);
  }
  to {
    transform: translateY(-0.1em) rotate(90deg);
  }
}
.RadioButton {
  border: 1px solid black;
  position: relative;
}
.RadioButton > div {
  width: 100%;
  height: 100%;
  position: relative;
  align-items: center;
  display: flex;
  flex-direction: row;
  cursor: pointer;
}
.RadioButton > div > input {
  position: relative;
  margin-inline: 2%;
  cursor: pointer;
}
.RadioButton > div > div {
  position: relative;
  height: 100%;
}
.RadioButton > div > div[id*=Price] {
  font-size: 1em;
  margin-left: auto;
  margin-right: 5%;
}

:root {
  --main-font: "Montserrat";
  --primary: "";
  --primary-text: #333;
}

* {
  margin: 0;
  padding: 0;
  font-family: var(--main-font);
}

.tooltip_S[state*=active]:after, .tooltip_S[state*=active]:before {
  display: none;
}

.tooltip_S[data-tooltip-direction=right] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=right]:after {
  pointer-events: none;
  content: attr(data-tooltip-value);
  position: absolute;
  z-index: 10;
  top: 50%;
  transform: translateY(-50%);
  left: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=right]:before {
  pointer-events: none;
  content: "";
  position: absolute;
  z-index: 10;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-right: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=right]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  left: 110%;
}

.tooltip_S[data-tooltip-direction=right]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  left: 103%;
}

.tooltip_S[data-tooltip-direction=right]:hover:after, .tooltip_S[data-tooltip-direction=right]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=top] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=top]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  bottom: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=top]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  bottom: 130%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after {
  bottom: 120%;
}

.tooltip_S[data-tooltip-direction=top]:hover:before {
  bottom: 103%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after, .tooltip_S[data-tooltip-direction=top]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=left] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=left]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=left]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-left: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  right: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=left]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  right: 110%;
}

.tooltip_S[data-tooltip-direction=left]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  right: 103%;
}

.tooltip_S[data-tooltip-direction=left]:hover:after, .tooltip_S[data-tooltip-direction=left]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=bottom] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=bottom]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=bottom]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-bottom: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  top: 130%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after {
  top: 120%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:before {
  top: 103%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after, .tooltip_S[data-tooltip-direction=bottom]:hover:before {
  opacity: 1;
}

.AdaptiveTableMain {
  position: relative;
  display: block;
  width: 98%;
  height: 100%;
  overflow: hidden;
  overflow-y: auto;
}

.AdaptiveTableMain > .ListMain {
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

.AdaptiveTableMain > .ListMain > .column {
  position: relative;
  width: 90%;
  height: fit-content;
  flex-direction: column;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement {
  user-select: none;
  padding: 0.5em;
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: inline-block;
  height: fit-content;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > img {
  user-select: none;
  box-sizing: border-box;
  overflow: hidden;
  display: block;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  position: relative;
  width: 100%;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv {
  user-select: none;
  border-radius: 5px 5px;
  position: absolute;
  top: 0;
  margin: 0.5em;
  left: 0;
  width: calc(100% - 1em);
  height: calc(100% - 1em);
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
  background-color: rgba(94, 94, 94, 0.471);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv:hover {
  opacity: 1;
  box-shadow: rgba(0, 0, 0, 0.55) 0px 0px 3px, rgba(0, 0, 0, 0.51) 0px 0px 3px;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .informationDiv {
  display: none;
  position: relative;
  top: 0;
  margin: 0.5em;
  border-radius: 5px 5px;
  left: 0;
  background-color: rgba(255, 0, 0, 0.299);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv {
  user-select: none;
  position: absolute;
  bottom: 0;
  left: 0;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv > button {
  user-select: none;
}

.AmountDiv {
  display: flex;
  position: relative;
  border: 1px solid black;
  box-sizing: border-box;
  width: fit-content;
  padding: 0.2em;
}

.AmountDiv > button {
  width: 33%;
  position: relative;
  box-sizing: border-box;
  border-radius: 0px 0px;
}

.AmountDiv > button > span {
  font-size: 1em;
}

.AmountDiv > div {
  position: relative;
  width: 2em;
  margin: 0;
  background-color: transparent;
  padding: 0;
  overflow: hidden;
}

.AmountDiv > div > input {
  font-size: 1em;
  background-color: transparent;
  position: relative;
  border: none;
  outline: none;
  width: 100%;
  height: 100%;
  text-align: center;
}

.button_Default {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.button_Default > span {
  display: block;
}

.button_Default:hover {
  background-color: red;
}

.s-button_basic {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_basic > span {
  display: block;
}

.s-button_link {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_link > span {
  text-decoration: underline;
  color: blue;
  display: block;
}

.s-button_link:hover > span {
  color: rgb(34, 34, 255);
}

.DropDownInputMain {
  position: relative;
  background-color: #ffd7af;
  border-radius: 5px;
  margin: 0.5em;
  font-size: inherit;
}

.DropDownInputMain select {
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.25em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 5px 5px !important;
}

.DropDownInputMain select.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.25em;
}

.DropDownInputMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.DropDownInputMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

.header {
  position: fixed;
  width: 100%;
  height: 4rem;
  display: flex;
  flex-direction: row;
  alignItems: center;
  justifyContent: space-between !important;
  background-color: var(--bg-color);
  box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.2);
}

.header > .logoLinkBox {
  position: relative;
  margin-left: 3rem;
  min-width: 3rem;
  width: auto;
  max-width: 15rem;
  height: 4rem;
  display: flex;
  align-items: center;
  justify-content: start;
  text-decoration: none;
  cursor: pointer;
  user-select: none;
}

.header > .logoLinkBox > .logoIcon {
  position: relative;
  width: 2.5rem;
}

.header > .logoLinkBox > .logoText {
  position: relative;
  margin-left: 0.5rem;
  font-size: 1.3rem;
  font-weight: 600;
  color: #333 !important;
}

.header > .headerNavigation {
  position: absolute;
  right: 3rem;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: end;
}

.header > .headerNavigation > button {
  font-size: 1.1rem;
  margin-left: 1.5rem;
}

.header > .headerNavigation > button > span {
  position: relative;
  text-decoration: none;
  color: #a8a8a8;
}

.S_InputDiv {
  position: relative;
  background-color: #ffd7af;
  margin: 0.5em;
  height: min-content;
  display: flex;
  flex-wrap: wrap;
}

.S_InputDiv > button {
  flex: 0 1;
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}

.S_InputDiv > button > span {
  position: relative;
  font-size: 1.3em;
}

.S_InputDiv > button[state*=active] {
  background-color: #ffa228;
}

.S_InputDiv > button[state*=passive] {
  background-color: transparent;
}

.S_InputDiv > button[state*=passive]:hover {
  background-color: #FFAD5B;
}

.S_InputDiv label.switchLabel {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.S_InputDiv input {
  flex: 2 1;
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 5px 5px !important;
  outline: none;
}

.S_InputDiv input.filled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}

.S_InputDiv input[state*=passive] {
  color: red;
  background-color: #fff1de;
}

.S_InputDiv input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}

.S_InputDiv input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}

.S_InputDiv > .response {
  align-self: flex-end;
  text-align: justify;
  width: 100%;
  color: red;
}

.S_InputDiv .invalidInput {
  color: red;
  background-color: #fff1de;
}

.progressBar_Splint {
  position: absolute;
  width: 10em;
  background-color: blue;
  display: flex;
}

.progressBar_Splint > .S_progressBar_Body {
  width: 100%;
  border: 1px solid black;
}

.progressBar_Splint > .S_progressBar_Body > .S_progressBar_Inner {
  width: 100%;
  height: 100%;
  background-color: red;
}

.S-SliderMain {
  margin-top: 0.4em;
  margin-bottom: 0.4em;
}

.S-SliderMain[drawDivider=true]::after {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-bottom: 1px solid #BDBDBD;
  left: 0;
  margin-top: 0.25em;
  position: relative;
}

.S-SliderMain[drawDivider=true]::before {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-top: 1px solid #BDBDBD;
  left: 0;
  margin-bottom: 0.2em;
  position: relative;
}

.S-SliderMain > .label {
  position: relative;
  width: 100%;
  display: inline-block;
  box-sizing: border-box;
  text-align: left;
}

.S-SliderMain > .contentBody {
  height: 1em;
  display: flex;
}

.S-SliderMain > .contentBody > .sliderBody {
  order: 1;
  height: 100%;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range] {
  width: 100%;
  position: relative;
  font-size: 1em;
  height: 100%;
  display: inline-block;
  outline: none;
  -webkit-appearance: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-runnable-track {
  box-sizing: border-box;
  width: 100%;
  height: 0.5em;
  background: #ffa228;
  border: none;
  border-radius: 10px;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  border: none;
  vertical-align: baseline;
  height: 1em;
  width: 1em;
  border-radius: 10%;
  margin-top: -0.25em;
  background: white;
  box-sizing: border-box;
  border: 1px solid black;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus {
  outline: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus::-webkit-slider-runnable-track {
  background: #ffa228;
}

.S-SliderMain > .contentBody > .sliderBody > datalist {
  display: none;
  height: 20rem;
  margin-top: -23px;
  background-color: red;
  color: red;
}

.S-SliderMain > .contentBody > .sliderBody > datalist > option {
  background-color: red;
  color: red;
  height: 50px;
}

.S-SliderMain > .contentBody > .valueOutput {
  order: 2;
  height: 1em;
  width: 1.5em;
  display: inline-block;
  box-sizing: border-box;
  text-align: center;
}

.S-SliderMain > .contentBody > .valueOutput[hidden=true] {
  display: none;
}

.SlideShow_S {
  position: relative;
  height: 100%;
  overflow-y: visible !important;
  overflow-x: auto;
  box-sizing: border-box;
  white-space: nowrap;
  background-color: transparent;
}

.SlideShow_S > .inner {
  display: inline-block;
  position: relative;
  height: 100%;
  width: max-content;
  margin-left: auto;
  margin-right: auto;
  background-color: transparent;
}

.SlideShow_S > .inner > .listElement {
  position: relative;
  height: calc(100% - 0.4em);
  box-sizing: border-box;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  margin: 0.2em;
  margin-inline: 0.5em;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: end;
  align-items: end;
}

.SlideShow_S > .inner > .listElement > div {
  bottom: 0;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  aspect-ratio: 2/1;
}

.SlideShow_S > .inner > .listElement > div > span {
  font-size: 2em;
}

.subWindow_MAIN {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: all;
  user-select: none;
}

.subWindow_MAIN > .background {
  position: absolute;
  z-index: 1;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: rgba(255, 255, 255, 0.8509803922);
}

.subWindow_MAIN .content {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  position: absolute;
  z-index: 2;
  width: fit-content;
  max-height: 90vh;
  max-width: 90vw;
  overflow: hidden;
  margin: auto;
  left: 50%;
  height: max-content;
  top: 50%;
  user-select: none;
  pointer-events: all;
  transform: translate(-50%, -50%);
}

.subWindow_MAIN .content > button.button_close {
  position: absolute;
  right: 0.5em;
  z-index: 3;
}

.TableMain {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
}

.TableMain > .ListMain {
  position: relative;
  width: 100%;
  height: 100%;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;
}

.TableMain > .ListMain > .ListElement {
  margin: 0.5em;
  position: relative;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement > .ListElementHover {
  position: absolute;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 1;
  margin: 0;
  padding: 0;
  border: inherit;
  box-shadow: inherit;
  border-radius: inherit;
  background-color: rgba(64, 64, 64, 0.63);
  display: flex;
  flex-direction: column;
  transition: opacity 0.2s;
}

.horizontalLine {
  position: relative;
  margin: 0.1rem;
  left: 1%;
  width: 98%;
  opacity: 1;
  color: #BDBDBD;
  border: none;
  border-top: 0.5px solid #BDBDBD;
  background-color: #BDBDBD;
}

.PriceDiv {
  width: max-content;
  height: max-content !important;
  display: inline-block;
  overflow-wrap: anywhere;
  white-space: nowrap;
}

.s-ObjectEditor {
  width: 25rem;
  box-shadow: inset 1px 0px 0px 0px black, 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white;
}

.s-ObjectEditor > .Table2D {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table > tr {
  width: 0rem;
  box-sizing: border-box;
  border-bottom: 1px solid black;
  overflow: visible;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] {
  display: flex;
  flex-direction: column;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] > td[col*="1"] {
  margin-left: 1rem;
}

.s-ObjectEditor > .Table2D > table > tr > td {
  box-sizing: border-box;
  width: 100%;
  overflow: visible;
  padding-left: 0.25rem;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="0"] {
  width: 33%;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="2"] {
  width: min-content;
}

.s-ObjectEditor > .Table2D > table > tr > td > div {
  position: relative;
}

.s-sideBarMobile {
  position: absolute;
  height: 100%;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  width: 200px;
  transform: translateX(-100%);
  transition: transform 1s ease-in;
}

.s-sideBarMobile[s-state*=active] {
  transform: translateX(0);
}

.s-sideBarMobile > .headContainer {
  display: flex;
  padding: 0.25em;
  height: max-content;
  justify-content: center;
  align-items: center;
  box-shadow: 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white, inset 0px -1px 0px 0px gray;
}

.s-sideBarMobile > .headContainer > .headline {
  width: 100%;
  font-size: 2em;
}

.s-sideBarMobile > .headContainer > .buttonClose {
  position: relative;
  height: 100%;
}

.s-sideBarMobile > .content {
  width: 100%;
  height: 100%;
}

.Spinner1 {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}

.Spinner1[state*=passive] {
  visibility: hidden;
}

.Spinner1 > div {
  box-sizing: border-box;
  display: block;
  position: absolute;
  width: 80%;
  height: 80%;
  margin: 10%;
  border: 8px solid #fff;
  border-radius: 50%;
  animation: Spinner1 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
  border-color: #fff transparent transparent transparent;
}

.Spinner1 > div:nth-child(1) {
  animation-delay: -0.45s;
}

.Spinner1 > div:nth-child(2) {
  animation-delay: -0.3s;
}

.Spinner1 > div:nth-child(3) {
  animation-delay: -0.15s;
}

@keyframes Spinner1 {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.DropDownInputMain_S {
  position: relative;
  overflow: visible !important;
}

.DropDownInputMain_S > .S_InputDiv {
  width: 100%;
  margin: 0;
  margin-bottom: 0;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px;
}

.DropDownInputMain_S > .S_InputDiv > input {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > button {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > .response {
  display: none;
}

.DropDownInputMain_S > .DropDown_expander {
  z-index: 120;
  background-color: transparent;
  position: absolute;
  padding: 0;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.DropDownInputMain_S > .DropDown_expander[state*=active] {
  height: 10em;
}

.DropDownInputMain_S > .DropDown_expander[state*=passive] {
  height: 0em;
}

.DropDownInputMain_S > .DropDown_expander > div {
  z-index: 122;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-top: 0.2em;
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div > span {
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain {
  position: relative;
  overflow: visible !important;
}

.n_SelectInputMain > .Select_expander {
  z-index: 1;
  background-color: transparent;
  position: absolute;
  padding: 1%;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.n_SelectInputMain > .Select_expander[state*=active] {
  height: max-content;
  max-height: 10em;
}

.n_SelectInputMain > .Select_expander[state*=passive] {
  height: 0em;
  display: none;
}

.n_SelectInputMain > .Select_expander > div {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-bottom: 0.5em;
  text-align: center;
  cursor: pointer;
  transition: box-shadow 0.2s;
  transition-timing-function: ease-in;
}

.n_SelectInputMain > .Select_expander > div > span {
  text-align: center;
}

.n_SelectInputMain > .Select_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain > .Select_expander > div:hover {
  box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 3px, rgba(0, 0, 0, 0.21) 0px 0px 3px;
}

.n_inputDiv {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

.n_inputDiv > .inputBody {
  display: flex;
  flex-direction: row;
}

.n_inputDiv > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

.n_inputDiv > .inputBody > input:valid, .n_inputDiv > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

.n_inputDiv > .inputBody > input:valid + label span, .n_inputDiv > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

.n_inputDiv > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

.n_inputDiv > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.n_inputDiv > .inputBody > button {
  background-color: transparent;
}

.n_inputDiv > .response > span {
  color: red;
}

s-input {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

s-input > .inputBody {
  display: flex;
  flex-direction: row;
}

s-input > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

s-input > .inputBody > input:valid, s-input > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

s-input > .inputBody > input:valid + label span, s-input > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

s-input > .inputBody > input[state=passive] {
  border-bottom: 2px red solid;
}

s-input > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

s-input > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

s-input > .inputBody > button {
  background-color: transparent;
}

s-input > .response > span {
  color: red;
}

.S-AddressInput {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  column-gap: 0.5em;
  grid-template-areas: "fN fN fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.S-AddressInput > div, .S-AddressInput s-input {
  background-color: transparent;
  box-sizing: border-box;
}

.S-AddressInput > div > .inputBody, .S-AddressInput s-input > .inputBody {
  padding-top: 0.5em;
}

.S-AddressInput > div[identifier*=title], .S-AddressInput s-input[identifier*=title] {
  display: none;
}

.S-AddressInput > div[id*=salutation], .S-AddressInput s-input[id*=salutation] {
  display: none;
  grid-area: none;
}

.S-AddressInput > div[identifier*=firstName], .S-AddressInput s-input[identifier*=firstName] {
  grid-area: fN;
}

.S-AddressInput > div[identifier*=lastName], .S-AddressInput s-input[identifier*=lastName] {
  grid-area: lN;
}

.S-AddressInput > div[identifier*=postcode], .S-AddressInput s-input[identifier*=postcode] {
  grid-area: plz;
}

.S-AddressInput > div[identifier*=city], .S-AddressInput s-input[identifier*=city] {
  grid-area: ct;
}

.S-AddressInput > div[id*=country], .S-AddressInput s-input[id*=country] {
  grid-area: cy;
}

.S-AddressInput > div[identifier*=street], .S-AddressInput s-input[identifier*=street] {
  grid-area: st;
}

.S-AddressInput > div[identifier*=housenumber], .S-AddressInput s-input[identifier*=housenumber] {
  grid-area: hn;
}

.S-AddressInput > div[identifier*=email], .S-AddressInput s-input[identifier*=email] {
  grid-area: ema;
}

.S-AddressInput > div[identifier*=phone], .S-AddressInput s-input[identifier*=phone] {
  grid-area: ph;
}

.S-AddressInput > s-input {
  padding-bottom: -0.5em;
}

.n_RadioButton {
  position: relative;
}

.n_RadioButton > .radio_headline {
  position: relative;
}

.n_RadioButton > .inner {
  position: relative;
}

.n_RadioButton > .inner > div {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
  justify-content: start;
  align-items: center;
}

.n_RadioButton > .inner > div > .inputBody {
  position: relative;
  box-sizing: border-box;
  width: 1em;
  margin: 0.5em;
  height: 1em;
  min-width: 1em;
}

.n_RadioButton > .inner > div > .inputBody > input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span {
  box-sizing: border-box;
  background-color: #2196F3;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span:after {
  box-sizing: border-box;
  display: block;
}

.n_RadioButton > .inner > div > .inputBody > span {
  box-sizing: content-box;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background-color: #eee;
  border-radius: 50%;
}

.n_RadioButton > .inner > div > .inputBody > span:after {
  box-sizing: border-box;
  content: "";
  left: 0;
  top: 0;
  position: absolute;
  display: none;
  margin: 25%;
  width: 50%;
  height: 50%;
  border-radius: 50%;
  background: white;
}

.n_RadioButton > .inner > div > .inputBody:hover input ~ span {
  background-color: #ccc;
}

.toggleButton {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  display: flex;
  justify-content: space-around;
  width: max-content;
  overflow: hidden;
}

.toggleButton > button {
  width: 100%;
  padding: 0.5rem;
  background-color: transparent;
  border: none;
  cursor: pointer;
}

.toggleButton > button:hover {
  background-color: #FFAD5B;
}

.toggleButton > button[state*=active] {
  background-color: #ffa228;
}

.s-ToggleButton_2 {
  width: max-content;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
}

.s-ToggleButton_2 > button {
  border: none;
  border-radius: 0;
  outline: none;
  padding: 0em;
  min-height: 1rem;
  height: 100%;
  width: 100%;
  margin: 0.25em;
}

.s-ToggleButton_2 > button.btFALSE {
  background-color: red;
}

.s-ToggleButton_2 > button.btFALSE[state*=passive] {
  background-color: rgba(255, 0, 0, 0.3);
}

.s-ToggleButton_2 > button.btTRUE {
  background-color: green;
}

.s-ToggleButton_2 > button.btTRUE[state*=passive] {
  background-color: rgba(0, 128, 0, 0.3);
}

.S_SVGElement_BODY {
  position: relative;
  background-color: transparent;
}

.S_SVGElement_BODY > svg {
  position: relative;
}

.addressMenuNewMain > [id*=menuElement] > div {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  grid-template-areas: "salutation salutation fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.addressMenuNewMain > [id*=menuElement] > div > div {
  background-color: transparent;
  box-sizing: border-box;
}

.addressMenuNewMain > [id*=menuElement] > div > div.S_InputDiv {
  padding-bottom: -0.5em;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=title] {
  display: none;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=salutation] {
  grid-area: salutation;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=firstName] {
  grid-area: fN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=lastName] {
  grid-area: lN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=postcode] {
  grid-area: plz;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=city] {
  grid-area: ct;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=country] {
  grid-area: cy;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=street] {
  grid-area: st;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=housenumber] {
  grid-area: hn;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=email] {
  grid-area: ema;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=phone] {
  grid-area: ph;
}

/* Media Queries */
/* ------- */
/* Desktop */
/* ------- */
.CursorMain {
  display: all;
  backface-visibility: hidden;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
  width: 100px;
  height: 100px;
  background-color: red;
  z-index: 999;
}

.customCursor {
  position: absolute;
  box-sizing: content-box;
  will-change: transform;
  margin: 0;
  padding: 0;
  top: 0;
  left: 0;
  pointer-events: none;
  user-select: none;
  display: auto;
  z-index: 1000;
}
.customCursor.red {
  background-color: red;
}
.customCursor.orange {
  color: orange !important;
}

.button_Default {
  user-select: none;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 0px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  box-sizing: content-box;
  margin: 0.5em;
  overflow: hidden;
}
.button_Default > span {
  box-sizing: border-box;
}
.button_Default[state*=active] {
  background-color: #FFAD5B;
}
.button_Default[state*=passive] {
  background-color: #fff1de;
}
.button_Default:hover {
  background-color: #ffa228;
}

.button_General {
  user-select: none;
  background-color: transparent;
  border: none;
  color: #000000;
  display: inline-block;
  font-size: 1em;
  cursor: pointer;
  border-radius: 0px;
}
.button_General > span {
  display: block;
  position: relative;
  text-align: center;
}
.button_General > span:not(.material-symbols-outlined) {
  text-decoration: underline;
}
.button_General > .dropdown {
  position: absolute;
  left: 100%;
  margin-left: 10%;
  top: 0;
  width: fit-content;
  height: max-content;
  overflow: hidden;
}
.button_General:hover > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonAnimation;
}
.button_General:hover > span.material-symbols-outlined {
  color: #ffa228 !important;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonIconAnimation;
}
.button_General:hover > span.material-symbols-outlined.rotate90 {
  animation-name: buttonIconAnimation90;
}
.button_General:hover:after > span {
  color: white;
}
.button_General:hover:after > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-out;
  animation-fill-mode: backwards;
  animation-direction: reverse;
  animation-name: buttonAnimationB;
}
.button_General:hover:after > span.material-symbols-outlined {
  color: #ffa228 !important;
}
.button_General.simple {
  background-color: transparent;
  border: none;
  text-decoration: underline;
}

/* width */
::-webkit-scrollbar {
  margin-inline: 2px;
  width: 5px;
}

/* Track */
::-webkit-scrollbar-track {
  width: 2px;
  transform: scale(2);
  background: transparent;
}

/* Handle */
::-webkit-scrollbar-thumb {
  width: 5px;
  transform: scale(2);
  background: rgb(189, 189, 189);
  border-radius: 0px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: gray;
}

body {
  background-color: #fff8f1;
}
body * {
  font-family: "Arial";
  margin: 0;
  padding: 0;
}

.Slider_main > .Slider_inputBody input[type=range] {
  appearance: none;
  background: transparent;
  width: 100%;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-thumb {
  position: relative;
  appearance: none;
  width: 9px;
  height: 20px;
  background-color: #FFAD5B;
  transform: translateY(-40%);
  border-radius: 2px 2px;
  z-index: 20;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-runnable-track {
  position: relative;
  cursor: pointer;
  border-radius: 2px 2px;
  height: 20%;
  z-index: 19;
  /* Hides the slider so custom styles can be added */
  background-color: #000000;
}
.Slider_main > .Slider_inputBody > hr {
  position: absolute;
  margin-left: calc((100% - (2.1em + 6px)) / var(--size) * var(--index));
  z-index: 1;
  left: 5px;
  background-color: darkgray;
  width: 0.5px;
  top: 25%;
  height: 50%;
  margin-top: 0;
}
.Slider_main > .Slider_inputBody > hr:nth-child(even) {
  top: 12.5%;
  height: 75%;
}

body {
  position: relative;
  width: 100vw;
  overflow: hidden;
  box-sizing: content-box;
  top: 6vh;
  height: 94vh;
}
@media only screen and (max-width: 980px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 981px) and (max-width: 1199px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 1200px) {
  body {
    font-size: 1em;
  }
}

.Table {
  border: 1px solid black;
  position: relative;
  width: 50%;
}
.Table > div {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}
.Table > div > label {
  position: relative;
  overflow: hidden;
}
.Table > div > span {
  position: relative;
  overflow: hidden;
}

.bold {
  font-weight: bold;
}

.LoadBar {
  z-index: 3;
  border-radius: 0px;
  position: relative !important;
  background-color: red !important;
  width: 100% !important;
  height: 2em !important;
  overflow: hidden;
}
.LoadBar .LoadBar-progress {
  position: relative;
  height: 100%;
  background-color: green !important;
}

.LineDiv {
  position: relative;
  margin: 0;
  padding: 0;
  flex: auto;
  overflow: hidden;
  height: 100%;
  border: none;
}
.LineDiv hr {
  display: block;
  position: relative;
  color: orange;
  background-color: orange;
  opacity: 1;
  width: 0%;
  margin: 0;
  top: 50%;
  visibility: visible;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;
}

@keyframes NavBarLine {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}
.Text-primary {
  color: #000000;
}

.Text-secondary {
  color: #BCBCBC;
}

.Text-small {
  font-size: 0.75em;
}

.SliderDivMain {
  border: 1px solid black;
}

.TextInputDiv {
  position: relative;
  background-color: #fff8f1;
  border-radius: 0px;
  margin: 0.5em;
  margin-bottom: 1.5em;
  font-size: inherit;
  height: 10em;
}
.TextInputDiv textarea {
  position: relative;
  outline: 0;
  resize: none;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 0px !important;
}
.TextInputDiv textarea.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 1.1em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.TextInputDiv textarea::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.TextInputDiv label {
  user-select: none;
  position: absolute;
  z-index: 1;
  width: 100%;
  background-color: #fff8f1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.11em;
  padding-top: 0.39em;
  padding-bottom: 0.13em;
  border-top-right-radius: 5px 5px;
}
.TextInputDiv .horizontalLine {
  position: absolute;
  z-index: 2;
  width: 100%;
  top: 0.89em;
  height: 0px;
  left: 0;
  margin-block: 0px;
  margin-inline: 0.5em;
}

.InputDivMain {
  position: relative;
  background-color: #fff8f1;
  margin: 0.5em;
  height: min-content;
  display: inline-flex;
}
.InputDivMain button {
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}
.InputDivMain button > span {
  position: relative;
  font-size: 1.3em;
}
.InputDivMain button[state*=active] {
  background-color: #ffa228;
}
.InputDivMain button[state*=passive] {
  background-color: transparent;
}
.InputDivMain button[state*=passive]:hover {
  background-color: #FFAD5B;
}
.InputDivMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}
.InputDivMain input {
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 0px !important;
  outline: none;
}
.InputDivMain input.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.InputDivMain input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}
.InputDivMain input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.InputDivMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

:root {
  --main-font: "Montserrat";
  --primary: "";
  --primary-text: #333;
}

* {
  margin: 0;
  padding: 0;
  font-family: var(--main-font);
}

.tooltip_S[state*=active]:after, .tooltip_S[state*=active]:before {
  display: none;
}

.tooltip_S[data-tooltip-direction=right] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=right]:after {
  pointer-events: none;
  content: attr(data-tooltip-value);
  position: absolute;
  z-index: 10;
  top: 50%;
  transform: translateY(-50%);
  left: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=right]:before {
  pointer-events: none;
  content: "";
  position: absolute;
  z-index: 10;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-right: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=right]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  left: 110%;
}

.tooltip_S[data-tooltip-direction=right]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  left: 103%;
}

.tooltip_S[data-tooltip-direction=right]:hover:after, .tooltip_S[data-tooltip-direction=right]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=top] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=top]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  bottom: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=top]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  bottom: 130%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after {
  bottom: 120%;
}

.tooltip_S[data-tooltip-direction=top]:hover:before {
  bottom: 103%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after, .tooltip_S[data-tooltip-direction=top]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=left] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=left]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=left]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-left: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  right: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=left]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  right: 110%;
}

.tooltip_S[data-tooltip-direction=left]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  right: 103%;
}

.tooltip_S[data-tooltip-direction=left]:hover:after, .tooltip_S[data-tooltip-direction=left]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=bottom] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=bottom]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=bottom]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-bottom: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  top: 130%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after {
  top: 120%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:before {
  top: 103%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after, .tooltip_S[data-tooltip-direction=bottom]:hover:before {
  opacity: 1;
}

.AdaptiveTableMain {
  position: relative;
  display: block;
  width: 98%;
  height: 100%;
  overflow: hidden;
  overflow-y: auto;
}

.AdaptiveTableMain > .ListMain {
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

.AdaptiveTableMain > .ListMain > .column {
  position: relative;
  width: 90%;
  height: fit-content;
  flex-direction: column;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement {
  user-select: none;
  padding: 0.5em;
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: inline-block;
  height: fit-content;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > img {
  user-select: none;
  box-sizing: border-box;
  overflow: hidden;
  display: block;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  position: relative;
  width: 100%;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv {
  user-select: none;
  border-radius: 5px 5px;
  position: absolute;
  top: 0;
  margin: 0.5em;
  left: 0;
  width: calc(100% - 1em);
  height: calc(100% - 1em);
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
  background-color: rgba(94, 94, 94, 0.471);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv:hover {
  opacity: 1;
  box-shadow: rgba(0, 0, 0, 0.55) 0px 0px 3px, rgba(0, 0, 0, 0.51) 0px 0px 3px;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .informationDiv {
  display: none;
  position: relative;
  top: 0;
  margin: 0.5em;
  border-radius: 5px 5px;
  left: 0;
  background-color: rgba(255, 0, 0, 0.299);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv {
  user-select: none;
  position: absolute;
  bottom: 0;
  left: 0;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv > button {
  user-select: none;
}

.AmountDiv {
  display: flex;
  position: relative;
  border: 1px solid black;
  box-sizing: border-box;
  width: fit-content;
  padding: 0.2em;
}

.AmountDiv > button {
  width: 33%;
  position: relative;
  box-sizing: border-box;
  border-radius: 0px 0px;
}

.AmountDiv > button > span {
  font-size: 1em;
}

.AmountDiv > div {
  position: relative;
  width: 2em;
  margin: 0;
  background-color: transparent;
  padding: 0;
  overflow: hidden;
}

.AmountDiv > div > input {
  font-size: 1em;
  background-color: transparent;
  position: relative;
  border: none;
  outline: none;
  width: 100%;
  height: 100%;
  text-align: center;
}

.button_Default {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.button_Default > span {
  display: block;
}

.button_Default:hover {
  background-color: red;
}

.s-button_basic {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_basic > span {
  display: block;
}

.s-button_link {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_link > span {
  text-decoration: underline;
  color: blue;
  display: block;
}

.s-button_link:hover > span {
  color: rgb(34, 34, 255);
}

.DropDownInputMain {
  position: relative;
  background-color: #ffd7af;
  border-radius: 5px;
  margin: 0.5em;
  font-size: inherit;
}

.DropDownInputMain select {
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.25em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 5px 5px !important;
}

.DropDownInputMain select.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.25em;
}

.DropDownInputMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.DropDownInputMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

.header {
  position: fixed;
  width: 100%;
  height: 4rem;
  display: flex;
  flex-direction: row;
  alignItems: center;
  justifyContent: space-between !important;
  background-color: var(--bg-color);
  box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.2);
}

.header > .logoLinkBox {
  position: relative;
  margin-left: 3rem;
  min-width: 3rem;
  width: auto;
  max-width: 15rem;
  height: 4rem;
  display: flex;
  align-items: center;
  justify-content: start;
  text-decoration: none;
  cursor: pointer;
  user-select: none;
}

.header > .logoLinkBox > .logoIcon {
  position: relative;
  width: 2.5rem;
}

.header > .logoLinkBox > .logoText {
  position: relative;
  margin-left: 0.5rem;
  font-size: 1.3rem;
  font-weight: 600;
  color: #333 !important;
}

.header > .headerNavigation {
  position: absolute;
  right: 3rem;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: end;
}

.header > .headerNavigation > button {
  font-size: 1.1rem;
  margin-left: 1.5rem;
}

.header > .headerNavigation > button > span {
  position: relative;
  text-decoration: none;
  color: #a8a8a8;
}

.S_InputDiv {
  position: relative;
  background-color: #ffd7af;
  margin: 0.5em;
  height: min-content;
  display: flex;
  flex-wrap: wrap;
}

.S_InputDiv > button {
  flex: 0 1;
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}

.S_InputDiv > button > span {
  position: relative;
  font-size: 1.3em;
}

.S_InputDiv > button[state*=active] {
  background-color: #ffa228;
}

.S_InputDiv > button[state*=passive] {
  background-color: transparent;
}

.S_InputDiv > button[state*=passive]:hover {
  background-color: #FFAD5B;
}

.S_InputDiv label.switchLabel {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.S_InputDiv input {
  flex: 2 1;
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 5px 5px !important;
  outline: none;
}

.S_InputDiv input.filled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}

.S_InputDiv input[state*=passive] {
  color: red;
  background-color: #fff1de;
}

.S_InputDiv input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}

.S_InputDiv input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}

.S_InputDiv > .response {
  align-self: flex-end;
  text-align: justify;
  width: 100%;
  color: red;
}

.S_InputDiv .invalidInput {
  color: red;
  background-color: #fff1de;
}

.progressBar_Splint {
  position: absolute;
  width: 10em;
  background-color: blue;
  display: flex;
}

.progressBar_Splint > .S_progressBar_Body {
  width: 100%;
  border: 1px solid black;
}

.progressBar_Splint > .S_progressBar_Body > .S_progressBar_Inner {
  width: 100%;
  height: 100%;
  background-color: red;
}

.S-SliderMain {
  margin-top: 0.4em;
  margin-bottom: 0.4em;
}

.S-SliderMain[drawDivider=true]::after {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-bottom: 1px solid #BDBDBD;
  left: 0;
  margin-top: 0.25em;
  position: relative;
}

.S-SliderMain[drawDivider=true]::before {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-top: 1px solid #BDBDBD;
  left: 0;
  margin-bottom: 0.2em;
  position: relative;
}

.S-SliderMain > .label {
  position: relative;
  width: 100%;
  display: inline-block;
  box-sizing: border-box;
  text-align: left;
}

.S-SliderMain > .contentBody {
  height: 1em;
  display: flex;
}

.S-SliderMain > .contentBody > .sliderBody {
  order: 1;
  height: 100%;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range] {
  width: 100%;
  position: relative;
  font-size: 1em;
  height: 100%;
  display: inline-block;
  outline: none;
  -webkit-appearance: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-runnable-track {
  box-sizing: border-box;
  width: 100%;
  height: 0.5em;
  background: #ffa228;
  border: none;
  border-radius: 10px;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  border: none;
  vertical-align: baseline;
  height: 1em;
  width: 1em;
  border-radius: 10%;
  margin-top: -0.25em;
  background: white;
  box-sizing: border-box;
  border: 1px solid black;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus {
  outline: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus::-webkit-slider-runnable-track {
  background: #ffa228;
}

.S-SliderMain > .contentBody > .sliderBody > datalist {
  display: none;
  height: 20rem;
  margin-top: -23px;
  background-color: red;
  color: red;
}

.S-SliderMain > .contentBody > .sliderBody > datalist > option {
  background-color: red;
  color: red;
  height: 50px;
}

.S-SliderMain > .contentBody > .valueOutput {
  order: 2;
  height: 1em;
  width: 1.5em;
  display: inline-block;
  box-sizing: border-box;
  text-align: center;
}

.S-SliderMain > .contentBody > .valueOutput[hidden=true] {
  display: none;
}

.SlideShow_S {
  position: relative;
  height: 100%;
  overflow-y: visible !important;
  overflow-x: auto;
  box-sizing: border-box;
  white-space: nowrap;
  background-color: transparent;
}

.SlideShow_S > .inner {
  display: inline-block;
  position: relative;
  height: 100%;
  width: max-content;
  margin-left: auto;
  margin-right: auto;
  background-color: transparent;
}

.SlideShow_S > .inner > .listElement {
  position: relative;
  height: calc(100% - 0.4em);
  box-sizing: border-box;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  margin: 0.2em;
  margin-inline: 0.5em;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: end;
  align-items: end;
}

.SlideShow_S > .inner > .listElement > div {
  bottom: 0;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  aspect-ratio: 2/1;
}

.SlideShow_S > .inner > .listElement > div > span {
  font-size: 2em;
}

.subWindow_MAIN {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: all;
  user-select: none;
}

.subWindow_MAIN > .background {
  position: absolute;
  z-index: 1;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: rgba(255, 255, 255, 0.8509803922);
}

.subWindow_MAIN .content {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  position: absolute;
  z-index: 2;
  width: fit-content;
  max-height: 90vh;
  max-width: 90vw;
  overflow: hidden;
  margin: auto;
  left: 50%;
  height: max-content;
  top: 50%;
  user-select: none;
  pointer-events: all;
  transform: translate(-50%, -50%);
}

.subWindow_MAIN .content > button.button_close {
  position: absolute;
  right: 0.5em;
  z-index: 3;
}

.TableMain {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
}

.TableMain > .ListMain {
  position: relative;
  width: 100%;
  height: 100%;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;
}

.TableMain > .ListMain > .ListElement {
  margin: 0.5em;
  position: relative;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement > .ListElementHover {
  position: absolute;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 1;
  margin: 0;
  padding: 0;
  border: inherit;
  box-shadow: inherit;
  border-radius: inherit;
  background-color: rgba(64, 64, 64, 0.63);
  display: flex;
  flex-direction: column;
  transition: opacity 0.2s;
}

.horizontalLine {
  position: relative;
  margin: 0.1rem;
  left: 1%;
  width: 98%;
  opacity: 1;
  color: #BDBDBD;
  border: none;
  border-top: 0.5px solid #BDBDBD;
  background-color: #BDBDBD;
}

.PriceDiv {
  width: max-content;
  height: max-content !important;
  display: inline-block;
  overflow-wrap: anywhere;
  white-space: nowrap;
}

.s-ObjectEditor {
  width: 25rem;
  box-shadow: inset 1px 0px 0px 0px black, 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white;
}

.s-ObjectEditor > .Table2D {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table > tr {
  width: 0rem;
  box-sizing: border-box;
  border-bottom: 1px solid black;
  overflow: visible;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] {
  display: flex;
  flex-direction: column;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] > td[col*="1"] {
  margin-left: 1rem;
}

.s-ObjectEditor > .Table2D > table > tr > td {
  box-sizing: border-box;
  width: 100%;
  overflow: visible;
  padding-left: 0.25rem;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="0"] {
  width: 33%;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="2"] {
  width: min-content;
}

.s-ObjectEditor > .Table2D > table > tr > td > div {
  position: relative;
}

.s-sideBarMobile {
  position: absolute;
  height: 100%;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  width: 200px;
  transform: translateX(-100%);
  transition: transform 1s ease-in;
}

.s-sideBarMobile[s-state*=active] {
  transform: translateX(0);
}

.s-sideBarMobile > .headContainer {
  display: flex;
  padding: 0.25em;
  height: max-content;
  justify-content: center;
  align-items: center;
  box-shadow: 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white, inset 0px -1px 0px 0px gray;
}

.s-sideBarMobile > .headContainer > .headline {
  width: 100%;
  font-size: 2em;
}

.s-sideBarMobile > .headContainer > .buttonClose {
  position: relative;
  height: 100%;
}

.s-sideBarMobile > .content {
  width: 100%;
  height: 100%;
}

.Spinner1 {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}

.Spinner1[state*=passive] {
  visibility: hidden;
}

.Spinner1 > div {
  box-sizing: border-box;
  display: block;
  position: absolute;
  width: 80%;
  height: 80%;
  margin: 10%;
  border: 8px solid #fff;
  border-radius: 50%;
  animation: Spinner1 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
  border-color: #fff transparent transparent transparent;
}

.Spinner1 > div:nth-child(1) {
  animation-delay: -0.45s;
}

.Spinner1 > div:nth-child(2) {
  animation-delay: -0.3s;
}

.Spinner1 > div:nth-child(3) {
  animation-delay: -0.15s;
}

@keyframes Spinner1 {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.DropDownInputMain_S {
  position: relative;
  overflow: visible !important;
}

.DropDownInputMain_S > .S_InputDiv {
  width: 100%;
  margin: 0;
  margin-bottom: 0;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px;
}

.DropDownInputMain_S > .S_InputDiv > input {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > button {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > .response {
  display: none;
}

.DropDownInputMain_S > .DropDown_expander {
  z-index: 120;
  background-color: transparent;
  position: absolute;
  padding: 0;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.DropDownInputMain_S > .DropDown_expander[state*=active] {
  height: 10em;
}

.DropDownInputMain_S > .DropDown_expander[state*=passive] {
  height: 0em;
}

.DropDownInputMain_S > .DropDown_expander > div {
  z-index: 122;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-top: 0.2em;
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div > span {
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain {
  position: relative;
  overflow: visible !important;
}

.n_SelectInputMain > .Select_expander {
  z-index: 1;
  background-color: transparent;
  position: absolute;
  padding: 1%;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.n_SelectInputMain > .Select_expander[state*=active] {
  height: max-content;
  max-height: 10em;
}

.n_SelectInputMain > .Select_expander[state*=passive] {
  height: 0em;
  display: none;
}

.n_SelectInputMain > .Select_expander > div {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-bottom: 0.5em;
  text-align: center;
  cursor: pointer;
  transition: box-shadow 0.2s;
  transition-timing-function: ease-in;
}

.n_SelectInputMain > .Select_expander > div > span {
  text-align: center;
}

.n_SelectInputMain > .Select_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain > .Select_expander > div:hover {
  box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 3px, rgba(0, 0, 0, 0.21) 0px 0px 3px;
}

.n_inputDiv {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

.n_inputDiv > .inputBody {
  display: flex;
  flex-direction: row;
}

.n_inputDiv > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

.n_inputDiv > .inputBody > input:valid, .n_inputDiv > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

.n_inputDiv > .inputBody > input:valid + label span, .n_inputDiv > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

.n_inputDiv > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

.n_inputDiv > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.n_inputDiv > .inputBody > button {
  background-color: transparent;
}

.n_inputDiv > .response > span {
  color: red;
}

s-input {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

s-input > .inputBody {
  display: flex;
  flex-direction: row;
}

s-input > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

s-input > .inputBody > input:valid, s-input > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

s-input > .inputBody > input:valid + label span, s-input > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

s-input > .inputBody > input[state=passive] {
  border-bottom: 2px red solid;
}

s-input > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

s-input > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

s-input > .inputBody > button {
  background-color: transparent;
}

s-input > .response > span {
  color: red;
}

.S-AddressInput {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  column-gap: 0.5em;
  grid-template-areas: "fN fN fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.S-AddressInput > div, .S-AddressInput s-input {
  background-color: transparent;
  box-sizing: border-box;
}

.S-AddressInput > div > .inputBody, .S-AddressInput s-input > .inputBody {
  padding-top: 0.5em;
}

.S-AddressInput > div[identifier*=title], .S-AddressInput s-input[identifier*=title] {
  display: none;
}

.S-AddressInput > div[id*=salutation], .S-AddressInput s-input[id*=salutation] {
  display: none;
  grid-area: none;
}

.S-AddressInput > div[identifier*=firstName], .S-AddressInput s-input[identifier*=firstName] {
  grid-area: fN;
}

.S-AddressInput > div[identifier*=lastName], .S-AddressInput s-input[identifier*=lastName] {
  grid-area: lN;
}

.S-AddressInput > div[identifier*=postcode], .S-AddressInput s-input[identifier*=postcode] {
  grid-area: plz;
}

.S-AddressInput > div[identifier*=city], .S-AddressInput s-input[identifier*=city] {
  grid-area: ct;
}

.S-AddressInput > div[id*=country], .S-AddressInput s-input[id*=country] {
  grid-area: cy;
}

.S-AddressInput > div[identifier*=street], .S-AddressInput s-input[identifier*=street] {
  grid-area: st;
}

.S-AddressInput > div[identifier*=housenumber], .S-AddressInput s-input[identifier*=housenumber] {
  grid-area: hn;
}

.S-AddressInput > div[identifier*=email], .S-AddressInput s-input[identifier*=email] {
  grid-area: ema;
}

.S-AddressInput > div[identifier*=phone], .S-AddressInput s-input[identifier*=phone] {
  grid-area: ph;
}

.S-AddressInput > s-input {
  padding-bottom: -0.5em;
}

.n_RadioButton {
  position: relative;
}

.n_RadioButton > .radio_headline {
  position: relative;
}

.n_RadioButton > .inner {
  position: relative;
}

.n_RadioButton > .inner > div {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
  justify-content: start;
  align-items: center;
}

.n_RadioButton > .inner > div > .inputBody {
  position: relative;
  box-sizing: border-box;
  width: 1em;
  margin: 0.5em;
  height: 1em;
  min-width: 1em;
}

.n_RadioButton > .inner > div > .inputBody > input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span {
  box-sizing: border-box;
  background-color: #2196F3;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span:after {
  box-sizing: border-box;
  display: block;
}

.n_RadioButton > .inner > div > .inputBody > span {
  box-sizing: content-box;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background-color: #eee;
  border-radius: 50%;
}

.n_RadioButton > .inner > div > .inputBody > span:after {
  box-sizing: border-box;
  content: "";
  left: 0;
  top: 0;
  position: absolute;
  display: none;
  margin: 25%;
  width: 50%;
  height: 50%;
  border-radius: 50%;
  background: white;
}

.n_RadioButton > .inner > div > .inputBody:hover input ~ span {
  background-color: #ccc;
}

.toggleButton {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  display: flex;
  justify-content: space-around;
  width: max-content;
  overflow: hidden;
}

.toggleButton > button {
  width: 100%;
  padding: 0.5rem;
  background-color: transparent;
  border: none;
  cursor: pointer;
}

.toggleButton > button:hover {
  background-color: #FFAD5B;
}

.toggleButton > button[state*=active] {
  background-color: #ffa228;
}

.s-ToggleButton_2 {
  width: max-content;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
}

.s-ToggleButton_2 > button {
  border: none;
  border-radius: 0;
  outline: none;
  padding: 0em;
  min-height: 1rem;
  height: 100%;
  width: 100%;
  margin: 0.25em;
}

.s-ToggleButton_2 > button.btFALSE {
  background-color: red;
}

.s-ToggleButton_2 > button.btFALSE[state*=passive] {
  background-color: rgba(255, 0, 0, 0.3);
}

.s-ToggleButton_2 > button.btTRUE {
  background-color: green;
}

.s-ToggleButton_2 > button.btTRUE[state*=passive] {
  background-color: rgba(0, 128, 0, 0.3);
}

.S_SVGElement_BODY {
  position: relative;
  background-color: transparent;
}

.S_SVGElement_BODY > svg {
  position: relative;
}

.addressMenuNewMain > [id*=menuElement] > div {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  grid-template-areas: "salutation salutation fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.addressMenuNewMain > [id*=menuElement] > div > div {
  background-color: transparent;
  box-sizing: border-box;
}

.addressMenuNewMain > [id*=menuElement] > div > div.S_InputDiv {
  padding-bottom: -0.5em;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=title] {
  display: none;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=salutation] {
  grid-area: salutation;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=firstName] {
  grid-area: fN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=lastName] {
  grid-area: lN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=postcode] {
  grid-area: plz;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=city] {
  grid-area: ct;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=country] {
  grid-area: cy;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=street] {
  grid-area: st;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=housenumber] {
  grid-area: hn;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=email] {
  grid-area: ema;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=phone] {
  grid-area: ph;
}

/* Media Queries */
/* ------- */
/* Desktop */
/* ------- */
.CursorMain {
  display: all;
  backface-visibility: hidden;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
  width: 100px;
  height: 100px;
  background-color: red;
  z-index: 999;
}

.customCursor {
  position: absolute;
  box-sizing: content-box;
  will-change: transform;
  margin: 0;
  padding: 0;
  top: 0;
  left: 0;
  pointer-events: none;
  user-select: none;
  display: auto;
  z-index: 1000;
}
.customCursor.red {
  background-color: red;
}
.customCursor.orange {
  color: orange !important;
}

.button_Default {
  user-select: none;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 0px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  box-sizing: content-box;
  margin: 0.5em;
  overflow: hidden;
}
.button_Default > span {
  box-sizing: border-box;
}
.button_Default[state*=active] {
  background-color: #FFAD5B;
}
.button_Default[state*=passive] {
  background-color: #fff1de;
}
.button_Default:hover {
  background-color: #ffa228;
}

.button_General {
  user-select: none;
  background-color: transparent;
  border: none;
  color: #000000;
  display: inline-block;
  font-size: 1em;
  cursor: pointer;
  border-radius: 0px;
}
.button_General > span {
  display: block;
  position: relative;
  text-align: center;
}
.button_General > span:not(.material-symbols-outlined) {
  text-decoration: underline;
}
.button_General > .dropdown {
  position: absolute;
  left: 100%;
  margin-left: 10%;
  top: 0;
  width: fit-content;
  height: max-content;
  overflow: hidden;
}
.button_General:hover > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonAnimation;
}
.button_General:hover > span.material-symbols-outlined {
  color: #ffa228 !important;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonIconAnimation;
}
.button_General:hover > span.material-symbols-outlined.rotate90 {
  animation-name: buttonIconAnimation90;
}
.button_General:hover:after > span {
  color: white;
}
.button_General:hover:after > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-out;
  animation-fill-mode: backwards;
  animation-direction: reverse;
  animation-name: buttonAnimationB;
}
.button_General:hover:after > span.material-symbols-outlined {
  color: #ffa228 !important;
}
.button_General.simple {
  background-color: transparent;
  border: none;
  text-decoration: underline;
}

/* width */
::-webkit-scrollbar {
  margin-inline: 2px;
  width: 5px;
}

/* Track */
::-webkit-scrollbar-track {
  width: 2px;
  transform: scale(2);
  background: transparent;
}

/* Handle */
::-webkit-scrollbar-thumb {
  width: 5px;
  transform: scale(2);
  background: rgb(189, 189, 189);
  border-radius: 0px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: gray;
}

body {
  background-color: #fff8f1;
}
body * {
  font-family: "Arial";
  margin: 0;
  padding: 0;
}

.Slider_main > .Slider_inputBody input[type=range] {
  appearance: none;
  background: transparent;
  width: 100%;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-thumb {
  position: relative;
  appearance: none;
  width: 9px;
  height: 20px;
  background-color: #FFAD5B;
  transform: translateY(-40%);
  border-radius: 2px 2px;
  z-index: 20;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-runnable-track {
  position: relative;
  cursor: pointer;
  border-radius: 2px 2px;
  height: 20%;
  z-index: 19;
  /* Hides the slider so custom styles can be added */
  background-color: #000000;
}
.Slider_main > .Slider_inputBody > hr {
  position: absolute;
  margin-left: calc((100% - (2.1em + 6px)) / var(--size) * var(--index));
  z-index: 1;
  left: 5px;
  background-color: darkgray;
  width: 0.5px;
  top: 25%;
  height: 50%;
  margin-top: 0;
}
.Slider_main > .Slider_inputBody > hr:nth-child(even) {
  top: 12.5%;
  height: 75%;
}

body {
  position: relative;
  width: 100vw;
  overflow: hidden;
  box-sizing: content-box;
  top: 6vh;
  height: 94vh;
}
@media only screen and (max-width: 980px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 981px) and (max-width: 1199px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 1200px) {
  body {
    font-size: 1em;
  }
}

.Table {
  border: 1px solid black;
  position: relative;
  width: 50%;
}
.Table > div {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}
.Table > div > label {
  position: relative;
  overflow: hidden;
}
.Table > div > span {
  position: relative;
  overflow: hidden;
}

.bold {
  font-weight: bold;
}

.LoadBar {
  z-index: 3;
  border-radius: 0px;
  position: relative !important;
  background-color: red !important;
  width: 100% !important;
  height: 2em !important;
  overflow: hidden;
}
.LoadBar .LoadBar-progress {
  position: relative;
  height: 100%;
  background-color: green !important;
}

.LineDiv {
  position: relative;
  margin: 0;
  padding: 0;
  flex: auto;
  overflow: hidden;
  height: 100%;
  border: none;
}
.LineDiv hr {
  display: block;
  position: relative;
  color: orange;
  background-color: orange;
  opacity: 1;
  width: 0%;
  margin: 0;
  top: 50%;
  visibility: visible;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;
}

@keyframes NavBarLine {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}
.Text-primary {
  color: #000000;
}

.Text-secondary {
  color: #BCBCBC;
}

.Text-small {
  font-size: 0.75em;
}

.SliderDivMain {
  border: 1px solid black;
}

.TextInputDiv {
  position: relative;
  background-color: #fff8f1;
  border-radius: 0px;
  margin: 0.5em;
  margin-bottom: 1.5em;
  font-size: inherit;
  height: 10em;
}
.TextInputDiv textarea {
  position: relative;
  outline: 0;
  resize: none;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 0px !important;
}
.TextInputDiv textarea.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 1.1em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.TextInputDiv textarea::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.TextInputDiv label {
  user-select: none;
  position: absolute;
  z-index: 1;
  width: 100%;
  background-color: #fff8f1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.11em;
  padding-top: 0.39em;
  padding-bottom: 0.13em;
  border-top-right-radius: 5px 5px;
}
.TextInputDiv .horizontalLine {
  position: absolute;
  z-index: 2;
  width: 100%;
  top: 0.89em;
  height: 0px;
  left: 0;
  margin-block: 0px;
  margin-inline: 0.5em;
}

.InputDivMain {
  position: relative;
  background-color: #fff8f1;
  margin: 0.5em;
  height: min-content;
  display: inline-flex;
}
.InputDivMain button {
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}
.InputDivMain button > span {
  position: relative;
  font-size: 1.3em;
}
.InputDivMain button[state*=active] {
  background-color: #ffa228;
}
.InputDivMain button[state*=passive] {
  background-color: transparent;
}
.InputDivMain button[state*=passive]:hover {
  background-color: #FFAD5B;
}
.InputDivMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}
.InputDivMain input {
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 0px !important;
  outline: none;
}
.InputDivMain input.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.InputDivMain input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}
.InputDivMain input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.InputDivMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

@keyframes buttonAnimation {
  from {
    transform: translateY(0em);
    text-underline-offset: 0em;
  }
  to {
    transform: translateY(-0.1em);
    text-underline-offset: 0.2em;
  }
}
@keyframes buttonAnimationB {
  to {
    transform: translateY(0em);
    text-underline-offset: 0em;
  }
  from {
    transform: translateY(-0.1em);
    text-underline-offset: 0.2em;
  }
}
@keyframes buttonIconAnimation {}
@keyframes buttonIconAnimation90 {
  from {
    transform: translateY(0em) rotate(90deg);
  }
  to {
    transform: translateY(-0.1em) rotate(90deg);
  }
}
.RadioButton {
  border: 1px solid black;
  position: relative;
}
.RadioButton > div {
  width: 100%;
  height: 100%;
  position: relative;
  align-items: center;
  display: flex;
  flex-direction: row;
  cursor: pointer;
}
.RadioButton > div > input {
  position: relative;
  margin-inline: 2%;
  cursor: pointer;
}
.RadioButton > div > div {
  position: relative;
  height: 100%;
}
.RadioButton > div > div[id*=Price] {
  font-size: 1em;
  margin-left: auto;
  margin-right: 5%;
}

:root {
  --main-font: "Montserrat";
  --primary: "";
  --primary-text: #333;
}

* {
  margin: 0;
  padding: 0;
  font-family: var(--main-font);
}

.tooltip_S[state*=active]:after, .tooltip_S[state*=active]:before {
  display: none;
}

.tooltip_S[data-tooltip-direction=right] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=right]:after {
  pointer-events: none;
  content: attr(data-tooltip-value);
  position: absolute;
  z-index: 10;
  top: 50%;
  transform: translateY(-50%);
  left: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=right]:before {
  pointer-events: none;
  content: "";
  position: absolute;
  z-index: 10;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-right: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=right]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  left: 110%;
}

.tooltip_S[data-tooltip-direction=right]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  left: 103%;
}

.tooltip_S[data-tooltip-direction=right]:hover:after, .tooltip_S[data-tooltip-direction=right]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=top] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=top]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  bottom: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=top]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  bottom: 130%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after {
  bottom: 120%;
}

.tooltip_S[data-tooltip-direction=top]:hover:before {
  bottom: 103%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after, .tooltip_S[data-tooltip-direction=top]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=left] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=left]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=left]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-left: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  right: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=left]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  right: 110%;
}

.tooltip_S[data-tooltip-direction=left]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  right: 103%;
}

.tooltip_S[data-tooltip-direction=left]:hover:after, .tooltip_S[data-tooltip-direction=left]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=bottom] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=bottom]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=bottom]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-bottom: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  top: 130%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after {
  top: 120%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:before {
  top: 103%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after, .tooltip_S[data-tooltip-direction=bottom]:hover:before {
  opacity: 1;
}

.AdaptiveTableMain {
  position: relative;
  display: block;
  width: 98%;
  height: 100%;
  overflow: hidden;
  overflow-y: auto;
}

.AdaptiveTableMain > .ListMain {
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

.AdaptiveTableMain > .ListMain > .column {
  position: relative;
  width: 90%;
  height: fit-content;
  flex-direction: column;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement {
  user-select: none;
  padding: 0.5em;
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: inline-block;
  height: fit-content;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > img {
  user-select: none;
  box-sizing: border-box;
  overflow: hidden;
  display: block;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  position: relative;
  width: 100%;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv {
  user-select: none;
  border-radius: 5px 5px;
  position: absolute;
  top: 0;
  margin: 0.5em;
  left: 0;
  width: calc(100% - 1em);
  height: calc(100% - 1em);
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
  background-color: rgba(94, 94, 94, 0.471);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv:hover {
  opacity: 1;
  box-shadow: rgba(0, 0, 0, 0.55) 0px 0px 3px, rgba(0, 0, 0, 0.51) 0px 0px 3px;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .informationDiv {
  display: none;
  position: relative;
  top: 0;
  margin: 0.5em;
  border-radius: 5px 5px;
  left: 0;
  background-color: rgba(255, 0, 0, 0.299);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv {
  user-select: none;
  position: absolute;
  bottom: 0;
  left: 0;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv > button {
  user-select: none;
}

.AmountDiv {
  display: flex;
  position: relative;
  border: 1px solid black;
  box-sizing: border-box;
  width: fit-content;
  padding: 0.2em;
}

.AmountDiv > button {
  width: 33%;
  position: relative;
  box-sizing: border-box;
  border-radius: 0px 0px;
}

.AmountDiv > button > span {
  font-size: 1em;
}

.AmountDiv > div {
  position: relative;
  width: 2em;
  margin: 0;
  background-color: transparent;
  padding: 0;
  overflow: hidden;
}

.AmountDiv > div > input {
  font-size: 1em;
  background-color: transparent;
  position: relative;
  border: none;
  outline: none;
  width: 100%;
  height: 100%;
  text-align: center;
}

.button_Default {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.button_Default > span {
  display: block;
}

.button_Default:hover {
  background-color: red;
}

.s-button_basic {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_basic > span {
  display: block;
}

.s-button_link {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_link > span {
  text-decoration: underline;
  color: blue;
  display: block;
}

.s-button_link:hover > span {
  color: rgb(34, 34, 255);
}

.DropDownInputMain {
  position: relative;
  background-color: #ffd7af;
  border-radius: 5px;
  margin: 0.5em;
  font-size: inherit;
}

.DropDownInputMain select {
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.25em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 5px 5px !important;
}

.DropDownInputMain select.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.25em;
}

.DropDownInputMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.DropDownInputMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

.header {
  position: fixed;
  width: 100%;
  height: 4rem;
  display: flex;
  flex-direction: row;
  alignItems: center;
  justifyContent: space-between !important;
  background-color: var(--bg-color);
  box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.2);
}

.header > .logoLinkBox {
  position: relative;
  margin-left: 3rem;
  min-width: 3rem;
  width: auto;
  max-width: 15rem;
  height: 4rem;
  display: flex;
  align-items: center;
  justify-content: start;
  text-decoration: none;
  cursor: pointer;
  user-select: none;
}

.header > .logoLinkBox > .logoIcon {
  position: relative;
  width: 2.5rem;
}

.header > .logoLinkBox > .logoText {
  position: relative;
  margin-left: 0.5rem;
  font-size: 1.3rem;
  font-weight: 600;
  color: #333 !important;
}

.header > .headerNavigation {
  position: absolute;
  right: 3rem;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: end;
}

.header > .headerNavigation > button {
  font-size: 1.1rem;
  margin-left: 1.5rem;
}

.header > .headerNavigation > button > span {
  position: relative;
  text-decoration: none;
  color: #a8a8a8;
}

.S_InputDiv {
  position: relative;
  background-color: #ffd7af;
  margin: 0.5em;
  height: min-content;
  display: flex;
  flex-wrap: wrap;
}

.S_InputDiv > button {
  flex: 0 1;
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}

.S_InputDiv > button > span {
  position: relative;
  font-size: 1.3em;
}

.S_InputDiv > button[state*=active] {
  background-color: #ffa228;
}

.S_InputDiv > button[state*=passive] {
  background-color: transparent;
}

.S_InputDiv > button[state*=passive]:hover {
  background-color: #FFAD5B;
}

.S_InputDiv label.switchLabel {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.S_InputDiv input {
  flex: 2 1;
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 5px 5px !important;
  outline: none;
}

.S_InputDiv input.filled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}

.S_InputDiv input[state*=passive] {
  color: red;
  background-color: #fff1de;
}

.S_InputDiv input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}

.S_InputDiv input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}

.S_InputDiv > .response {
  align-self: flex-end;
  text-align: justify;
  width: 100%;
  color: red;
}

.S_InputDiv .invalidInput {
  color: red;
  background-color: #fff1de;
}

.progressBar_Splint {
  position: absolute;
  width: 10em;
  background-color: blue;
  display: flex;
}

.progressBar_Splint > .S_progressBar_Body {
  width: 100%;
  border: 1px solid black;
}

.progressBar_Splint > .S_progressBar_Body > .S_progressBar_Inner {
  width: 100%;
  height: 100%;
  background-color: red;
}

.S-SliderMain {
  margin-top: 0.4em;
  margin-bottom: 0.4em;
}

.S-SliderMain[drawDivider=true]::after {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-bottom: 1px solid #BDBDBD;
  left: 0;
  margin-top: 0.25em;
  position: relative;
}

.S-SliderMain[drawDivider=true]::before {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-top: 1px solid #BDBDBD;
  left: 0;
  margin-bottom: 0.2em;
  position: relative;
}

.S-SliderMain > .label {
  position: relative;
  width: 100%;
  display: inline-block;
  box-sizing: border-box;
  text-align: left;
}

.S-SliderMain > .contentBody {
  height: 1em;
  display: flex;
}

.S-SliderMain > .contentBody > .sliderBody {
  order: 1;
  height: 100%;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range] {
  width: 100%;
  position: relative;
  font-size: 1em;
  height: 100%;
  display: inline-block;
  outline: none;
  -webkit-appearance: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-runnable-track {
  box-sizing: border-box;
  width: 100%;
  height: 0.5em;
  background: #ffa228;
  border: none;
  border-radius: 10px;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  border: none;
  vertical-align: baseline;
  height: 1em;
  width: 1em;
  border-radius: 10%;
  margin-top: -0.25em;
  background: white;
  box-sizing: border-box;
  border: 1px solid black;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus {
  outline: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus::-webkit-slider-runnable-track {
  background: #ffa228;
}

.S-SliderMain > .contentBody > .sliderBody > datalist {
  display: none;
  height: 20rem;
  margin-top: -23px;
  background-color: red;
  color: red;
}

.S-SliderMain > .contentBody > .sliderBody > datalist > option {
  background-color: red;
  color: red;
  height: 50px;
}

.S-SliderMain > .contentBody > .valueOutput {
  order: 2;
  height: 1em;
  width: 1.5em;
  display: inline-block;
  box-sizing: border-box;
  text-align: center;
}

.S-SliderMain > .contentBody > .valueOutput[hidden=true] {
  display: none;
}

.SlideShow_S {
  position: relative;
  height: 100%;
  overflow-y: visible !important;
  overflow-x: auto;
  box-sizing: border-box;
  white-space: nowrap;
  background-color: transparent;
}

.SlideShow_S > .inner {
  display: inline-block;
  position: relative;
  height: 100%;
  width: max-content;
  margin-left: auto;
  margin-right: auto;
  background-color: transparent;
}

.SlideShow_S > .inner > .listElement {
  position: relative;
  height: calc(100% - 0.4em);
  box-sizing: border-box;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  margin: 0.2em;
  margin-inline: 0.5em;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: end;
  align-items: end;
}

.SlideShow_S > .inner > .listElement > div {
  bottom: 0;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  aspect-ratio: 2/1;
}

.SlideShow_S > .inner > .listElement > div > span {
  font-size: 2em;
}

.subWindow_MAIN {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: all;
  user-select: none;
}

.subWindow_MAIN > .background {
  position: absolute;
  z-index: 1;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: rgba(255, 255, 255, 0.8509803922);
}

.subWindow_MAIN .content {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  position: absolute;
  z-index: 2;
  width: fit-content;
  max-height: 90vh;
  max-width: 90vw;
  overflow: hidden;
  margin: auto;
  left: 50%;
  height: max-content;
  top: 50%;
  user-select: none;
  pointer-events: all;
  transform: translate(-50%, -50%);
}

.subWindow_MAIN .content > button.button_close {
  position: absolute;
  right: 0.5em;
  z-index: 3;
}

.TableMain {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
}

.TableMain > .ListMain {
  position: relative;
  width: 100%;
  height: 100%;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;
}

.TableMain > .ListMain > .ListElement {
  margin: 0.5em;
  position: relative;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement > .ListElementHover {
  position: absolute;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 1;
  margin: 0;
  padding: 0;
  border: inherit;
  box-shadow: inherit;
  border-radius: inherit;
  background-color: rgba(64, 64, 64, 0.63);
  display: flex;
  flex-direction: column;
  transition: opacity 0.2s;
}

.horizontalLine {
  position: relative;
  margin: 0.1rem;
  left: 1%;
  width: 98%;
  opacity: 1;
  color: #BDBDBD;
  border: none;
  border-top: 0.5px solid #BDBDBD;
  background-color: #BDBDBD;
}

.PriceDiv {
  width: max-content;
  height: max-content !important;
  display: inline-block;
  overflow-wrap: anywhere;
  white-space: nowrap;
}

.s-ObjectEditor {
  width: 25rem;
  box-shadow: inset 1px 0px 0px 0px black, 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white;
}

.s-ObjectEditor > .Table2D {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table > tr {
  width: 0rem;
  box-sizing: border-box;
  border-bottom: 1px solid black;
  overflow: visible;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] {
  display: flex;
  flex-direction: column;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] > td[col*="1"] {
  margin-left: 1rem;
}

.s-ObjectEditor > .Table2D > table > tr > td {
  box-sizing: border-box;
  width: 100%;
  overflow: visible;
  padding-left: 0.25rem;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="0"] {
  width: 33%;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="2"] {
  width: min-content;
}

.s-ObjectEditor > .Table2D > table > tr > td > div {
  position: relative;
}

.s-sideBarMobile {
  position: absolute;
  height: 100%;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  width: 200px;
  transform: translateX(-100%);
  transition: transform 1s ease-in;
}

.s-sideBarMobile[s-state*=active] {
  transform: translateX(0);
}

.s-sideBarMobile > .headContainer {
  display: flex;
  padding: 0.25em;
  height: max-content;
  justify-content: center;
  align-items: center;
  box-shadow: 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white, inset 0px -1px 0px 0px gray;
}

.s-sideBarMobile > .headContainer > .headline {
  width: 100%;
  font-size: 2em;
}

.s-sideBarMobile > .headContainer > .buttonClose {
  position: relative;
  height: 100%;
}

.s-sideBarMobile > .content {
  width: 100%;
  height: 100%;
}

.Spinner1 {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}

.Spinner1[state*=passive] {
  visibility: hidden;
}

.Spinner1 > div {
  box-sizing: border-box;
  display: block;
  position: absolute;
  width: 80%;
  height: 80%;
  margin: 10%;
  border: 8px solid #fff;
  border-radius: 50%;
  animation: Spinner1 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
  border-color: #fff transparent transparent transparent;
}

.Spinner1 > div:nth-child(1) {
  animation-delay: -0.45s;
}

.Spinner1 > div:nth-child(2) {
  animation-delay: -0.3s;
}

.Spinner1 > div:nth-child(3) {
  animation-delay: -0.15s;
}

@keyframes Spinner1 {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.DropDownInputMain_S {
  position: relative;
  overflow: visible !important;
}

.DropDownInputMain_S > .S_InputDiv {
  width: 100%;
  margin: 0;
  margin-bottom: 0;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px;
}

.DropDownInputMain_S > .S_InputDiv > input {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > button {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > .response {
  display: none;
}

.DropDownInputMain_S > .DropDown_expander {
  z-index: 120;
  background-color: transparent;
  position: absolute;
  padding: 0;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.DropDownInputMain_S > .DropDown_expander[state*=active] {
  height: 10em;
}

.DropDownInputMain_S > .DropDown_expander[state*=passive] {
  height: 0em;
}

.DropDownInputMain_S > .DropDown_expander > div {
  z-index: 122;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-top: 0.2em;
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div > span {
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain {
  position: relative;
  overflow: visible !important;
}

.n_SelectInputMain > .Select_expander {
  z-index: 1;
  background-color: transparent;
  position: absolute;
  padding: 1%;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.n_SelectInputMain > .Select_expander[state*=active] {
  height: max-content;
  max-height: 10em;
}

.n_SelectInputMain > .Select_expander[state*=passive] {
  height: 0em;
  display: none;
}

.n_SelectInputMain > .Select_expander > div {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-bottom: 0.5em;
  text-align: center;
  cursor: pointer;
  transition: box-shadow 0.2s;
  transition-timing-function: ease-in;
}

.n_SelectInputMain > .Select_expander > div > span {
  text-align: center;
}

.n_SelectInputMain > .Select_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain > .Select_expander > div:hover {
  box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 3px, rgba(0, 0, 0, 0.21) 0px 0px 3px;
}

.n_inputDiv {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

.n_inputDiv > .inputBody {
  display: flex;
  flex-direction: row;
}

.n_inputDiv > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

.n_inputDiv > .inputBody > input:valid, .n_inputDiv > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

.n_inputDiv > .inputBody > input:valid + label span, .n_inputDiv > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

.n_inputDiv > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

.n_inputDiv > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.n_inputDiv > .inputBody > button {
  background-color: transparent;
}

.n_inputDiv > .response > span {
  color: red;
}

s-input {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

s-input > .inputBody {
  display: flex;
  flex-direction: row;
}

s-input > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

s-input > .inputBody > input:valid, s-input > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

s-input > .inputBody > input:valid + label span, s-input > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

s-input > .inputBody > input[state=passive] {
  border-bottom: 2px red solid;
}

s-input > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

s-input > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

s-input > .inputBody > button {
  background-color: transparent;
}

s-input > .response > span {
  color: red;
}

.S-AddressInput {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  column-gap: 0.5em;
  grid-template-areas: "fN fN fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.S-AddressInput > div, .S-AddressInput s-input {
  background-color: transparent;
  box-sizing: border-box;
}

.S-AddressInput > div > .inputBody, .S-AddressInput s-input > .inputBody {
  padding-top: 0.5em;
}

.S-AddressInput > div[identifier*=title], .S-AddressInput s-input[identifier*=title] {
  display: none;
}

.S-AddressInput > div[id*=salutation], .S-AddressInput s-input[id*=salutation] {
  display: none;
  grid-area: none;
}

.S-AddressInput > div[identifier*=firstName], .S-AddressInput s-input[identifier*=firstName] {
  grid-area: fN;
}

.S-AddressInput > div[identifier*=lastName], .S-AddressInput s-input[identifier*=lastName] {
  grid-area: lN;
}

.S-AddressInput > div[identifier*=postcode], .S-AddressInput s-input[identifier*=postcode] {
  grid-area: plz;
}

.S-AddressInput > div[identifier*=city], .S-AddressInput s-input[identifier*=city] {
  grid-area: ct;
}

.S-AddressInput > div[id*=country], .S-AddressInput s-input[id*=country] {
  grid-area: cy;
}

.S-AddressInput > div[identifier*=street], .S-AddressInput s-input[identifier*=street] {
  grid-area: st;
}

.S-AddressInput > div[identifier*=housenumber], .S-AddressInput s-input[identifier*=housenumber] {
  grid-area: hn;
}

.S-AddressInput > div[identifier*=email], .S-AddressInput s-input[identifier*=email] {
  grid-area: ema;
}

.S-AddressInput > div[identifier*=phone], .S-AddressInput s-input[identifier*=phone] {
  grid-area: ph;
}

.S-AddressInput > s-input {
  padding-bottom: -0.5em;
}

.n_RadioButton {
  position: relative;
}

.n_RadioButton > .radio_headline {
  position: relative;
}

.n_RadioButton > .inner {
  position: relative;
}

.n_RadioButton > .inner > div {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
  justify-content: start;
  align-items: center;
}

.n_RadioButton > .inner > div > .inputBody {
  position: relative;
  box-sizing: border-box;
  width: 1em;
  margin: 0.5em;
  height: 1em;
  min-width: 1em;
}

.n_RadioButton > .inner > div > .inputBody > input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span {
  box-sizing: border-box;
  background-color: #2196F3;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span:after {
  box-sizing: border-box;
  display: block;
}

.n_RadioButton > .inner > div > .inputBody > span {
  box-sizing: content-box;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background-color: #eee;
  border-radius: 50%;
}

.n_RadioButton > .inner > div > .inputBody > span:after {
  box-sizing: border-box;
  content: "";
  left: 0;
  top: 0;
  position: absolute;
  display: none;
  margin: 25%;
  width: 50%;
  height: 50%;
  border-radius: 50%;
  background: white;
}

.n_RadioButton > .inner > div > .inputBody:hover input ~ span {
  background-color: #ccc;
}

.toggleButton {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  display: flex;
  justify-content: space-around;
  width: max-content;
  overflow: hidden;
}

.toggleButton > button {
  width: 100%;
  padding: 0.5rem;
  background-color: transparent;
  border: none;
  cursor: pointer;
}

.toggleButton > button:hover {
  background-color: #FFAD5B;
}

.toggleButton > button[state*=active] {
  background-color: #ffa228;
}

.s-ToggleButton_2 {
  width: max-content;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
}

.s-ToggleButton_2 > button {
  border: none;
  border-radius: 0;
  outline: none;
  padding: 0em;
  min-height: 1rem;
  height: 100%;
  width: 100%;
  margin: 0.25em;
}

.s-ToggleButton_2 > button.btFALSE {
  background-color: red;
}

.s-ToggleButton_2 > button.btFALSE[state*=passive] {
  background-color: rgba(255, 0, 0, 0.3);
}

.s-ToggleButton_2 > button.btTRUE {
  background-color: green;
}

.s-ToggleButton_2 > button.btTRUE[state*=passive] {
  background-color: rgba(0, 128, 0, 0.3);
}

.S_SVGElement_BODY {
  position: relative;
  background-color: transparent;
}

.S_SVGElement_BODY > svg {
  position: relative;
}

.addressMenuNewMain > [id*=menuElement] > div {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  grid-template-areas: "salutation salutation fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.addressMenuNewMain > [id*=menuElement] > div > div {
  background-color: transparent;
  box-sizing: border-box;
}

.addressMenuNewMain > [id*=menuElement] > div > div.S_InputDiv {
  padding-bottom: -0.5em;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=title] {
  display: none;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=salutation] {
  grid-area: salutation;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=firstName] {
  grid-area: fN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=lastName] {
  grid-area: lN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=postcode] {
  grid-area: plz;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=city] {
  grid-area: ct;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=country] {
  grid-area: cy;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=street] {
  grid-area: st;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=housenumber] {
  grid-area: hn;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=email] {
  grid-area: ema;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=phone] {
  grid-area: ph;
}

/* Media Queries */
/* ------- */
/* Desktop */
/* ------- */
.CursorMain {
  display: all;
  backface-visibility: hidden;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
  width: 100px;
  height: 100px;
  background-color: red;
  z-index: 999;
}

.customCursor {
  position: absolute;
  box-sizing: content-box;
  will-change: transform;
  margin: 0;
  padding: 0;
  top: 0;
  left: 0;
  pointer-events: none;
  user-select: none;
  display: auto;
  z-index: 1000;
}
.customCursor.red {
  background-color: red;
}
.customCursor.orange {
  color: orange !important;
}

.button_Default {
  user-select: none;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 0px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  box-sizing: content-box;
  margin: 0.5em;
  overflow: hidden;
}
.button_Default > span {
  box-sizing: border-box;
}
.button_Default[state*=active] {
  background-color: #FFAD5B;
}
.button_Default[state*=passive] {
  background-color: #fff1de;
}
.button_Default:hover {
  background-color: #ffa228;
}

.button_General {
  user-select: none;
  background-color: transparent;
  border: none;
  color: #000000;
  display: inline-block;
  font-size: 1em;
  cursor: pointer;
  border-radius: 0px;
}
.button_General > span {
  display: block;
  position: relative;
  text-align: center;
}
.button_General > span:not(.material-symbols-outlined) {
  text-decoration: underline;
}
.button_General > .dropdown {
  position: absolute;
  left: 100%;
  margin-left: 10%;
  top: 0;
  width: fit-content;
  height: max-content;
  overflow: hidden;
}
.button_General:hover > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonAnimation;
}
.button_General:hover > span.material-symbols-outlined {
  color: #ffa228 !important;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonIconAnimation;
}
.button_General:hover > span.material-symbols-outlined.rotate90 {
  animation-name: buttonIconAnimation90;
}
.button_General:hover:after > span {
  color: white;
}
.button_General:hover:after > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-out;
  animation-fill-mode: backwards;
  animation-direction: reverse;
  animation-name: buttonAnimationB;
}
.button_General:hover:after > span.material-symbols-outlined {
  color: #ffa228 !important;
}
.button_General.simple {
  background-color: transparent;
  border: none;
  text-decoration: underline;
}

/* width */
::-webkit-scrollbar {
  margin-inline: 2px;
  width: 5px;
}

/* Track */
::-webkit-scrollbar-track {
  width: 2px;
  transform: scale(2);
  background: transparent;
}

/* Handle */
::-webkit-scrollbar-thumb {
  width: 5px;
  transform: scale(2);
  background: rgb(189, 189, 189);
  border-radius: 0px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: gray;
}

body {
  background-color: #fff8f1;
}
body * {
  font-family: "Arial";
  margin: 0;
  padding: 0;
}

.Slider_main > .Slider_inputBody input[type=range] {
  appearance: none;
  background: transparent;
  width: 100%;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-thumb {
  position: relative;
  appearance: none;
  width: 9px;
  height: 20px;
  background-color: #FFAD5B;
  transform: translateY(-40%);
  border-radius: 2px 2px;
  z-index: 20;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-runnable-track {
  position: relative;
  cursor: pointer;
  border-radius: 2px 2px;
  height: 20%;
  z-index: 19;
  /* Hides the slider so custom styles can be added */
  background-color: #000000;
}
.Slider_main > .Slider_inputBody > hr {
  position: absolute;
  margin-left: calc((100% - (2.1em + 6px)) / var(--size) * var(--index));
  z-index: 1;
  left: 5px;
  background-color: darkgray;
  width: 0.5px;
  top: 25%;
  height: 50%;
  margin-top: 0;
}
.Slider_main > .Slider_inputBody > hr:nth-child(even) {
  top: 12.5%;
  height: 75%;
}

body {
  position: relative;
  width: 100vw;
  overflow: hidden;
  box-sizing: content-box;
  top: 6vh;
  height: 94vh;
}
@media only screen and (max-width: 980px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 981px) and (max-width: 1199px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 1200px) {
  body {
    font-size: 1em;
  }
}

.Table {
  border: 1px solid black;
  position: relative;
  width: 50%;
}
.Table > div {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}
.Table > div > label {
  position: relative;
  overflow: hidden;
}
.Table > div > span {
  position: relative;
  overflow: hidden;
}

.bold {
  font-weight: bold;
}

.LoadBar {
  z-index: 3;
  border-radius: 0px;
  position: relative !important;
  background-color: red !important;
  width: 100% !important;
  height: 2em !important;
  overflow: hidden;
}
.LoadBar .LoadBar-progress {
  position: relative;
  height: 100%;
  background-color: green !important;
}

.LineDiv {
  position: relative;
  margin: 0;
  padding: 0;
  flex: auto;
  overflow: hidden;
  height: 100%;
  border: none;
}
.LineDiv hr {
  display: block;
  position: relative;
  color: orange;
  background-color: orange;
  opacity: 1;
  width: 0%;
  margin: 0;
  top: 50%;
  visibility: visible;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;
}

@keyframes NavBarLine {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}
.Text-primary {
  color: #000000;
}

.Text-secondary {
  color: #BCBCBC;
}

.Text-small {
  font-size: 0.75em;
}

.SliderDivMain {
  border: 1px solid black;
}

.TextInputDiv {
  position: relative;
  background-color: #fff8f1;
  border-radius: 0px;
  margin: 0.5em;
  margin-bottom: 1.5em;
  font-size: inherit;
  height: 10em;
}
.TextInputDiv textarea {
  position: relative;
  outline: 0;
  resize: none;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 0px !important;
}
.TextInputDiv textarea.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 1.1em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.TextInputDiv textarea::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.TextInputDiv label {
  user-select: none;
  position: absolute;
  z-index: 1;
  width: 100%;
  background-color: #fff8f1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.11em;
  padding-top: 0.39em;
  padding-bottom: 0.13em;
  border-top-right-radius: 5px 5px;
}
.TextInputDiv .horizontalLine {
  position: absolute;
  z-index: 2;
  width: 100%;
  top: 0.89em;
  height: 0px;
  left: 0;
  margin-block: 0px;
  margin-inline: 0.5em;
}

.InputDivMain {
  position: relative;
  background-color: #fff8f1;
  margin: 0.5em;
  height: min-content;
  display: inline-flex;
}
.InputDivMain button {
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}
.InputDivMain button > span {
  position: relative;
  font-size: 1.3em;
}
.InputDivMain button[state*=active] {
  background-color: #ffa228;
}
.InputDivMain button[state*=passive] {
  background-color: transparent;
}
.InputDivMain button[state*=passive]:hover {
  background-color: #FFAD5B;
}
.InputDivMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}
.InputDivMain input {
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 0px !important;
  outline: none;
}
.InputDivMain input.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.InputDivMain input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}
.InputDivMain input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.InputDivMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

:root {
  --main-font: "Montserrat";
  --primary: "";
  --primary-text: #333;
}

* {
  margin: 0;
  padding: 0;
  font-family: var(--main-font);
}

.tooltip_S[state*=active]:after, .tooltip_S[state*=active]:before {
  display: none;
}

.tooltip_S[data-tooltip-direction=right] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=right]:after {
  pointer-events: none;
  content: attr(data-tooltip-value);
  position: absolute;
  z-index: 10;
  top: 50%;
  transform: translateY(-50%);
  left: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=right]:before {
  pointer-events: none;
  content: "";
  position: absolute;
  z-index: 10;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-right: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=right]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  left: 110%;
}

.tooltip_S[data-tooltip-direction=right]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  left: 103%;
}

.tooltip_S[data-tooltip-direction=right]:hover:after, .tooltip_S[data-tooltip-direction=right]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=top] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=top]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  bottom: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=top]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  bottom: 130%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after {
  bottom: 120%;
}

.tooltip_S[data-tooltip-direction=top]:hover:before {
  bottom: 103%;
}

.tooltip_S[data-tooltip-direction=top]:hover:after, .tooltip_S[data-tooltip-direction=top]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=left] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=left]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: 130%;
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=left]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-left: 10px solid #ffcb66;
  border-bottom: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  right: 130%;
  top: 50%;
  transform: translateY(-50%);
}

.tooltip_S[data-tooltip-direction=left]:hover:after {
  top: 50%;
  transform: translateY(-50%);
  right: 110%;
}

.tooltip_S[data-tooltip-direction=left]:hover:before {
  top: 50%;
  transform: translateY(-50%);
  right: 103%;
}

.tooltip_S[data-tooltip-direction=left]:hover:after, .tooltip_S[data-tooltip-direction=left]:hover:before {
  opacity: 1;
}

.tooltip_S[data-tooltip-direction=bottom] {
  position: relative;
}

.tooltip_S[data-tooltip-direction=bottom]:after {
  z-index: 10;
  content: attr(data-tooltip-value);
  position: absolute;
  top: 130%;
  left: 50%;
  transform: translateX(-50%);
  background: #ffcb66;
  padding: 5px 15px;
  color: black;
  border-radius: 10px;
  white-space: nowrap;
  opacity: 0;
  transition: all 0.4s ease;
}

.tooltip_S[data-tooltip-direction=bottom]:before {
  z-index: 10;
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-bottom: 10px solid #ffcb66;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  transition: all 0.4s ease;
  opacity: 0;
  left: 50%;
  transform: translateX(-50%);
  top: 130%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after {
  top: 120%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:before {
  top: 103%;
}

.tooltip_S[data-tooltip-direction=bottom]:hover:after, .tooltip_S[data-tooltip-direction=bottom]:hover:before {
  opacity: 1;
}

.AdaptiveTableMain {
  position: relative;
  display: block;
  width: 98%;
  height: 100%;
  overflow: hidden;
  overflow-y: auto;
}

.AdaptiveTableMain > .ListMain {
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

.AdaptiveTableMain > .ListMain > .column {
  position: relative;
  width: 90%;
  height: fit-content;
  flex-direction: column;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement {
  user-select: none;
  padding: 0.5em;
  position: relative;
  box-sizing: border-box;
  width: 100%;
  display: inline-block;
  height: fit-content;
  overflow: hidden;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > img {
  user-select: none;
  box-sizing: border-box;
  overflow: hidden;
  display: block;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  position: relative;
  width: 100%;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv {
  user-select: none;
  border-radius: 5px 5px;
  position: absolute;
  top: 0;
  margin: 0.5em;
  left: 0;
  width: calc(100% - 1em);
  height: calc(100% - 1em);
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
  background-color: rgba(94, 94, 94, 0.471);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv:hover {
  opacity: 1;
  box-shadow: rgba(0, 0, 0, 0.55) 0px 0px 3px, rgba(0, 0, 0, 0.51) 0px 0px 3px;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .informationDiv {
  display: none;
  position: relative;
  top: 0;
  margin: 0.5em;
  border-radius: 5px 5px;
  left: 0;
  background-color: rgba(255, 0, 0, 0.299);
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv {
  user-select: none;
  position: absolute;
  bottom: 0;
  left: 0;
}

.AdaptiveTableMain > .ListMain > .column > .ListElement > .hoverDiv > .tagsDiv > button {
  user-select: none;
}

.AmountDiv {
  display: flex;
  position: relative;
  border: 1px solid black;
  box-sizing: border-box;
  width: fit-content;
  padding: 0.2em;
}

.AmountDiv > button {
  width: 33%;
  position: relative;
  box-sizing: border-box;
  border-radius: 0px 0px;
}

.AmountDiv > button > span {
  font-size: 1em;
}

.AmountDiv > div {
  position: relative;
  width: 2em;
  margin: 0;
  background-color: transparent;
  padding: 0;
  overflow: hidden;
}

.AmountDiv > div > input {
  font-size: 1em;
  background-color: transparent;
  position: relative;
  border: none;
  outline: none;
  width: 100%;
  height: 100%;
  text-align: center;
}

.button_Default {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.button_Default > span {
  display: block;
}

.button_Default:hover {
  background-color: red;
}

.s-button_basic {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_basic > span {
  display: block;
}

.s-button_link {
  background-color: transparent;
  outline: none;
  border: none;
  cursor: pointer;
  margin: 0.5em;
}

.s-button_link > span {
  text-decoration: underline;
  color: blue;
  display: block;
}

.s-button_link:hover > span {
  color: rgb(34, 34, 255);
}

.DropDownInputMain {
  position: relative;
  background-color: #ffd7af;
  border-radius: 5px;
  margin: 0.5em;
  font-size: inherit;
}

.DropDownInputMain select {
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.25em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 5px 5px !important;
}

.DropDownInputMain select.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.25em;
}

.DropDownInputMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.DropDownInputMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

.header {
  position: fixed;
  width: 100%;
  height: 4rem;
  display: flex;
  flex-direction: row;
  alignItems: center;
  justifyContent: space-between !important;
  background-color: var(--bg-color);
  box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.2);
}

.header > .logoLinkBox {
  position: relative;
  margin-left: 3rem;
  min-width: 3rem;
  width: auto;
  max-width: 15rem;
  height: 4rem;
  display: flex;
  align-items: center;
  justify-content: start;
  text-decoration: none;
  cursor: pointer;
  user-select: none;
}

.header > .logoLinkBox > .logoIcon {
  position: relative;
  width: 2.5rem;
}

.header > .logoLinkBox > .logoText {
  position: relative;
  margin-left: 0.5rem;
  font-size: 1.3rem;
  font-weight: 600;
  color: #333 !important;
}

.header > .headerNavigation {
  position: absolute;
  right: 3rem;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: end;
}

.header > .headerNavigation > button {
  font-size: 1.1rem;
  margin-left: 1.5rem;
}

.header > .headerNavigation > button > span {
  position: relative;
  text-decoration: none;
  color: #a8a8a8;
}

.S_InputDiv {
  position: relative;
  background-color: #ffd7af;
  margin: 0.5em;
  height: min-content;
  display: flex;
  flex-wrap: wrap;
}

.S_InputDiv > button {
  flex: 0 1;
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}

.S_InputDiv > button > span {
  position: relative;
  font-size: 1.3em;
}

.S_InputDiv > button[state*=active] {
  background-color: #ffa228;
}

.S_InputDiv > button[state*=passive] {
  background-color: transparent;
}

.S_InputDiv > button[state*=passive]:hover {
  background-color: #FFAD5B;
}

.S_InputDiv label.switchLabel {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}

.S_InputDiv input {
  flex: 2 1;
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 5px 5px !important;
  outline: none;
}

.S_InputDiv input.filled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}

.S_InputDiv input[state*=passive] {
  color: red;
  background-color: #fff1de;
}

.S_InputDiv input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}

.S_InputDiv input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}

.S_InputDiv > .response {
  align-self: flex-end;
  text-align: justify;
  width: 100%;
  color: red;
}

.S_InputDiv .invalidInput {
  color: red;
  background-color: #fff1de;
}

.progressBar_Splint {
  position: absolute;
  width: 10em;
  background-color: blue;
  display: flex;
}

.progressBar_Splint > .S_progressBar_Body {
  width: 100%;
  border: 1px solid black;
}

.progressBar_Splint > .S_progressBar_Body > .S_progressBar_Inner {
  width: 100%;
  height: 100%;
  background-color: red;
}

.S-SliderMain {
  margin-top: 0.4em;
  margin-bottom: 0.4em;
}

.S-SliderMain[drawDivider=true]::after {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-bottom: 1px solid #BDBDBD;
  left: 0;
  margin-top: 0.25em;
  position: relative;
}

.S-SliderMain[drawDivider=true]::before {
  content: "";
  display: block;
  width: 100%;
  height: 0px;
  background: transparent;
  border-top: 1px solid #BDBDBD;
  left: 0;
  margin-bottom: 0.2em;
  position: relative;
}

.S-SliderMain > .label {
  position: relative;
  width: 100%;
  display: inline-block;
  box-sizing: border-box;
  text-align: left;
}

.S-SliderMain > .contentBody {
  height: 1em;
  display: flex;
}

.S-SliderMain > .contentBody > .sliderBody {
  order: 1;
  height: 100%;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range] {
  width: 100%;
  position: relative;
  font-size: 1em;
  height: 100%;
  display: inline-block;
  outline: none;
  -webkit-appearance: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-runnable-track {
  box-sizing: border-box;
  width: 100%;
  height: 0.5em;
  background: #ffa228;
  border: none;
  border-radius: 10px;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  border: none;
  vertical-align: baseline;
  height: 1em;
  width: 1em;
  border-radius: 10%;
  margin-top: -0.25em;
  background: white;
  box-sizing: border-box;
  border: 1px solid black;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus {
  outline: none;
}

.S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus::-webkit-slider-runnable-track {
  background: #ffa228;
}

.S-SliderMain > .contentBody > .sliderBody > datalist {
  display: none;
  height: 20rem;
  margin-top: -23px;
  background-color: red;
  color: red;
}

.S-SliderMain > .contentBody > .sliderBody > datalist > option {
  background-color: red;
  color: red;
  height: 50px;
}

.S-SliderMain > .contentBody > .valueOutput {
  order: 2;
  height: 1em;
  width: 1.5em;
  display: inline-block;
  box-sizing: border-box;
  text-align: center;
}

.S-SliderMain > .contentBody > .valueOutput[hidden=true] {
  display: none;
}

.SlideShow_S {
  position: relative;
  height: 100%;
  overflow-y: visible !important;
  overflow-x: auto;
  box-sizing: border-box;
  white-space: nowrap;
  background-color: transparent;
}

.SlideShow_S > .inner {
  display: inline-block;
  position: relative;
  height: 100%;
  width: max-content;
  margin-left: auto;
  margin-right: auto;
  background-color: transparent;
}

.SlideShow_S > .inner > .listElement {
  position: relative;
  height: calc(100% - 0.4em);
  box-sizing: border-box;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  margin: 0.2em;
  margin-inline: 0.5em;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: end;
  align-items: end;
}

.SlideShow_S > .inner > .listElement > div {
  bottom: 0;
  box-sizing: border-box;
  position: relative;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  aspect-ratio: 2/1;
}

.SlideShow_S > .inner > .listElement > div > span {
  font-size: 2em;
}

.subWindow_MAIN {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: all;
  user-select: none;
}

.subWindow_MAIN > .background {
  position: absolute;
  z-index: 1;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background-color: rgba(255, 255, 255, 0.8509803922);
}

.subWindow_MAIN .content {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  position: absolute;
  z-index: 2;
  width: fit-content;
  max-height: 90vh;
  max-width: 90vw;
  overflow: hidden;
  margin: auto;
  left: 50%;
  height: max-content;
  top: 50%;
  user-select: none;
  pointer-events: all;
  transform: translate(-50%, -50%);
}

.subWindow_MAIN .content > button.button_close {
  position: absolute;
  right: 0.5em;
  z-index: 3;
}

.TableMain {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
}

.TableMain > .ListMain {
  position: relative;
  width: 100%;
  height: 100%;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;
}

.TableMain > .ListMain > .ListElement {
  margin: 0.5em;
  position: relative;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement:hover > .ListElementHover {
  opacity: 1;
}

.TableMain > .ListMain > .ListElement > .ListElementHover {
  position: absolute;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 1;
  margin: 0;
  padding: 0;
  border: inherit;
  box-shadow: inherit;
  border-radius: inherit;
  background-color: rgba(64, 64, 64, 0.63);
  display: flex;
  flex-direction: column;
  transition: opacity 0.2s;
}

.horizontalLine {
  position: relative;
  margin: 0.1rem;
  left: 1%;
  width: 98%;
  opacity: 1;
  color: #BDBDBD;
  border: none;
  border-top: 0.5px solid #BDBDBD;
  background-color: #BDBDBD;
}

.PriceDiv {
  width: max-content;
  height: max-content !important;
  display: inline-block;
  overflow-wrap: anywhere;
  white-space: nowrap;
}

.s-ObjectEditor {
  width: 25rem;
  box-shadow: inset 1px 0px 0px 0px black, 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white;
}

.s-ObjectEditor > .Table2D {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table {
  box-sizing: border-box;
}

.s-ObjectEditor > .Table2D > table > tr {
  width: 0rem;
  box-sizing: border-box;
  border-bottom: 1px solid black;
  overflow: visible;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] {
  display: flex;
  flex-direction: column;
}

.s-ObjectEditor > .Table2D > table > tr[container*=true] > td[col*="1"] {
  margin-left: 1rem;
}

.s-ObjectEditor > .Table2D > table > tr > td {
  box-sizing: border-box;
  width: 100%;
  overflow: visible;
  padding-left: 0.25rem;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="0"] {
  width: 33%;
}

.s-ObjectEditor > .Table2D > table > tr > td[col*="2"] {
  width: min-content;
}

.s-ObjectEditor > .Table2D > table > tr > td > div {
  position: relative;
}

.s-sideBarMobile {
  position: absolute;
  height: 100%;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  width: 200px;
  transform: translateX(-100%);
  transition: transform 1s ease-in;
}

.s-sideBarMobile[s-state*=active] {
  transform: translateX(0);
}

.s-sideBarMobile > .headContainer {
  display: flex;
  padding: 0.25em;
  height: max-content;
  justify-content: center;
  align-items: center;
  box-shadow: 0px 0px 0px 0px white, 0px 0px 0px 0px white, 0px 0px 0px 0px white, inset 0px -1px 0px 0px gray;
}

.s-sideBarMobile > .headContainer > .headline {
  width: 100%;
  font-size: 2em;
}

.s-sideBarMobile > .headContainer > .buttonClose {
  position: relative;
  height: 100%;
}

.s-sideBarMobile > .content {
  width: 100%;
  height: 100%;
}

.Spinner1 {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}

.Spinner1[state*=passive] {
  visibility: hidden;
}

.Spinner1 > div {
  box-sizing: border-box;
  display: block;
  position: absolute;
  width: 80%;
  height: 80%;
  margin: 10%;
  border: 8px solid #fff;
  border-radius: 50%;
  animation: Spinner1 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
  border-color: #fff transparent transparent transparent;
}

.Spinner1 > div:nth-child(1) {
  animation-delay: -0.45s;
}

.Spinner1 > div:nth-child(2) {
  animation-delay: -0.3s;
}

.Spinner1 > div:nth-child(3) {
  animation-delay: -0.15s;
}

@keyframes Spinner1 {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.DropDownInputMain_S {
  position: relative;
  overflow: visible !important;
}

.DropDownInputMain_S > .S_InputDiv {
  width: 100%;
  margin: 0;
  margin-bottom: 0;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px;
}

.DropDownInputMain_S > .S_InputDiv > input {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > button {
  border: none;
}

.DropDownInputMain_S > .S_InputDiv > .response {
  display: none;
}

.DropDownInputMain_S > .DropDown_expander {
  z-index: 120;
  background-color: transparent;
  position: absolute;
  padding: 0;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.DropDownInputMain_S > .DropDown_expander[state*=active] {
  height: 10em;
}

.DropDownInputMain_S > .DropDown_expander[state*=passive] {
  height: 0em;
}

.DropDownInputMain_S > .DropDown_expander > div {
  z-index: 122;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-top: 0.2em;
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div > span {
  text-align: center;
}

.DropDownInputMain_S > .DropDown_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain {
  position: relative;
  overflow: visible !important;
}

.n_SelectInputMain > .Select_expander {
  z-index: 1;
  background-color: transparent;
  position: absolute;
  padding: 1%;
  box-sizing: content-box;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.n_SelectInputMain > .Select_expander[state*=active] {
  height: max-content;
  max-height: 10em;
}

.n_SelectInputMain > .Select_expander[state*=passive] {
  height: 0em;
  display: none;
}

.n_SelectInputMain > .Select_expander > div {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  margin-bottom: 0.5em;
  text-align: center;
  cursor: pointer;
  transition: box-shadow 0.2s;
  transition-timing-function: ease-in;
}

.n_SelectInputMain > .Select_expander > div > span {
  text-align: center;
}

.n_SelectInputMain > .Select_expander > div[state*=active] {
  background-color: orange;
}

.n_SelectInputMain > .Select_expander > div:hover {
  box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 3px, rgba(0, 0, 0, 0.21) 0px 0px 3px;
}

.n_inputDiv {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

.n_inputDiv > .inputBody {
  display: flex;
  flex-direction: row;
}

.n_inputDiv > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

.n_inputDiv > .inputBody > input:valid, .n_inputDiv > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

.n_inputDiv > .inputBody > input:valid + label span, .n_inputDiv > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

.n_inputDiv > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

.n_inputDiv > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.n_inputDiv > .inputBody > button {
  background-color: transparent;
}

.n_inputDiv > .response > span {
  color: red;
}

s-input {
  position: relative;
  margin: 0.5em;
  padding: 0;
  display: flex;
  flex-direction: column;
}

s-input > .inputBody {
  display: flex;
  flex-direction: row;
}

s-input > .inputBody > input {
  background-color: transparent;
  border: 0;
  border-bottom: 2px black solid;
  display: block;
  width: 100%;
  padding: 0.5em 0;
  padding-top: 1.5em;
  font-size: 1em;
}

s-input > .inputBody > input:valid, s-input > .inputBody > input:focus {
  outline: 0;
  border-bottom-color: gray;
}

s-input > .inputBody > input:valid + label span, s-input > .inputBody > input:focus + label span {
  color: gray;
  font-size: 0.8em;
  transform: translateY(-1.5em);
}

s-input > .inputBody > input[state=passive] {
  border-bottom: 2px red solid;
}

s-input > .inputBody > label {
  position: absolute;
  top: 1.5em;
  left: 0;
  pointer-events: none;
}

s-input > .inputBody > label > span {
  display: inline-block;
  font-size: 1em;
  min-width: 3px;
  color: gray;
  transition: 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

s-input > .inputBody > button {
  background-color: transparent;
}

s-input > .response > span {
  color: red;
}

.S-AddressInput {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  column-gap: 0.5em;
  grid-template-areas: "fN fN fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.S-AddressInput > div, .S-AddressInput s-input {
  background-color: transparent;
  box-sizing: border-box;
}

.S-AddressInput > div > .inputBody, .S-AddressInput s-input > .inputBody {
  padding-top: 0.5em;
}

.S-AddressInput > div[identifier*=title], .S-AddressInput s-input[identifier*=title] {
  display: none;
}

.S-AddressInput > div[id*=salutation], .S-AddressInput s-input[id*=salutation] {
  display: none;
  grid-area: none;
}

.S-AddressInput > div[identifier*=firstName], .S-AddressInput s-input[identifier*=firstName] {
  grid-area: fN;
}

.S-AddressInput > div[identifier*=lastName], .S-AddressInput s-input[identifier*=lastName] {
  grid-area: lN;
}

.S-AddressInput > div[identifier*=postcode], .S-AddressInput s-input[identifier*=postcode] {
  grid-area: plz;
}

.S-AddressInput > div[identifier*=city], .S-AddressInput s-input[identifier*=city] {
  grid-area: ct;
}

.S-AddressInput > div[id*=country], .S-AddressInput s-input[id*=country] {
  grid-area: cy;
}

.S-AddressInput > div[identifier*=street], .S-AddressInput s-input[identifier*=street] {
  grid-area: st;
}

.S-AddressInput > div[identifier*=housenumber], .S-AddressInput s-input[identifier*=housenumber] {
  grid-area: hn;
}

.S-AddressInput > div[identifier*=email], .S-AddressInput s-input[identifier*=email] {
  grid-area: ema;
}

.S-AddressInput > div[identifier*=phone], .S-AddressInput s-input[identifier*=phone] {
  grid-area: ph;
}

.S-AddressInput > s-input {
  padding-bottom: -0.5em;
}

.n_RadioButton {
  position: relative;
}

.n_RadioButton > .radio_headline {
  position: relative;
}

.n_RadioButton > .inner {
  position: relative;
}

.n_RadioButton > .inner > div {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
  justify-content: start;
  align-items: center;
}

.n_RadioButton > .inner > div > .inputBody {
  position: relative;
  box-sizing: border-box;
  width: 1em;
  margin: 0.5em;
  height: 1em;
  min-width: 1em;
}

.n_RadioButton > .inner > div > .inputBody > input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span {
  box-sizing: border-box;
  background-color: #2196F3;
}

.n_RadioButton > .inner > div > .inputBody > input:checked ~ span:after {
  box-sizing: border-box;
  display: block;
}

.n_RadioButton > .inner > div > .inputBody > span {
  box-sizing: content-box;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background-color: #eee;
  border-radius: 50%;
}

.n_RadioButton > .inner > div > .inputBody > span:after {
  box-sizing: border-box;
  content: "";
  left: 0;
  top: 0;
  position: absolute;
  display: none;
  margin: 25%;
  width: 50%;
  height: 50%;
  border-radius: 50%;
  background: white;
}

.n_RadioButton > .inner > div > .inputBody:hover input ~ span {
  background-color: #ccc;
}

.toggleButton {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 5px 5px;
  background-color: white;
  padding: 0.5em;
  padding: 0;
  display: flex;
  justify-content: space-around;
  width: max-content;
  overflow: hidden;
}

.toggleButton > button {
  width: 100%;
  padding: 0.5rem;
  background-color: transparent;
  border: none;
  cursor: pointer;
}

.toggleButton > button:hover {
  background-color: #FFAD5B;
}

.toggleButton > button[state*=active] {
  background-color: #ffa228;
}

.s-ToggleButton_2 {
  width: max-content;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
}

.s-ToggleButton_2 > button {
  border: none;
  border-radius: 0;
  outline: none;
  padding: 0em;
  min-height: 1rem;
  height: 100%;
  width: 100%;
  margin: 0.25em;
}

.s-ToggleButton_2 > button.btFALSE {
  background-color: red;
}

.s-ToggleButton_2 > button.btFALSE[state*=passive] {
  background-color: rgba(255, 0, 0, 0.3);
}

.s-ToggleButton_2 > button.btTRUE {
  background-color: green;
}

.s-ToggleButton_2 > button.btTRUE[state*=passive] {
  background-color: rgba(0, 128, 0, 0.3);
}

.S_SVGElement_BODY {
  position: relative;
  background-color: transparent;
}

.S_SVGElement_BODY > svg {
  position: relative;
}

.addressMenuNewMain > [id*=menuElement] > div {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  row-gap: 0.5em;
  grid-template-areas: "salutation salutation fN fN fN fN lN lN lN lN" "plz plz plz ct ct ct ct cy cy cy" "st st st st st hn hn hn hn hn" "ema ema ema ema ema ph ph ph ph ph";
}

.addressMenuNewMain > [id*=menuElement] > div > div {
  background-color: transparent;
  box-sizing: border-box;
}

.addressMenuNewMain > [id*=menuElement] > div > div.S_InputDiv {
  padding-bottom: -0.5em;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=title] {
  display: none;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=salutation] {
  grid-area: salutation;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=firstName] {
  grid-area: fN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=lastName] {
  grid-area: lN;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=postcode] {
  grid-area: plz;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=city] {
  grid-area: ct;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=country] {
  grid-area: cy;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=street] {
  grid-area: st;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=housenumber] {
  grid-area: hn;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=email] {
  grid-area: ema;
}

.addressMenuNewMain > [id*=menuElement] > div > div[id*=phone] {
  grid-area: ph;
}

/* Media Queries */
/* ------- */
/* Desktop */
/* ------- */
.CursorMain {
  display: all;
  backface-visibility: hidden;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
  width: 100px;
  height: 100px;
  background-color: red;
  z-index: 999;
}

.customCursor {
  position: absolute;
  box-sizing: content-box;
  will-change: transform;
  margin: 0;
  padding: 0;
  top: 0;
  left: 0;
  pointer-events: none;
  user-select: none;
  display: auto;
  z-index: 1000;
}
.customCursor.red {
  background-color: red;
}
.customCursor.orange {
  color: orange !important;
}

.button_Default {
  user-select: none;
  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  border-radius: 0px;
  background-color: white;
  padding: 0.5em;
  border: none;
  cursor: pointer;
  box-sizing: content-box;
  margin: 0.5em;
  overflow: hidden;
}
.button_Default > span {
  box-sizing: border-box;
}
.button_Default[state*=active] {
  background-color: #FFAD5B;
}
.button_Default[state*=passive] {
  background-color: #fff1de;
}
.button_Default:hover {
  background-color: #ffa228;
}

.button_General {
  user-select: none;
  background-color: transparent;
  border: none;
  color: #000000;
  display: inline-block;
  font-size: 1em;
  cursor: pointer;
  border-radius: 0px;
}
.button_General > span {
  display: block;
  position: relative;
  text-align: center;
}
.button_General > span:not(.material-symbols-outlined) {
  text-decoration: underline;
}
.button_General > .dropdown {
  position: absolute;
  left: 100%;
  margin-left: 10%;
  top: 0;
  width: fit-content;
  height: max-content;
  overflow: hidden;
}
.button_General:hover > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonAnimation;
}
.button_General:hover > span.material-symbols-outlined {
  color: #ffa228 !important;
  animation-duration: 100ms;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
  animation-name: buttonIconAnimation;
}
.button_General:hover > span.material-symbols-outlined.rotate90 {
  animation-name: buttonIconAnimation90;
}
.button_General:hover:after > span {
  color: white;
}
.button_General:hover:after > span:not(.material-symbols-outlined) {
  text-decoration-color: #ffa228;
  animation-duration: 100ms;
  animation-timing-function: ease-out;
  animation-fill-mode: backwards;
  animation-direction: reverse;
  animation-name: buttonAnimationB;
}
.button_General:hover:after > span.material-symbols-outlined {
  color: #ffa228 !important;
}
.button_General.simple {
  background-color: transparent;
  border: none;
  text-decoration: underline;
}

/* width */
::-webkit-scrollbar {
  margin-inline: 2px;
  width: 5px;
}

/* Track */
::-webkit-scrollbar-track {
  width: 2px;
  transform: scale(2);
  background: transparent;
}

/* Handle */
::-webkit-scrollbar-thumb {
  width: 5px;
  transform: scale(2);
  background: rgb(189, 189, 189);
  border-radius: 0px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: gray;
}

body {
  background-color: #fff8f1;
}
body * {
  font-family: "Arial";
  margin: 0;
  padding: 0;
}

.Slider_main > .Slider_inputBody input[type=range] {
  appearance: none;
  background: transparent;
  width: 100%;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-thumb {
  position: relative;
  appearance: none;
  width: 9px;
  height: 20px;
  background-color: #FFAD5B;
  transform: translateY(-40%);
  border-radius: 2px 2px;
  z-index: 20;
}
.Slider_main > .Slider_inputBody input[type=range]::-webkit-slider-runnable-track {
  position: relative;
  cursor: pointer;
  border-radius: 2px 2px;
  height: 20%;
  z-index: 19;
  /* Hides the slider so custom styles can be added */
  background-color: #000000;
}
.Slider_main > .Slider_inputBody > hr {
  position: absolute;
  margin-left: calc((100% - (2.1em + 6px)) / var(--size) * var(--index));
  z-index: 1;
  left: 5px;
  background-color: darkgray;
  width: 0.5px;
  top: 25%;
  height: 50%;
  margin-top: 0;
}
.Slider_main > .Slider_inputBody > hr:nth-child(even) {
  top: 12.5%;
  height: 75%;
}

body {
  position: relative;
  width: 100vw;
  overflow: hidden;
  box-sizing: content-box;
  top: 6vh;
  height: 94vh;
}
@media only screen and (max-width: 980px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 981px) and (max-width: 1199px) {
  body {
    font-size: 1em;
  }
}
@media only screen and (min-width: 1200px) {
  body {
    font-size: 1em;
  }
}

.Table {
  border: 1px solid black;
  position: relative;
  width: 50%;
}
.Table > div {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}
.Table > div > label {
  position: relative;
  overflow: hidden;
}
.Table > div > span {
  position: relative;
  overflow: hidden;
}

.bold {
  font-weight: bold;
}

.LoadBar {
  z-index: 3;
  border-radius: 0px;
  position: relative !important;
  background-color: red !important;
  width: 100% !important;
  height: 2em !important;
  overflow: hidden;
}
.LoadBar .LoadBar-progress {
  position: relative;
  height: 100%;
  background-color: green !important;
}

.LineDiv {
  position: relative;
  margin: 0;
  padding: 0;
  flex: auto;
  overflow: hidden;
  height: 100%;
  border: none;
}
.LineDiv hr {
  display: block;
  position: relative;
  color: orange;
  background-color: orange;
  opacity: 1;
  width: 0%;
  margin: 0;
  top: 50%;
  visibility: visible;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in-out;
}

@keyframes NavBarLine {
  0% {
    width: 0%;
  }
  100% {
    width: 100%;
  }
}
.Text-primary {
  color: #000000;
}

.Text-secondary {
  color: #BCBCBC;
}

.Text-small {
  font-size: 0.75em;
}

.SliderDivMain {
  border: 1px solid black;
}

.TextInputDiv {
  position: relative;
  background-color: #fff8f1;
  border-radius: 0px;
  margin: 0.5em;
  margin-bottom: 1.5em;
  font-size: inherit;
  height: 10em;
}
.TextInputDiv textarea {
  position: relative;
  outline: 0;
  resize: none;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  border-radius: 0px !important;
}
.TextInputDiv textarea.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 1.1em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.TextInputDiv textarea::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.TextInputDiv label {
  user-select: none;
  position: absolute;
  z-index: 1;
  width: 100%;
  background-color: #fff8f1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.11em;
  padding-top: 0.39em;
  padding-bottom: 0.13em;
  border-top-right-radius: 5px 5px;
}
.TextInputDiv .horizontalLine {
  position: absolute;
  z-index: 2;
  width: 100%;
  top: 0.89em;
  height: 0px;
  left: 0;
  margin-block: 0px;
  margin-inline: 0.5em;
}

.InputDivMain {
  position: relative;
  background-color: #fff8f1;
  margin: 0.5em;
  height: min-content;
  display: inline-flex;
}
.InputDivMain button {
  border: 1px solid black;
  border-left: none;
  margin: 0;
  background-color: transparent;
  border-top-right-radius: 5px !important;
  border-bottom-right-radius: 5px !important;
  padding-inline: 0.5em;
  display: flex;
  flex-direction: row;
  align-items: center;
}
.InputDivMain button > span {
  position: relative;
  font-size: 1.3em;
}
.InputDivMain button[state*=active] {
  background-color: #ffa228;
}
.InputDivMain button[state*=passive] {
  background-color: transparent;
}
.InputDivMain button[state*=passive]:hover {
  background-color: #FFAD5B;
}
.InputDivMain label {
  position: absolute;
  z-index: 1;
  font-weight: inherit;
  font-style: normal;
  font-size: 0.5em;
  visibility: hidden;
  margin-left: 1em;
  margin-top: 0.5em;
}
.InputDivMain input {
  position: relative;
  border: none;
  width: 100%;
  height: 100%;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 0.5em;
  word-break: normal;
  border: 1px solid black;
  font-size: inherit;
  border-radius: 0px !important;
  outline: none;
}
.InputDivMain input.inputFilled {
  position: relative;
  width: 100%;
  height: 100%;
  vertical-align: bottom;
  padding-top: 0.9em;
  padding-bottom: 0.1em;
  padding-left: 0.5em;
}
.InputDivMain input.button {
  border-top-right-radius: 0px !important;
  border-bottom-right-radius: 0px !important;
}
.InputDivMain input::-webkit-input-placeholder {
  text-indent: 0.2em !important;
}
.InputDivMain .invalidInput {
  color: red;
  background-color: #fff1de;
}

@keyframes buttonAnimation {
  from {
    transform: translateY(0em);
    text-underline-offset: 0em;
  }
  to {
    transform: translateY(-0.1em);
    text-underline-offset: 0.2em;
  }
}
@keyframes buttonAnimationB {
  to {
    transform: translateY(0em);
    text-underline-offset: 0em;
  }
  from {
    transform: translateY(-0.1em);
    text-underline-offset: 0.2em;
  }
}
@keyframes buttonIconAnimation {}
@keyframes buttonIconAnimation90 {
  from {
    transform: translateY(0em) rotate(90deg);
  }
  to {
    transform: translateY(-0.1em) rotate(90deg);
  }
}
.RadioButton {
  border: 1px solid black;
  position: relative;
}
.RadioButton > div {
  width: 100%;
  height: 100%;
  position: relative;
  align-items: center;
  display: flex;
  flex-direction: row;
  cursor: pointer;
}
.RadioButton > div > input {
  position: relative;
  margin-inline: 2%;
  cursor: pointer;
}
.RadioButton > div > div {
  position: relative;
  height: 100%;
}
.RadioButton > div > div[id*=Price] {
  font-size: 1em;
  margin-left: auto;
  margin-right: 5%;
}

/* Media Queries */
/* ------- */
/* Desktop */
/* ------- */
.DOMConverterMAINDIV {
  position: relative;
  width: 100%;
  height: 100%;
  border: 1px solid white;
  user-select: none;
  overflow: hidden;
}
.DOMConverterMAINDIV > div {
  box-sizing: border-box;
}
.DOMConverterMAINDIV > div > .EdgesDiv {
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  position: absolute;
}
.DOMConverterMAINDIV > div > .EdgesDiv > .DOMConverterEdge {
  position: absolute;
  width: 10px;
  height: 10px;
  background-color: white;
}
.DOMConverterMAINDIV > div > .EdgesDiv > .DOMConverterEdge[direction*=LT] {
  top: -10px;
  left: -10px;
}
.DOMConverterMAINDIV > div > .EdgesDiv > .DOMConverterEdge[direction*=MT] {
  top: -10px;
  left: calc(50% - 5px);
}
.DOMConverterMAINDIV > div > .EdgesDiv > .DOMConverterEdge[direction*=RT] {
  top: -10px;
  left: 100%;
}
.DOMConverterMAINDIV > div > .EdgesDiv > .DOMConverterEdge[direction*=RM] {
  top: calc(50% - 5px);
  left: 100%;
}
.DOMConverterMAINDIV > div > .EdgesDiv > .DOMConverterEdge[direction*=RB] {
  top: 100%;
  left: 100%;
}
.DOMConverterMAINDIV > div > .EdgesDiv > .DOMConverterEdge[direction*=MB] {
  top: 100%;
  left: calc(50% - 5px);
}
.DOMConverterMAINDIV > div > .EdgesDiv > .DOMConverterEdge[direction*=LB] {
  top: 100%;
  left: -10px;
}
.DOMConverterMAINDIV > div > .EdgesDiv > .DOMConverterEdge[direction*=LM] {
  top: calc(50% - 5px);
  left: -10px;
}
.DOMConverterMAINDIV > .imgContainer {
  cursor: move;
  position: absolute;
  border: 1px solid red;
  user-select: none;
}
.DOMConverterMAINDIV > .imgContainer > img {
  position: relative;
  width: 100%;
  height: 100%;
  user-select: none;
  pointer-events: none;
}

.ProductInformationMain > .content {
  position: relative;
  width: 80vw;
  height: 80vh;
  margin: 0;
}
.ProductInformationMain > .content > .container {
  position: relative;
  width: 100%;
  height: 100%;
  cursor: pointer;
  box-sizing: border-box !important;
}
.ProductInformationMain > .content > .container > .Lighter3D {
  cursor: pointer;
  position: relative;
  width: 100%;
  height: 100%;
  overflow: visible;
  box-sizing: content-box !important;
  transform: translateY(-5%);
}
.ProductInformationMain > .content > .container > .Lighter3D > canvas {
  transform: scale(1.05);
  cursor: pointer;
  box-sizing: content-box !important;
  overflow: visible;
}
.Converter3D {
  position: absolute;
  background-color: white;
  width: 500px;
  height: 750px;
  left: 100px;
  top: 100px;
  border: 1px solid black;
}

body {
  position: absolute;
  margin: 0 !important;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  padding-top: 0;
  overflow: hidden;
}
body > .Background {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(54, 54, 54, 0.379);
}

@media only screen and (max-width: 980px) {
  .editText_mobile > .background {
    background-color: rgba(28, 28, 28, 0.379);
  }
  .editText_mobile > .content {
    background-color: transparent;
    box-shadow: none;
    box-sizing: border-box;
    padding: 0;
  }
  .editText_mobile > .content > button > span {
    font-size: 4em;
    color: white;
  }
  .editText_mobile > .content > .TextInputDiv {
    box-sizing: border-box;
    width: 90vw;
    height: 50vh;
    margin: 0;
    margin-top: 10vh;
    background-color: transparent;
  }
  .editText_mobile > .content > .TextInputDiv > label {
    display: none;
  }
  .editText_mobile > .content > .TextInputDiv > textarea {
    padding: 0;
    background-color: transparent;
    box-sizing: border-box;
    overflow: auto;
    user-select: text !important;
    pointer-events: all !important;
    border: none;
    text-align: center;
    font-size: 4em;
    color: white;
  }
  .editText_mobile > .content > .TextInputDiv hr {
    display: none;
  }
}
@media only screen and (min-width: 1200px), only screen and (min-width: 981px) and (max-width: 1199px) {
  .Background3D {
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    pointer-events: all;
    background-color: transparent;
  }
  .Background3D > canvas {
    background-color: transparent;
  }
  .Conv_MAIN {
    position: relative;
    width: 100%;
    display: flex;
    justify-content: center;
    background-color: transparent;
    flex-direction: row;
    margin-left: auto;
    margin-right: auto;
    padding-top: 2vh;
    top: 6vh;
    height: 94vh;
    box-sizing: border-box;
    overflow: hidden !important;
  }
  .Conv_MAIN > div {
    margin-inline: 1%;
    overflow-x: visible;
  }
  .Conv_MAIN > .leftBar {
    transform: translateX(0px);
    transition: transform 0.4s ease-out;
    visibility: visible;
    position: relative;
    user-select: none;
    order: 1;
    width: 3%;
    top: calc(1vh + 1em);
    margin-right: 4rem;
  }
  .Conv_MAIN > .leftBar:not([loaded*=true]) {
    visibility: hidden;
    transform: translateX(-30rem);
  }
  .Conv_MAIN > .leftBar > .content {
    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
    border-radius: 0px;
    background-color: white;
    padding: 0.5em;
    min-width: min-content;
    max-width: fit-content;
    max-height: max-content;
    position: relative;
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    padding: 0.5em;
    gap: 2vh;
    height: max-content;
  }
  .Conv_MAIN > .leftBar > .content > button {
    position: relative;
    text-align: center;
    display: block;
  }
  .Conv_MAIN > .leftBar > .content > button > span {
    font-size: 3em;
  }
  .Conv_MAIN > .leftBar > .content > button[state*=active] > span {
    color: #ffa228;
  }
  .Conv_MAIN > .leftBar > .content > button .dropdown {
    margin-left: 30%;
  }
  .Conv_MAIN > .leftBar > .content > button .dropdown > div .n_RadioButton {
    border: none;
    position: relative;
    border-radius: 0px;
    overflow: hidden;
  }
  .Conv_MAIN > .leftBar > .content > button .dropdown > div .n_RadioButton > .inner {
    display: flex;
    flex-direction: column;
    justify-content: left;
    align-items: flex-start;
  }
  .Conv_MAIN > .leftBar > .content > button .dropdown > div .n_RadioButton > .inner > hr {
    display: none;
  }
  .Conv_MAIN > .leftBar > .content > button .dropdown > div .n_RadioButton > .inner > div {
    font-size: 1.2rem;
    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
    border-radius: 0px;
    background-color: white;
    padding: 0.5em;
    box-sizing: border-box;
    height: calc(100% - 1.4rem);
    margin-bottom: 0.2rem;
  }
  .Conv_MAIN > .leftBar > .content > button .dropdown > div .n_RadioButton > .inner > div:hover {
    background-color: #FFAD5B;
  }
  .Conv_MAIN > .leftBar > .content > button .dropdown > div .n_RadioButton > .inner > div > .inputBody {
    width: 0;
    padding: 0;
    margin: 0;
    position: absolute;
  }
  .Conv_MAIN > .leftBar > .content > button .dropdown > div .n_RadioButton > .inner > div > .inputBody > span {
    display: none;
  }
  .Conv_MAIN > .leftBar > .content > input {
    display: none;
  }
  .Conv_MAIN > .EditorFrame {
    position: relative;
    border: none;
    order: 2;
    display: block;
    height: 100%;
    padding: 1%;
    overflow: visible;
  }
  .Conv_MAIN > .EditorFrame > .square-border-div {
    top: 3%;
    position: relative;
    box-sizing: border-box;
    display: block;
    margin-left: auto;
    margin-right: auto;
    background-color: transparent;
    overflow: visible;
  }
  .Conv_MAIN > .EditorFrame > .square-border-div > .Lighter3D {
    position: absolute;
    top: -22%;
    left: -24%;
    width: 148%;
    height: 148%;
    overflow: visible;
  }
  .Conv_MAIN > .EditorFrame > .square-border-div[state*=active] > #square-border {
    box-shadow: inset 0px 0px 0px 1px gray;
  }
  .Conv_MAIN > .EditorFrame > .square-border-div[state*=passive] > #square-border {
    box-shadow: none;
  }
  .Conv_MAIN > .EditorFrame > .square-border-div > canvas {
    position: absolute;
    font-kerning: normal;
    text-rendering: optimizeLegibility;
    letter-spacing: normal;
    overflow: hidden;
    image-rendering: crisp-edges;
    width: 100%;
    height: 100%;
  }
  .Conv_MAIN > .EditorFrame > .square-border-div > canvas[state*=passive] {
    opacity: 0.1;
  }
  .Conv_MAIN > .EditorFrame > .square-border-div > canvas[state*=active] {
    opacity: 1.5;
  }
  .Conv_MAIN > .Conv_RightBar {
    order: 3;
    flex-grow: 0;
    flex-shrink: 5;
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: stretch;
    height: 100%;
    width: 30%;
    box-sizing: content-box;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main {
    box-sizing: content-box;
    position: relative;
    overflow-x: visible;
    width: 100%;
    top: 1vh;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > div {
    position: relative;
    width: 50%;
    height: 100%;
    box-sizing: border-box;
    overflow: visible;
    overflow-y: auto;
    overflow-x: visible;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement {
    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
    border-radius: 0px;
    background-color: white;
    padding: 0.5em;
    position: relative;
    padding: 0.5em;
    width: 90%;
    margin: 5%;
    box-sizing: border-box;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement > .expanderBody {
    position: relative;
    width: 100%;
    margin-top: -0.25em;
    padding: 0;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement .S-SliderMain {
    margin-top: 0.4em;
    margin-bottom: 0.4em;
    height: auto;
    max-height: max-content;
    overflow: visible;
    transition: all 0.3s ease-in;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement .S-SliderMain[drawDivider=true]::after {
    content: "";
    display: block;
    width: 100%;
    height: 0px;
    background: transparent;
    border-bottom: 1px solid #d9d9d9;
    left: 0;
    margin-top: 0.25em;
    position: relative;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement .S-SliderMain[drawDivider=true]::before {
    content: "";
    display: block;
    width: 100%;
    height: 0px;
    background: transparent;
    border-top: 1px solid #d9d9d9;
    left: 0;
    margin-bottom: 0.2em;
    position: relative;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement .S-SliderMain > .label {
    position: relative;
    width: 100%;
    display: inline-block;
    box-sizing: border-box;
    text-align: left;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement .S-SliderMain > .contentBody {
    height: 1em;
    display: flex;
    width: 100%;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement .S-SliderMain > .contentBody > .sliderBody {
    order: 1;
    height: 100%;
    width: 100%;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement .S-SliderMain > .contentBody > .sliderBody > input[type=range] {
    width: 100%;
    position: relative;
    font-size: 1em;
    height: 100%;
    display: inline-block;
    outline: none;
    -webkit-appearance: none;
    transition: box-shadow 0.2s ease;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement .S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-runnable-track {
    box-sizing: border-box;
    width: 100%;
    height: 0.15em;
    background: black;
    border: none;
    border-radius: 10px;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement .S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    border: none;
    vertical-align: baseline;
    height: 1em;
    width: 0.5em;
    margin-top: -0.425em;
    background: #ffa228;
    box-sizing: border-box;
    transition: box-shadow 0.2s ease;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement .S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus {
    outline: none;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement .S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus::-webkit-slider-thumb {
    box-shadow: rgba(255, 162, 40, 0.45) 0px 0px 3px, rgba(255, 162, 40, 0.41) 0px 0px 3px;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement .S-SliderMain > .contentBody > .sliderBody > input[type=range]:hover::-webkit-slider-runnable-track {
    box-shadow: rgba(128, 128, 128, 0.15) 0px 0px 3px, rgba(128, 128, 128, 0.11) 0px 0px 3px;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement .S-SliderMain > .contentBody > .sliderBody > datalist {
    display: none;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement .S-SliderMain > .contentBody > .valueOutput {
    position: relative;
    order: 2;
    font-size: 1.1em;
    height: max-content;
    top: -0.1em;
    width: 1.5em;
    display: inline-block;
    box-sizing: border-box;
    text-align: center;
    margin-top: auto;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement .S-SliderMain > .contentBody > .valueOutput[hidden=true] {
    display: none;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text {
    position: relative;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text[state*=passive] {
    height: 6em;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text[state*=passive] > .S-SliderMain {
    display: none;
    overflow: hidden;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text[state*=passive] > .TextInputDiv {
    height: calc(100% - 1.5em);
    box-sizing: content-box;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text[state*=passive] > .buttonsDiv {
    display: none;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text[state*=passive] > .DropDownInputMain_S {
    display: none;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text > .TextInputDiv {
    position: relative;
    overflow: hidden;
    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
    margin: 0;
    height: fit-content;
    overflow: auto;
    max-height: 20em;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text > .TextInputDiv > * {
    box-sizing: border-box;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text > .TextInputDiv > label, .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text > .TextInputDiv hr {
    display: none;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text > .TextInputDiv > textarea {
    position: relative;
    border: none;
    resize: none;
    overflow: hidden;
    box-sizing: border-box;
    height: auto;
    width: 100%;
    padding-top: 0.5em;
    padding-bottom: 0.5em;
    padding-left: 0.5em;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text > .buttonsDiv {
    display: flex;
    justify-content: space-between;
    margin-top: 0.5em;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text > .buttonsDiv > .AlignDiv {
    display: flex;
    border: 1px solid lightgray;
    border-radius: 0px;
    padding: 0.2em;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text > .buttonsDiv > .AlignDiv > button {
    display: flex;
    align-items: center;
    flex-direction: row;
    flex-wrap: nowrap;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text > .DropDownInputMain_S {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text .S-SliderMain {
    margin-top: 0.4em;
    margin-bottom: 0.4em;
    height: auto;
    max-height: max-content;
    overflow: visible;
    transition: all 0.3s ease-in;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text .S-SliderMain[drawDivider=true]::after {
    content: "";
    display: block;
    width: 100%;
    height: 0px;
    background: transparent;
    border-bottom: 1px solid #d9d9d9;
    left: 0;
    margin-top: 0.25em;
    position: relative;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text .S-SliderMain[drawDivider=true]::before {
    content: "";
    display: block;
    width: 100%;
    height: 0px;
    background: transparent;
    border-top: 1px solid #d9d9d9;
    left: 0;
    margin-bottom: 0.2em;
    position: relative;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text .S-SliderMain > .label {
    position: relative;
    width: 100%;
    display: inline-block;
    box-sizing: border-box;
    text-align: left;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text .S-SliderMain > .contentBody {
    height: 2.1em;
    display: flex;
    flex-direction: column;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text .S-SliderMain > .contentBody > .sliderBody {
    order: 1;
    height: 100%;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text .S-SliderMain > .contentBody > .sliderBody > input[type=range] {
    width: 100%;
    position: relative;
    font-size: 1em;
    height: 100%;
    display: inline-block;
    outline: none;
    -webkit-appearance: none;
    transition: box-shadow 0.2s ease;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text .S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-runnable-track {
    box-sizing: border-box;
    width: 100%;
    height: 0.15em;
    background: black;
    border: none;
    border-radius: 10px;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text .S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    border: none;
    vertical-align: baseline;
    height: 1em;
    width: 0.5em;
    margin-top: -0.425em;
    background: #ffa228;
    box-sizing: border-box;
    transition: box-shadow 0.2s ease;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text .S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus {
    outline: none;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text .S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus::-webkit-slider-thumb {
    box-shadow: rgba(255, 162, 40, 0.45) 0px 0px 3px, rgba(255, 162, 40, 0.41) 0px 0px 3px;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text .S-SliderMain > .contentBody > .sliderBody > input[type=range]:hover::-webkit-slider-runnable-track {
    box-shadow: rgba(128, 128, 128, 0.15) 0px 0px 3px, rgba(128, 128, 128, 0.11) 0px 0px 3px;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text .S-SliderMain > .contentBody > .sliderBody > datalist {
    display: none;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text .S-SliderMain > .contentBody > .valueOutput {
    position: relative;
    order: 2;
    font-size: 1.1em;
    height: 1.1em;
    top: -0.1em;
    width: 1.5em;
    display: inline-block;
    box-sizing: border-box;
    text-align: center;
    margin-top: auto;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_TextMain > .ToolBar_ListElement_Text .S-SliderMain > .contentBody > .valueOutput[hidden=true] {
    display: none;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_ImageMain > .ToolBar_ListElement {
    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
    border-radius: 0px;
    background-color: white;
    padding: 0.5em;
    position: relative;
    padding: 0.5em;
    width: 90%;
    margin: 5%;
    box-sizing: border-box;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_ImageMain > .ToolBar_ListElement > .expanderBody {
    position: relative;
    width: 100%;
    margin-top: -0.25em;
    padding: 0;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_ImageMain > .ToolBar_ListElement .S-SliderMain {
    margin-top: 0.4em;
    margin-bottom: 0.4em;
    height: auto;
    max-height: max-content;
    overflow: visible;
    transition: all 0.3s ease-in;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_ImageMain > .ToolBar_ListElement .S-SliderMain[drawDivider=true]::after {
    content: "";
    display: block;
    width: 100%;
    height: 0px;
    background: transparent;
    border-bottom: 1px solid #d9d9d9;
    left: 0;
    margin-top: 0.25em;
    position: relative;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_ImageMain > .ToolBar_ListElement .S-SliderMain[drawDivider=true]::before {
    content: "";
    display: block;
    width: 100%;
    height: 0px;
    background: transparent;
    border-top: 1px solid #d9d9d9;
    left: 0;
    margin-bottom: 0.2em;
    position: relative;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_ImageMain > .ToolBar_ListElement .S-SliderMain > .label {
    position: relative;
    width: 100%;
    display: inline-block;
    box-sizing: border-box;
    text-align: left;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_ImageMain > .ToolBar_ListElement .S-SliderMain > .contentBody {
    height: 1em;
    display: flex;
    width: 100%;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_ImageMain > .ToolBar_ListElement .S-SliderMain > .contentBody > .sliderBody {
    order: 1;
    height: 100%;
    width: 100%;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_ImageMain > .ToolBar_ListElement .S-SliderMain > .contentBody > .sliderBody > input[type=range] {
    width: 100%;
    position: relative;
    font-size: 1em;
    height: 100%;
    display: inline-block;
    outline: none;
    -webkit-appearance: none;
    transition: box-shadow 0.2s ease;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_ImageMain > .ToolBar_ListElement .S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-runnable-track {
    box-sizing: border-box;
    width: 100%;
    height: 0.15em;
    background: black;
    border: none;
    border-radius: 10px;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_ImageMain > .ToolBar_ListElement .S-SliderMain > .contentBody > .sliderBody > input[type=range]::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    border: none;
    vertical-align: baseline;
    height: 1em;
    width: 0.5em;
    margin-top: -0.425em;
    background: #ffa228;
    box-sizing: border-box;
    transition: box-shadow 0.2s ease;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_ImageMain > .ToolBar_ListElement .S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus {
    outline: none;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_ImageMain > .ToolBar_ListElement .S-SliderMain > .contentBody > .sliderBody > input[type=range]:focus::-webkit-slider-thumb {
    box-shadow: rgba(255, 162, 40, 0.45) 0px 0px 3px, rgba(255, 162, 40, 0.41) 0px 0px 3px;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_ImageMain > .ToolBar_ListElement .S-SliderMain > .contentBody > .sliderBody > input[type=range]:hover::-webkit-slider-runnable-track {
    box-shadow: rgba(128, 128, 128, 0.15) 0px 0px 3px, rgba(128, 128, 128, 0.11) 0px 0px 3px;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_ImageMain > .ToolBar_ListElement .S-SliderMain > .contentBody > .sliderBody > datalist {
    display: none;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_ImageMain > .ToolBar_ListElement .S-SliderMain > .contentBody > .valueOutput {
    position: relative;
    order: 2;
    font-size: 1.1em;
    height: max-content;
    top: -0.1em;
    width: 1.5em;
    display: inline-block;
    box-sizing: border-box;
    text-align: center;
    margin-top: auto;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_ImageMain > .ToolBar_ListElement .S-SliderMain > .contentBody > .valueOutput[hidden=true] {
    display: none;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_ImageMain > .ToolBar_ListElement_Image {
    position: relative;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_ImageMain > .ToolBar_ListElement_Image[state*=passive] > .S-SliderMain {
    max-height: 0px;
    margin: 0;
    overflow: hidden;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_ImageMain > .ToolBar_ListElement_Image[state*=passive] > .buttonsDiv {
    max-height: 0px;
    margin: 0;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_ImageMain > .ToolBar_ListElement_Image > .imgDiv {
    display: block;
    box-sizing: border-box;
    position: relative;
    width: 100%;
    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_ImageMain > .ToolBar_ListElement_Image > .imgDiv > img {
    box-sizing: border-box;
    position: relative;
    width: 100%;
    display: block;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_ImageMain > .ToolBar_ListElement_Image > .imgDiv > .spinner {
    margin: 0;
    position: absolute;
    z-index: 1;
    box-sizing: border-box;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: transparent;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_ImageMain > .ToolBar_ListElement_Image > .imgDiv > .spinner[state*=active] {
    visibility: visible;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_ImageMain > .ToolBar_ListElement_Image > .imgDiv > .spinner > div {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    position: relative;
    aspect-ratio: 1/1;
    display: block;
    width: auto;
    height: auto;
    max-height: 100%;
    max-width: 100%;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main > .ToolBar_ImageMain > .ToolBar_ListElement_Image > .buttonsDiv {
    display: flex;
    justify-content: space-around;
    margin-top: 0.8vh;
    margin-bottom: 0.5vh;
    height: auto;
    max-height: max-content;
    overflow: hidden;
    transition: all 0.2s ease-in;
  }
  .Conv_MAIN > .Conv_RightBar > .ToolBar_Main {
    box-sizing: content-box;
    user-select: none;
    overflow-x: visible;
    overflow-y: hidden;
    margin: 0em;
    padding: 0;
    flex-grow: 1;
    display: flex;
    height: 100%;
    position: relative;
    width: 100%;
  }
  .Conv_MAIN > .Conv_RightBar > .ConverterMainButtons {
    user-select: none;
    flex-grow: 1;
    position: relative;
    height: max-content;
    display: flex;
    justify-content: stretch;
  }
  .Conv_MAIN > .Conv_RightBar > .ConverterMainButtons > .content {
    position: relative;
    display: flex;
    width: 100%;
    height: max-content;
    box-sizing: border-box;
  }
  .Conv_MAIN > .Conv_RightBar > .ConverterMainButtons > .content > button {
    position: relative;
    cursor: pointer;
    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
    border-radius: 0px;
    background-color: white;
    padding: 0.5em;
    border: none;
    padding: 2rem;
    margin: 0.5rem;
    user-select: auto;
    pointer-events: auto;
  }
  .Conv_MAIN > .Conv_RightBar > .ConverterMainButtons > .content > button > span {
    user-select: auto;
    pointer-events: auto;
    font-size: 2rem;
  }
  .Conv_MAIN > .Conv_RightBar > .ConverterMainButtons > .content > button.buy {
    transform: translateX(0px);
    transition: transform 0.4s ease-out;
    visibility: visible;
    width: 100%;
    user-select: auto;
    pointer-events: auto;
    background-color: #FFAD5B;
  }
  .Conv_MAIN > .Conv_RightBar > .ConverterMainButtons > .content > button.buy:not([loaded*=true]) {
    visibility: hidden;
    transform: translateX(40rem);
  }
  .Conv_MAIN > .Conv_RightBar > .ConverterMainButtons > .content > button.buy:hover {
    background-color: #ffa228;
  }
  .Conv_MAIN > .Conv_RightBar > .ConverterMainButtons > .content > button.cart {
    transform: translateY(0px);
    transition: transform 0.4s ease-out;
    visibility: visible;
  }
  .Conv_MAIN > .Conv_RightBar > .ConverterMainButtons > .content > button.cart:not([loaded*=true]) {
    visibility: hidden;
    transform: translateY(20rem);
  }
}
@media only screen and (max-width: 980px) {
  .Background3D {
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    pointer-events: all;
    background-color: transparent;
  }
  .Background3D > canvas {
    background-color: transparent;
  }
  .Conv_MAIN {
    position: relative;
    width: 100vw;
    display: flex;
    justify-content: center;
    box-sizing: border-box;
    flex-direction: column;
    margin-left: auto;
    margin-right: auto;
    top: 6%;
    height: 94vh;
    overflow: hidden !important;
  }
  .Conv_MAIN > .EditorFrame {
    position: relative;
    border: none;
    order: 1;
    display: block;
    height: 100%;
    top: 0;
    left: 5%;
    width: 90%;
    margin: 2%;
    margin: 0;
    box-sizing: border-box;
    overflow: visible;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
  .Conv_MAIN > .EditorFrame > .square-border-div {
    background-color: transparent !important;
    top: 0%;
    width: 90%;
    position: relative;
    box-sizing: border-box;
    display: block;
    margin-left: auto;
    margin-right: auto;
    background-color: transparent;
    overflow: visible;
  }
  .Conv_MAIN > .EditorFrame > .square-border-div > .Lighter3D {
    position: absolute;
    top: -22%;
    left: -24%;
    width: 148%;
    height: 148%;
    overflow: visible;
  }
  .Conv_MAIN > .EditorFrame > .square-border-div > .Lighter3D > canvas {
    background-color: transparent !important;
  }
  .Conv_MAIN > .EditorFrame > .square-border-div[state*=active] > #square-border {
    box-shadow: inset 0px 0px 0px 1px gray;
  }
  .Conv_MAIN > .EditorFrame > .square-border-div[state*=passive] > #square-border {
    box-shadow: none;
  }
  .Conv_MAIN > .EditorFrame > .square-border-div > canvas {
    position: absolute;
    font-kerning: normal;
    text-rendering: optimizeLegibility;
    letter-spacing: normal;
    overflow: hidden;
    image-rendering: crisp-edges;
    width: 100%;
    height: 100%;
  }
  .Conv_MAIN > .EditorFrame > .square-border-div > canvas[state*=passive] {
    opacity: 0.1;
  }
  .Conv_MAIN > .EditorFrame > .square-border-div > canvas[state*=active] {
    opacity: 1.5;
  }
  .Conv_MAIN > .Conv_RightBar {
    display: none !important;
  }
  .Conv_MAIN > .leftBar {
    display: none !important;
  }
  .Conv_MAIN > .converter-bottom-bar {
    position: relative;
    margin: 0;
    margin: 0.5em;
    width: calc(100% - 1em);
    height: max-content;
    max-height: 10%;
    overflow: visible;
    box-sizing: content-box;
    order: 2;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main {
    width: 100%;
    box-sizing: content-box;
    height: max-content;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main > .conv_bottom_bar_std {
    position: relative;
    height: max-content;
    display: flex;
    padding: 0.5em;
    background-color: white;
    border-radius: 0px;
    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
    justify-content: space-between;
    box-sizing: border-box;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main > .conv_bottom_bar_std > input {
    display: none;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main > .conv_bottom_bar_std > button {
    overflow: visible;
    box-sizing: border-box;
    padding: 0.2em;
    aspect-ratio: 1/1;
    height: 100%;
    display: block;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main > .conv_bottom_bar_std > button > span {
    font-size: 10vw;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main > .conv_bottom_bar_std > button.buy {
    display: none;
    position: relative;
    cursor: pointer;
    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
    border-radius: 0px;
    background-color: white;
    padding: 0.5em;
    border: none;
    margin: 1em;
    user-select: auto;
    pointer-events: auto;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main > .conv_bottom_bar_std > button.buy > span {
    user-select: auto;
    pointer-events: auto;
    font-size: 2em;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main > .conv_bottom_bar_std > button > .converter-bottomBar-floatingDiv.aligned {
    pointer-events: none;
    bottom: 1em;
    left: 0;
    height: auto;
    width: 100%;
    overflow: visible;
    box-sizing: content-box;
    position: relative;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main > .conv_bottom_bar_std > button > .converter-bottomBar-floatingDiv.aligned > div {
    position: absolute;
    left: 50%;
    transform: translate(-50%, -100%);
    height: max-content;
    width: max-content;
    box-sizing: content-box;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    overflow: visible;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main > .conv_bottom_bar_std > button > .converter-bottomBar-floatingDiv.aligned > div > * {
    position: relative;
    pointer-events: all;
    height: max-content;
    width: 100%;
    background-color: white;
    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
    padding: 1%;
    margin: auto;
    margin-top: 5%;
    margin-bottom: 5%;
    box-sizing: content-box;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main > .conv_bottom_bar_std > button > .converter-bottomBar-floatingDiv.aligned > div > input {
    display: none;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main > .conv_bottom_bar_std > button > .converter-bottomBar-floatingDiv.aligned > div > button {
    aspect-ratio: 1/1;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main > .conv_bottom_bar_std > button > .converter-bottomBar-floatingDiv.aligned > div > button span {
    font-size: 10vw;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main > .conv_bottom_bar_std > button > .converter-bottomBar-floatingDiv.aligned > div > button span > * {
    font-size: 1em !important;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main > .conv_bottom_bar_std > button > .converter-bottomBar-floatingDiv.aligned[name*=buttons_Text] > div > button > span {
    font-size: 3vw;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main > .conv_bottom_bar_std > .content {
    max-height: 100%;
    height: 100%;
    overflow: hidden;
    display: flex;
    box-sizing: border-box;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main > .conv_bottom_bar_std > .content > button {
    overflow: visible;
    box-sizing: border-box;
    padding-inline: 0.1em;
    height: 100%;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main > .conv_bottom_bar_std > .content > button > span {
    font-size: 10vw;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main > .conv_bottom_bar_std > .content > button.toCart {
    aspect-ratio: 1/1;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main > .conv_bottom_bar_std > .content > button.buy {
    white-space: nowrap;
    height: calc(100% + 10em);
    margin: auto;
    padding: auto;
    background-color: #ffa228;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main > .conv_bottom_bar_std > .content > button.buy > span {
    height: 100%;
    font-size: 8vw;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] {
    background-color: transparent;
    border-radius: 0px 0px;
    box-shadow: none;
    box-sizing: border-box;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottom-bar-image-main {
    position: relative;
    width: 100%;
    display: flex;
    box-sizing: border-box;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottom-bar-image-main > * {
    box-sizing: border-box;
    padding: 1em;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottom-bar-image-main > .buttonsDiv {
    margin-left: 0.3em;
    padding: 0.5em;
    background-color: white;
    border-radius: 0px;
    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
    box-sizing: border-box;
    display: flex;
    justify-content: space-around;
    position: relative;
    width: 100%;
    height: 100%;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottom-bar-image-main > .buttonsDiv > button > span {
    font-size: 10vw;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottom-bar-image-main > .buttonsDiv > button > .converter-bottomBar-floatingDiv.aligned {
    pointer-events: none;
    bottom: 1em;
    left: 0;
    height: auto;
    width: 100%;
    overflow: visible;
    box-sizing: content-box;
    position: relative;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottom-bar-image-main > .buttonsDiv > button > .converter-bottomBar-floatingDiv.aligned > div {
    position: absolute;
    left: 50%;
    transform: translate(-50%, -100%);
    height: max-content;
    width: max-content;
    box-sizing: content-box;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    overflow: visible;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottom-bar-image-main > .buttonsDiv > button > .converter-bottomBar-floatingDiv.aligned > div > * {
    position: relative;
    pointer-events: all;
    height: max-content;
    width: 100%;
    background-color: white;
    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
    padding: 1%;
    margin: auto;
    margin-top: 5%;
    margin-bottom: 5%;
    box-sizing: content-box;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottom-bar-image-main > .buttonsDiv > button > .converter-bottomBar-floatingDiv.aligned > div > input {
    display: none;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottom-bar-image-main > .buttonsDiv > button > .converter-bottomBar-floatingDiv.aligned > div > button {
    aspect-ratio: 1/1;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottom-bar-image-main > .buttonsDiv > button > .converter-bottomBar-floatingDiv.aligned > div > button span {
    font-size: 10vw;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottom-bar-image-main > .buttonsDiv > button > .converter-bottomBar-floatingDiv.aligned > div > button span > * {
    font-size: 1em !important;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottom-bar-image-main > .buttonsDiv > button > .converter-bottomBar-floatingDiv.aligned[name*=buttons_Text] > div > button > span {
    font-size: 3vw;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottom-bar-image-main > button {
    padding: 0.5em;
    user-select: none;
    background-color: white;
    border-radius: 0px;
    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
    position: relative;
    box-sizing: border-box;
    top: 0;
    left: 0;
    padding-inline: 0;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottom-bar-image-main > button > span {
    font-size: 10vw;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottomBar-floatingDiv.block {
    pointer-events: none;
    bottom: 100%;
    left: 0;
    height: max-content;
    width: 100%;
    overflow: visible;
    box-sizing: border-box;
    position: absolute;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottomBar-floatingDiv.block > div {
    position: relative;
    height: max-content;
    width: 100%;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    overflow: visible;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottomBar-floatingDiv.block > div > .S-SliderMain {
    text-align: center;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottomBar-floatingDiv.block > div > .S-SliderMain > .label {
    width: max-content;
    margin-left: auto;
    margin-right: auto;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottomBar-floatingDiv.block > div > .S-SliderMain > .contentBody {
    margin-left: auto;
    margin-right: auto;
    width: 90%;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottomBar-floatingDiv.block > div > .S-SliderMain > .contentBody > .sliderBody {
    width: 100%;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottomBar-floatingDiv.block > div > .S-SliderMain > .contentBody > .valueOutput {
    width: max-content;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottomBar-floatingDiv.block > div > * {
    position: relative;
    pointer-events: all;
    user-select: none;
    height: max-content;
    width: 100%;
    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
    background-color: white;
    margin-bottom: 2%;
    box-sizing: border-box;
    border-radius: 0px;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottomBar-floatingDiv.block > div > * > label {
    font-size: 0.75em;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottomBar-floatingDiv.block > div > * > div {
    display: flex;
    justify-content: stretch;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottomBar-floatingDiv.block > div > * > div > input {
    cursor: pointer;
    width: 100%;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottomBar-floatingDiv.block > div > button span {
    font-size: 10vw;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottomBar-floatingDiv.block[name*=textAlignSlider] > div {
    flex-direction: row;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottomBar-floatingDiv.block[name*=fontFamilySlideShow] {
    height: 5em;
    overflow: visible;
    width: 100vw;
    left: -2%;
    background-color: transparent;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottomBar-floatingDiv.block[name*=fontFamilySlideShow] > div {
    height: 5em;
    background-color: transparent;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottomBar-floatingDiv.block[name*=fontFamilySlideShow] > div > div {
    box-shadow: none;
    scrollbar-width: 0;
    background-color: transparent;
    height: 100%;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottomBar-floatingDiv.block[name*=fontFamilySlideShow] > div > div::-webkit-scrollbar {
    display: none;
    width: 0;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottomBar-floatingDiv.block[name*=fontFamilySlideShow] > div > div ::-webkit-scrollbar {
    display: none;
    width: 0;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottomBar-floatingDiv.block[name*=fontFamilySlideShow] > div > div:-webkit-scrollbar {
    display: none;
    width: 0;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottomBar-floatingDiv.block[name*=fontFamilySlideShow] > div > div > div > div {
    cursor: pointer;
    user-select: none;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottomBar-floatingDiv.block[name*=fontFamilySlideShow] > div > div > div > div[state*=active] {
    background-color: orange;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottomBar-floatingDiv.block[name*=fontFamilySlideShow] > div > div > div > div > div > span[id*=Arial] {
    font-family: Arial;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottomBar-floatingDiv.block[name*=fontFamilySlideShow] > div > div > div > div > div > span[id*=Impact] {
    font-family: Impact;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=image] > .converter-bottomBar-floatingDiv.block[name*=fontFamilySlideShow] > div > div > div > div > div > span[id*=Roboto] {
    font-family: G-Roboto;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] {
    background-color: transparent;
    border-radius: 0px 0px;
    box-shadow: none;
    box-sizing: border-box;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottom-bar-text-main {
    position: relative;
    width: 100%;
    display: flex;
    box-sizing: border-box;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottom-bar-text-main > * {
    box-sizing: border-box;
    padding: 0.5em;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottom-bar-text-main > .buttonsDiv {
    box-shadow: inset 25px 0px 25px -25px rgba(0, 0, 0, 0.45), inset -25px 0px 25px -25px rgba(0, 0, 0, 0.45);
    overflow: auto;
    overflow-y: visible;
    background-color: white;
    border-radius: 0px;
    box-sizing: border-box;
    display: flex;
    justify-content: left;
    position: relative;
    width: 100%;
    height: 100%;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottom-bar-text-main > .buttonsDiv::-webkit-scrollbar {
    display: none;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottom-bar-text-main > .buttonsDiv > button {
    box-sizing: border-box;
    padding-inline: 0.1em;
    aspect-ratio: 1/1;
    height: 100%;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottom-bar-text-main > .buttonsDiv > button > span {
    font-size: 10vw;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottom-bar-text-main > .buttonsDiv > button > .converter-bottomBar-floatingDiv.aligned {
    pointer-events: none;
    bottom: 1em;
    left: 0;
    height: auto;
    width: 100%;
    overflow: visible;
    box-sizing: content-box;
    position: relative;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottom-bar-text-main > .buttonsDiv > button > .converter-bottomBar-floatingDiv.aligned > div {
    position: absolute;
    left: 50%;
    transform: translate(-50%, -100%);
    height: max-content;
    width: max-content;
    box-sizing: content-box;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    overflow: visible;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottom-bar-text-main > .buttonsDiv > button > .converter-bottomBar-floatingDiv.aligned > div > * {
    position: relative;
    pointer-events: all;
    height: max-content;
    width: 100%;
    background-color: white;
    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
    padding: 1%;
    margin: auto;
    margin-top: 5%;
    margin-bottom: 5%;
    box-sizing: content-box;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottom-bar-text-main > .buttonsDiv > button > .converter-bottomBar-floatingDiv.aligned > div > input {
    display: none;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottom-bar-text-main > .buttonsDiv > button > .converter-bottomBar-floatingDiv.aligned > div > button {
    aspect-ratio: 1/1;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottom-bar-text-main > .buttonsDiv > button > .converter-bottomBar-floatingDiv.aligned > div > button span {
    font-size: 10vw;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottom-bar-text-main > .buttonsDiv > button > .converter-bottomBar-floatingDiv.aligned > div > button span > * {
    font-size: 1em !important;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottom-bar-text-main > .buttonsDiv > button > .converter-bottomBar-floatingDiv.aligned[name*=buttons_Text] > div > button > span {
    font-size: 3vw;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottom-bar-text-main > button {
    margin-right: 0.3em;
    user-select: none;
    background-color: white;
    border-radius: 0px;
    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
    position: relative;
    top: 0;
    left: 0;
    padding-inline: 0;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottom-bar-text-main > button > span {
    font-size: 10vw;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottomBar-floatingDiv.block {
    pointer-events: none;
    bottom: 100%;
    left: 0;
    height: max-content;
    width: 100%;
    overflow: visible;
    box-sizing: border-box;
    position: absolute;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottomBar-floatingDiv.block > div {
    position: relative;
    height: max-content;
    width: 100%;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    overflow: visible;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottomBar-floatingDiv.block > div > .S-SliderMain {
    text-align: center;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottomBar-floatingDiv.block > div > .S-SliderMain > .label {
    width: max-content;
    margin-left: auto;
    margin-right: auto;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottomBar-floatingDiv.block > div > .S-SliderMain > .contentBody {
    margin-left: auto;
    margin-right: auto;
    width: 90%;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottomBar-floatingDiv.block > div > .S-SliderMain > .contentBody > .sliderBody {
    width: 100%;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottomBar-floatingDiv.block > div > .S-SliderMain > .contentBody > .valueOutput {
    width: max-content;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottomBar-floatingDiv.block > div > * {
    position: relative;
    pointer-events: all;
    user-select: none;
    height: max-content;
    width: 100%;
    box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 3px, rgba(0, 0, 0, 0.11) 0px 0px 3px;
    background-color: white;
    margin-bottom: 2%;
    box-sizing: border-box;
    border-radius: 0px;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottomBar-floatingDiv.block > div > * > label {
    font-size: 0.75em;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottomBar-floatingDiv.block > div > * > div {
    display: flex;
    justify-content: stretch;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottomBar-floatingDiv.block > div > * > div > input {
    cursor: pointer;
    width: 100%;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottomBar-floatingDiv.block > div > button span {
    font-size: 10vw;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottomBar-floatingDiv.block[name*=textAlignSlider] > div {
    flex-direction: row;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottomBar-floatingDiv.block[name*=fontFamilySlideShow] {
    height: 5em;
    overflow: visible;
    width: 100vw;
    left: -2%;
    background-color: transparent;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottomBar-floatingDiv.block[name*=fontFamilySlideShow] > div {
    height: 5em;
    background-color: transparent;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottomBar-floatingDiv.block[name*=fontFamilySlideShow] > div > div {
    box-shadow: none;
    scrollbar-width: 0;
    background-color: transparent;
    height: 100%;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottomBar-floatingDiv.block[name*=fontFamilySlideShow] > div > div::-webkit-scrollbar {
    display: none;
    width: 0;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottomBar-floatingDiv.block[name*=fontFamilySlideShow] > div > div ::-webkit-scrollbar {
    display: none;
    width: 0;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottomBar-floatingDiv.block[name*=fontFamilySlideShow] > div > div:-webkit-scrollbar {
    display: none;
    width: 0;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottomBar-floatingDiv.block[name*=fontFamilySlideShow] > div > div > div > div {
    cursor: pointer;
    user-select: none;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottomBar-floatingDiv.block[name*=fontFamilySlideShow] > div > div > div > div[state*=active] {
    background-color: orange;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottomBar-floatingDiv.block[name*=fontFamilySlideShow] > div > div > div > div > div > span[id*=Arial] {
    font-family: Arial;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottomBar-floatingDiv.block[name*=fontFamilySlideShow] > div > div > div > div > div > span[id*=Impact] {
    font-family: Impact;
  }
  .Conv_MAIN > .converter-bottom-bar > .conv_BottomBar_Main[name*=text] > .converter-bottomBar-floatingDiv.block[name*=fontFamilySlideShow] > div > div > div > div > div > span[id*=Roboto] {
    font-family: G-Roboto;
  }
}
.SubWindow_FontFamily > .content > .TableMain > .ListMain {
  display: flex;
  flex-direction: column;
}
.SubWindow_FontFamily > .content > .TableMain > .ListMain > .ListElement:hover {
  background-color: #fff1de;
}
.SubWindow_FontFamily > .content > .TableMain > .ListMain > .ListElement[state*=active] {
  background-color: #FFAD5B;
}/*# sourceMappingURL=converter.css.map */